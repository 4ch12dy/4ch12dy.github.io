<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>4ch12dy</title>
  
  <subtitle>当梦想全都被take away</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/"/>
  <updated>2019-09-22T17:36:43.626Z</updated>
  <id>https://github.com/4ch12dy/4ch12dy.github.io.git/</id>
  
  <author>
    <name>4ch12dy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>又又又又一个脱壳工具来了</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/23/lldb-dumpdecrypted/lldb-dumpdecrypted/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/23/lldb-dumpdecrypted/lldb-dumpdecrypted/</id>
    <published>2019-09-22T17:12:12.000Z</published>
    <updated>2019-09-22T17:36:43.626Z</updated>
    
    <content type="html"><![CDATA[<h3 id="又又又又一个脱壳工具来了"><a href="#又又又又一个脱壳工具来了" class="headerlink" title="又又又又一个脱壳工具来了"></a>又又又又一个脱壳工具来了</h3><p>是的，又又又又一个脱壳工具来了：LLDB调试器版本的脱壳工具</p><h4 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h4><p>我能想到的场景就是最近分析一个app的时候会在<code>mod_init_func</code>的时候crash，这样导致现有的脱壳工具无法正常脱壳，或者之前Frida没兼容iOS12以及其他特殊场景。所以就做了LLDB中的脱壳工具。</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>由于在LLDB中脱壳的特殊性，所以这样我介绍下如何去使用这个脱壳工具</p><blockquote><p>以下命令已集成到<a href="https://github.com/4ch12dy/xia0LLDB">xia0LLDB</a>或<a href="https://github.com/4ch12dy/issh">issh</a></p></blockquote><h5 id="以后台模式启动目标app"><a href="#以后台模式启动目标app" class="headerlink" title="以后台模式启动目标app"></a>以后台模式启动目标app</h5><pre><code>xia0 ~ $ issh debug -x backboard /var/containers/Bundle/Application/86E712C8-84CA-49AF-B2EA-01C37395A746/WeChat.app/WeChat[*]:iproxy process for 2222 port alive, pid=1830[*]:++++++++++++++++++ Nice to Work :) +++++++++++++++++++++[*]:iOSRE dir exist[*]:iproxy process for 1234 port alive, pid=14885[*]:Run ps -e | grep debugserver | grep -v grep; [[ 0 == 0 ]] &amp;&amp; (killall -9 debugserver 2&gt; /dev/null)[*]:/iOSRE/tools/debugserver file exist, Start debug...[*]:Run /iOSRE/tools/debugserver 127.0.0.1:1234 -x backboard /var/containers/Bundle/Application/86E712C8-84CA-49AF-B2EA-01C37395A746/WeChat.app/WeChat</code></pre><h5 id="连接到远端debugserver"><a href="#连接到远端debugserver" class="headerlink" title="连接到远端debugserver"></a>连接到远端debugserver</h5><pre><code>(lldb) pccProcess 19633 stopped  thread #1, stop reason = signal SIGSTOP    frame #0: 0x00000001200f5000 dyld`_dyld_startdyld`_dyld_start:    0x1200f5000 &lt;+0&gt;:  mov    x28, sp    0x1200f5004 &lt;+4&gt;:  and    sp, x28, #0xfffffffffffffff0    0x1200f5008 &lt;+8&gt;:  mov    x0, #0x0    0x1200f500c &lt;+12&gt;: mov    x1, #0x0    0x1200f5010 &lt;+16&gt;: stp    x1, x0, [sp, #-0x10]!    0x1200f5014 &lt;+20&gt;: mov    x29, sp    0x1200f5018 &lt;+24&gt;: sub    sp, sp, #0x10             ; =0x10    0x1200f501c &lt;+28&gt;: ldr    x0, [x28]Target 0: (dyld) stopped.</code></pre><h5 id="一些断点设置情况"><a href="#一些断点设置情况" class="headerlink" title="一些断点设置情况"></a>一些断点设置情况</h5><pre><code>(lldb) b getpidBreakpoint 1: no locations (pending).WARNING:  Unable to resolve breakpoint to any actual locations.(lldb) cProcess 19633 resuming1 location added to breakpoint 1Process 19633 stopped  thread #1, queue = &#39;com.apple.main-thread&#39;, stop reason = breakpoint 1.1    frame #0: 0x0000000181ceb570 libsystem_kernel.dylib getpidlibsystem_kernel.dylib getpid:    0x181ceb570 &lt;+0&gt;:  adrp   x9, 124120    0x181ceb574 &lt;+4&gt;:  add    x9, x9, #0x90             ; =0x90    0x181ceb578 &lt;+8&gt;:  ldr    w0, [x9]    0x181ceb57c &lt;+12&gt;: cmp    w0, #0x0                  ; =0x0    0x181ceb580 &lt;+16&gt;: b.ls   0x181ceb588               ; &lt;+24&gt;    0x181ceb584 &lt;+20&gt;: ret    0x181ceb588 &lt;+24&gt;: mov    x16, #0x14    0x181ceb58c &lt;+28&gt;: svc    #0x80Target 0: (WeChat) stopped.(lldb) xbr -E init[*] breakpoint at mod int first function:0x1034c7db8Breakpoint 2: where = WeChat ___lldb_unnamed_symbol143521$$WeChat, address = 0x00000001034c7db8(lldb) br disable 11 breakpoints disabled.(lldb) cProcess 19633 resuming</code></pre><p>这里解释一下为什么需要这么设置断点：<code>b getpid</code>这个断点主要是保证<code>xbr -E init</code>这个命令在断点触发的时候能够顺利执行，<code>xbr -E init</code>这个命令能够解析内存中的MachO格式找到<code>mod_init_func</code>然后对第一个init函数下断点，这样保证是目前app的最早执行时机，另外还能指定下断点到main函数<code>xbr -E main</code>，由于main函数在init之后，所以一般就对init下断点（有种情况在于app可能没有init函数，这时候就需要对main下断点，这里按实际情况处理）。<br>这样下好断点以后，禁用或者删除第一个断点（第一个断点调用很频繁且后面不再需要），这样让程序继续执行，等待断点触发。</p><h5 id="执行dumpdecrypted命令进行脱壳"><a href="#执行dumpdecrypted命令进行脱壳" class="headerlink" title="执行dumpdecrypted命令进行脱壳"></a>执行dumpdecrypted命令进行脱壳</h5><pre><code>(lldb) dumpdecrypted[+] Dumping WeChat[+] detected 64bit ARM binary in memory.[+] offset to cryptid found: @0x100018d48(from 0x100018000) = d48[+] Found encrypted data at address 00004000 of length 101662720 bytes - type 1.[+] Opening /private/var/containers/Bundle/Application/86E712C8-84CA-49AF-B2EA-01C37395A746/WeChat.app/WeChat for reading.[+] Reading header[+] Detecting header type[+] Executable is a plain MACH-O image[+] Opening /var/mobile/Containers/Data/Application/9649276C-C413-4916-B5AB-AE13C8D7B652/Documents/WeChat.decrypted for writing.[+] Copying the not encrypted start of the file[+] Dumping the decrypted data into the file[+] Copying the not encrypted remainder of the file[+] Setting the LC_ENCRYPTION_INFO-&gt;cryptid to 0 at offset d48[+] Closing original file[+] Closing dump file[*] This mach-o file decrypted done.Developed By xia0@2019</code></pre><p>如果一切顺利，就能顺利完成脱壳，这里目标文件在 <code>/var/mobile/Containers/Data/Application/9649276C-C413-4916-B5AB-AE13C8D7B652/Documents/WeChat.decrypted</code></p><h5 id="取回脱壳后的文件到本地，这里用到了issh一条命令取回"><a href="#取回脱壳后的文件到本地，这里用到了issh一条命令取回" class="headerlink" title="取回脱壳后的文件到本地，这里用到了issh一条命令取回"></a>取回脱壳后的文件到本地，这里用到了issh一条命令取回</h5><pre><code>xia0 ~ $ issh scp /var/mobile/Containers/Data/Application/9649276C-C413-4916-B5AB-AE13C8D7B652/Documents/WeChat.decrypted /tmp[*]:iproxy process for 2222 port alive, pid=1830[*]:++++++++++++++++++ Nice to Work :) +++++++++++++++++++++[*]:/var/mobile/Containers/Data/Application/9649276C-C413-4916-B5AB-AE13C8D7B652/Documents/WeChat.decrypted is remote file, so cp it from deviceWeChat.decrypted                                                                                             100%  122MB  11.7MB/s   00:10</code></pre><h4 id="其他注意事项"><a href="#其他注意事项" class="headerlink" title="其他注意事项"></a>其他注意事项</h4><p>目标App文件过大，可能会出现加密段会有内存读取错误，解决办法就是手动在LLDB里面读取一下这个段内容，然后再执行就没问题了。</p><p>用到两个工具：</p><ul><li><a href="https://github.com/4ch12dy/issh">https://github.com/4ch12dy/issh</a></li><li><a href="https://github.com/4ch12dy/xia0LLDB">https://github.com/4ch12dy/xia0LLDB</a></li></ul><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://github.com/stefanesser/dumpdecrypted">https://github.com/stefanesser/dumpdecrypted</a></li><li><a href="https://github.com/AloneMonkey/dumpdecrypted">https://github.com/AloneMonkey/dumpdecrypted</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;又又又又一个脱壳工具来了&quot;&gt;&lt;a href=&quot;#又又又又一个脱壳工具来了&quot; class=&quot;headerlink&quot; title=&quot;又又又又一个脱壳工具来了&quot;&gt;&lt;/a&gt;又又又又一个脱壳工具来了&lt;/h3&gt;&lt;p&gt;是的，又又又又一个脱壳工具来了：LLDB调试器版本的脱壳工具
      
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
      <category term="lldb" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/lldb/"/>
    
  </entry>
  
  <entry>
    <title>深入理解iOS动态链接</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/14/iOS-dyld-dynamic-link/iOS-dyld-dynamic-link/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/14/iOS-dyld-dynamic-link/iOS-dyld-dynamic-link/</id>
    <published>2019-09-14T00:12:55.000Z</published>
    <updated>2019-09-16T03:03:52.135Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Need password to decrypt!" />    <label for="pass">Need password to decrypt!</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      something you can not kown 
    
    </summary>
    
      <category term="wiki" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/wiki/"/>
    
    
      <category term="iOS" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/iOS/"/>
    
      <category term="wiki" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/wiki/"/>
    
  </entry>
  
  <entry>
    <title>iOS微信快速备注好友插件分析与实现</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/11/appre-wechat-rename/appre-wechat-rename/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/11/appre-wechat-rename/appre-wechat-rename/</id>
    <published>2019-09-11T09:31:37.000Z</published>
    <updated>2019-09-18T08:53:04.265Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Need password to decrypt!" />    <label for="pass">Need password to decrypt!</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      something you can not kown 
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
      <category term="tweak" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/tweak/"/>
    
  </entry>
  
  <entry>
    <title>iOS inlinehook绕过反调试</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/10/anti-anti-debug-pro/anti-anti-debug-pro/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/10/anti-anti-debug-pro/anti-anti-debug-pro/</id>
    <published>2019-09-10T08:02:54.000Z</published>
    <updated>2019-09-10T09:14:15.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iOS-inlinehook绕过反调试"><a href="#iOS-inlinehook绕过反调试" class="headerlink" title="iOS inlinehook绕过反调试"></a>iOS inlinehook绕过反调试</h2><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>之前写过一篇<a href="http://4ch12dy.site/2019/08/12/xia0lldb-anti-anti-debug/xia0lldb-anti-anti-debug/" target="_blank" rel="external">iOS LLDB中基于内存单指令patch实现反反调试</a>介绍了在LLDB中如何通过单指令patch的方式去绕过<code>ptrace</code>来反调试。但后面还有一些情况没有解决：如果不是调用<code>ptrace</code>函数，而是直接编写内联汇编的方式，调用对应的系统调用来间接实现反调试，那么这种方式之前的那种办法就不再可行。本文就准备解决那种用内联汇编的反调试方式。</p><h3 id="两种绕过方案"><a href="#两种绕过方案" class="headerlink" title="两种绕过方案"></a>两种绕过方案</h3><p>这里有两种方案去绕过这种反调试：</p><ul><li>静态内存匹配特征patch</li><li>实现一个简单的inlinehook动态hook绕过</li></ul><h3 id="静态内存匹配特征patch"><a href="#静态内存匹配特征patch" class="headerlink" title="静态内存匹配特征patch"></a>静态内存匹配特征patch</h3><p>在介绍思路之前，先看下一遍内联汇编去实现反调试的代码</p><pre><code class="assembly">    asm volatile(                 &quot;mov x0,#31\n&quot;                 &quot;mov x1,#0\n&quot;                 &quot;mov x2,#0\n&quot;                 &quot;mov x3,#0\n&quot;                 &quot;mov x16,#26\n&quot;                 &quot;svc #128\n&quot;                 );</code></pre><p>这里可以看出原理就是调用了26号系统调用，那么我们是不是可以去代码段里面去搜索，找到满足该特征的代码位置，然后直接将<code>svc</code>置为 <code>nop</code>不就可以了？下面引出两个问题，如何去遍历代码段以及如何去修改？</p><h4 id="获取代码段位置以及大小"><a href="#获取代码段位置以及大小" class="headerlink" title="获取代码段位置以及大小"></a>获取代码段位置以及大小</h4><pre><code class="c">void getTextSegmentAddr(struct segmentRange *textSegRange){    int offset = 0;    struct mach_header_64* header = (struct mach_header_64*)_dyld_get_image_header(0);    if(header-&gt;magic != MH_MAGIC_64) {        return ;    }    offset = sizeof(struct mach_header_64);    int ncmds = header-&gt;ncmds;    while(ncmds--) {        /* go through all load command to find __TEXT segment*/        struct load_command * lcp = (struct load_command *)((uint8_t*)header + offset);        offset += lcp-&gt;cmdsize;        if(lcp-&gt;cmd == LC_SEGMENT_64) {            struct segment_command_64 * curSegment = (struct segment_command_64 *)lcp;            struct section_64* curSection = (struct section_64*)((uint8_t*)curSegment + sizeof(struct segment_command_64));            // check current section of segment is __TEXT?            if(!strcmp(curSection-&gt;segname, &quot;__TEXT&quot;) &amp;&amp; !strcmp(curSection-&gt;sectname, &quot;__text&quot;)){                uint64_t memAddr = curSection-&gt;addr;                textSegRange-&gt;start = memAddr + _dyld_get_image_vmaddr_slide(0);                textSegRange-&gt;end = textSegRange-&gt;start + curSection-&gt;size;                break;            }        }    }    return ;}</code></pre><p>代码不复杂，就是动态解析了自身内存里面的macho文件，根据macho文件格式找到代码段<code>LC_SEGMENT_64(_TEXT)</code>然后就能得到<code>__text</code>的开始位置以及大小。</p><h4 id="内存搜索匹配ptrace内联汇编代码"><a href="#内存搜索匹配ptrace内联汇编代码" class="headerlink" title="内存搜索匹配ptrace内联汇编代码"></a>内存搜索匹配ptrace内联汇编代码</h4><pre><code class="c">void* lookup_ptrace_svc(void* target_addr, uint64_t size){    uint8_t * p = (uint8_t*)target_addr;    for(int i = 0; i &lt; size ;i++ ){        /*         mov       x16, #0x1a -&gt; 0xd2800350         svc        #0x80 -&gt; 0xd4001001         */        if (*((uint32_t*)p) == 0xd2800350 &amp;&amp; *((uint32_t*)p+1) == 0xd4001001) {            return p;        }        p++;    }    return NULL;}</code></pre><p>传入的就是代码段的地址以及大小，然后遍历整个代码段，找到满足以下ptrace特征汇编代码</p><pre><code class="assembly"> mov       x16, #0x1a -&gt; 0xd2800350 svc        #0x80 -&gt; 0xd4001001</code></pre><p>然后就返回该地址。</p><h4 id="patch代码（将svc改为nop）"><a href="#patch代码（将svc改为nop）" class="headerlink" title="patch代码（将svc改为nop）"></a>patch代码（将svc改为nop）</h4><p><a href="http://4ch12dy.site/2019/08/12/xia0lldb-anti-anti-debug/xia0lldb-anti-anti-debug/" target="_blank" rel="external">iOS LLDB中基于内存单指令patch实现反反调试</a>这篇文章介绍了如何去patch代码的原理，但当时遇到一个bug：在iOS11/12上面patch会失败，后面我花了一段时间去分析了失败的原因，后来也写了一篇文章去记录了分析的过程，感兴趣的可以访问<a href="http://4ch12dy.site/2019/08/16/iOS12-remap-bug-analyze/iOS12-remap-bug-analyze/" target="_blank" rel="external">iOS12内存patch remap bug分析</a></p><p>这里我就直接给出patch的代码</p><pre><code class="c">uint8_t patch_ins_data[4] = {0x1f, 0x20, 0x03, 0xd5}; // noppatchCode(ptrace_svc_p+4, patch_ins_data , 4);</code></pre><p>完整流程代码如下</p><pre><code class="c">- (void)kill_anti_debug{    struct segmentRange textSegRange;    getTextSegmentAddr(&amp;textSegRange);    void* ptrace_svc_p = lookup_ptrace_svc((void*)textSegRange.start, textSegRange.end-textSegRange.start);    if (!ptrace_svc_p) {        ADDLOG(@&quot;[-] not found ptrace svc&quot;);        return;    }    ADDXLOG(@&quot;[+] found ptrace svc # address=%p&quot;, ptrace_svc_p);    char* ptrace_bytes = hex_dump((void*)ptrace_svc_p, 8);    ADDXLOG(@&quot;[+] read ptrace svc ins address:%p size:0x%x inst_bytes:%s&quot;, ptrace_svc_p, 8, ptrace_bytes);    free(ptrace_bytes);    ADDLOG(@&quot;[*] start to ptach ptrace svc to ret&quot;);    uint8_t patch_ins_data[4] = {0x1f, 0x20, 0x03, 0xd5};    patchCode(ptrace_svc_p+4, patch_ins_data , 4);    ADDLOG(@&quot;[*] ptach ptrace svc to nop done, read new value&quot;);    ptrace_bytes = hex_dump((void*)ptrace_svc_p, 8);    ADDXLOG(@&quot;[+] read ptrace svc ins address:%p size:0x%x inst_bytes:%s&quot;, ptrace_svc_p, 8, ptrace_bytes);    free(ptrace_bytes);}</code></pre><p>通过比对前后的代码就发现<code>svc</code>出地址的代码已经变成了<code>nop</code>从而绕过了反调试</p><h3 id="inlinehook动态hook绕过"><a href="#inlinehook动态hook绕过" class="headerlink" title="inlinehook动态hook绕过"></a>inlinehook动态hook绕过</h3><p>这种方式主要针对那些混淆了系统调用号或者其他编译版本，其绕过原理是直接hook svc指令，然后判断是否为26号系统调用（让其他系统调用正常执行），若满足就直接跳过svc指令。</p><p>整体流程代码如下</p><pre><code class="c">  struct segmentRange textSegRange;  getTextSegmentAddr(&amp;textSegRange);  void* svc_p = lookup_svc_ins((void*)textSegRange.start, textSegRange.end-textSegRange.start);  if (!svc_p) {      ADDLOG(@&quot;[-] not found svc&quot;);      return;  }  ADDXLOG(@&quot;[+] found svc # address=%p&quot;, svc_p);  char* svc_bytes = hex_dump((void*)svc_p, 4);  ADDXLOG(@&quot;[+] read ptrace svc ins address:%p size:0x%x inst_bytes:%s&quot;, svc_p, 4, svc_bytes);  free(svc_bytes);  xia0Hook(svc_p);</code></pre><p>同样遍历代码段找到所有的svc指令，然后进行hook，下面看hook的具体实现</p><pre><code class="c">bool xia0Hook(void* target_addr){     int len = (int)sysconf(_SC_PAGESIZE);    // 1. get target address page and patch offset    unsigned long page_start = (unsigned long) (target_addr) &amp; ~PAGE_MASK;    unsigned long patch_offset = (unsigned long)target_addr - page_start;    printf(&quot;[*] Target address:%p Page start:%p Patch offset:%p&quot;, target_addr, (void*)page_start, (void*)patch_offset);    // 2. map new page for patch    void *new = mmap(NULL, len, PROT_READ | PROT_WRITE, MAP_ANON | MAP_SHARED, -1, 0);    if (!new ){        printf(&quot;[-] mmap failed!&quot;);        return false;    }    // 3.copy target 4 ins to new page    int copy_size = 4*4;    void* copy_from_addr = target_addr - copy_size;    memcpy((void *)(new), copy_from_addr, copy_size);    /*     cmp x16, #0x1a     b.ne loc_not_ptrace_svc_jmp     ldr x17, #0x8     br x17     orig_svc_next_addr_1     orig_svc_next_addr_2     ldr x17, #0x8     br x17     orig_svc_addr_1     orig_svc_addr_2     */    uint64_t orig_svc_addr = (uint64_t)target_addr;    uint64_t orig_svc_next_addr = (uint64_t)(target_addr+1*4);    uint8_t check_jmp_data[] = {0x1f, 0x6a, 0x00, 0xf1, 0x51, 0x00, 0x00, 0x58, 0x20, 0x02, 0x1f, 0xd6, orig_svc_next_addr&amp;0xff, (orig_svc_next_addr&gt;&gt;8*1)&amp;0xff,  (orig_svc_next_addr&gt;&gt;8*2)&amp;0xff,  (orig_svc_next_addr&gt;&gt;8*3)&amp;0xff,  (orig_svc_next_addr&gt;&gt;8*4)&amp;0xff,  (orig_svc_next_addr&gt;&gt;8*5)&amp;0xff,  (orig_svc_next_addr&gt;&gt;8*6)&amp;0xff,  (orig_svc_next_addr&gt;&gt;8*7)&amp;0xff, 0x51, 0x00, 0x00, 0x58, 0x20, 0x02, 0x1f, 0xd6, orig_svc_addr&amp;0xff, (orig_svc_addr&gt;&gt;8*1)&amp;0xff,  (orig_svc_addr&gt;&gt;8*2)&amp;0xff,  (orig_svc_addr&gt;&gt;8*3)&amp;0xff,  (orig_svc_addr&gt;&gt;8*4)&amp;0xff,  (orig_svc_addr&gt;&gt;8*5)&amp;0xff,  (orig_svc_addr&gt;&gt;8*6)&amp;0xff,  (orig_svc_addr&gt;&gt;8*7)&amp;0xff};    int check_jmp_data_size = 10*4;    memcpy((void *)(new+4*4), check_jmp_data, check_jmp_data_size);    // 4.patch target address to jmp hook code    void* patch_addr = copy_from_addr;    uint64_t new_p = (uint64_t)new;    /*     ldr x16, #0x8     br x16     hook_code_addr_1     hook_code_addr_2     */    uint8_t patch_data[] = {0x50, 0x00, 0x00, 0x58, 0x00, 0x02, 0x1f, 0xd6,new_p&amp;0xff, (new_p&gt;&gt;8*1)&amp;0xff,  (new_p&gt;&gt;8*2)&amp;0xff,  (new_p&gt;&gt;8*3)&amp;0xff,  (new_p&gt;&gt;8*4)&amp;0xff,  (new_p&gt;&gt;8*5)&amp;0xff,  (new_p&gt;&gt;8*6)&amp;0xff,  (new_p&gt;&gt;8*7)&amp;0xff};    int patch_data_size = 4*4;    patchCode(patch_addr, patch_data, patch_data_size);    // 5. set new page to r-x    mprotect(new, len, PROT_READ | PROT_EXEC);    return true;}</code></pre><p>这里代码比较复杂，大致分为以下步骤</p><ul><li><p>map一页内存new，后面会将hook的代码写到里面</p></li><li><p>copy原svc前的四条指令保存到new页（目前没有进行相对寻址修复）</p></li><li><p>将hook判断的代码写到紧接着前面四条指令的后面，汇编代码大致如下</p><pre><code class="assembly"> cmp x16, #0x1a b.ne loc_not_ptrace_svc_jmp ldr x17, #0x8 br x17 orig_svc_next_addr_1 orig_svc_next_addr_2 ldr x17, #0x8 br x17 orig_svc_addr_1 orig_svc_addr_2</code></pre><p>就是简单的判断了系统调用号是否为26，若满足就跳到svc的下一条指令，若不是则跳回原svc指令以保证其他系统调用正常执行。</p></li><li><p>patch目标地址进行hook跳转，由于进行任意地址跳转需要4条指令大小，所以这里覆盖了svc前的四条指令</p><pre><code class="assembly"> ldr x16, #0x8 br x16 hook_code_addr_1 hook_code_addr_2</code></pre><p>这里就是在执行svc指令前使其跳转到我们的hook代码</p></li><li><p>最后将new这页设置为可读不可写可执行的页属性</p></li></ul><h3 id="总结-Todo"><a href="#总结-Todo" class="headerlink" title="总结/Todo"></a>总结/Todo</h3><p>其实对于这种inlinehook去绕过调试，后面发现已经有人已经实现了，因为只要实现了inlinehook，肯定能hook代码绕过。不过我这里主要是想去自己分析以及实现这里面的很多细节。因为hook框架由于要考虑到稳定，兼容等等因素，所以往往代码不是很直接。而这里通过仅仅实现绕过反调试的需求，所以代码都比较通俗易懂，原理来说都是一样的。只有自己去动手写了代码才发现里面的乐趣所在，比如如何去实现系统调用的判断？如何解决寄存器污染?如何去实现代码段patch？当然还有很多汇编级别的坑存在，踩坑解决坑同样有意思，这里就不一一介绍。</p><p>后面主要还有两个事需要做：</p><ul><li>相对寻址指令的修复问题，以及hook代码的稳定兼容扩展问题。</li><li>抽离相关代码，集成到<a href="https://github.com/4ch12dy/xia0LLDB">xia0LLDB</a>之中，真正实现调试器中一键绕过反调试。</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://stackoverflow.com/questions/25286221/how-to-find-text-segment-range-in-ios" target="_blank" rel="external">https://stackoverflow.com/questions/25286221/how-to-find-text-segment-range-in-ios</a></li><li><a href="https://github.com/coolstar/substitute">https://github.com/coolstar/substitute</a></li><li><a href="http://jmpews.github.io/2017/08/09/darwin/反调试及绕过/" target="_blank" rel="external">http://jmpews.github.io/2017/08/09/darwin/%E5%8F%8D%E8%B0%83%E8%AF%95%E5%8F%8A%E7%BB%95%E8%BF%87/</a></li><li><a href="http://4ch12dy.site/2019/08/16/iOS12-remap-bug-analyze/iOS12-remap-bug-analyze/" target="_blank" rel="external">http://4ch12dy.site/2019/08/16/iOS12-remap-bug-analyze/iOS12-remap-bug-analyze/</a></li><li><a href="http://4ch12dy.site/2019/08/12/xia0lldb-anti-anti-debug/xia0lldb-anti-anti-debug/" target="_blank" rel="external">http://4ch12dy.site/2019/08/12/xia0lldb-anti-anti-debug/xia0lldb-anti-anti-debug/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;iOS-inlinehook绕过反调试&quot;&gt;&lt;a href=&quot;#iOS-inlinehook绕过反调试&quot; class=&quot;headerlink&quot; title=&quot;iOS inlinehook绕过反调试&quot;&gt;&lt;/a&gt;iOS inlinehook绕过反调试&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
      <category term="debug" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/debug/"/>
    
      <category term="hook" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/hook/"/>
    
  </entry>
  
  <entry>
    <title>iOS MDM搭建实践指南</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/02/introduce-MDM-in-iOS/introduce-MDM-in-iOS/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/09/02/introduce-MDM-in-iOS/introduce-MDM-in-iOS/</id>
    <published>2019-09-02T04:03:24.000Z</published>
    <updated>2019-09-02T06:33:32.187Z</updated>
    
    <content type="html"><![CDATA[<h3 id="iOS-MDM搭建实践指南"><a href="#iOS-MDM搭建实践指南" class="headerlink" title="iOS MDM搭建实践指南"></a>iOS MDM搭建实践指南</h3><blockquote><p>本文只介绍在iOS平台搭建MDM相关</p></blockquote><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>MDM全称是移动设备管理，方便企业对员工的移动设备管理。在iOS中同样支持MDM功能，本文就介绍如何搭建MDM整个架构。实际上在2018年的时候我通过翻阅为数不多的资料，经过一番折腾才最终走通了整个流程。然而当时过于激动并没有写相关文档记录，经过一年没想到签名证书过期了，却忘记了整个搭建流程。于是重新回顾了一下，所以这次记录下整个过程，希望对后面的人有所帮助。</p><h4 id="整体流程"><a href="#整体流程" class="headerlink" title="整体流程"></a>整体流程</h4><ul><li><p>获取Vendor p12证书</p></li><li><p>制作服务端推送证书</p></li><li><p>生成并签名设备描述文件</p></li><li><p>MDM通信指令结构及原理分析</p></li><li><p>企业MDM最佳方案</p></li></ul><h4 id="获取Vendor-p12证书"><a href="#获取Vendor-p12证书" class="headerlink" title="获取Vendor p12证书"></a>获取Vendor p12证书</h4><ul><li><p>制作MDM Vendor CSR</p><p>1、打开钥匙串</p><p>2、选择钥匙串访问-&gt;证书助理-&gt;从证书颁发机构请求证书</p><p>3、填写相关信息</p><p>4 、保存在本地</p></li><li><p>上传CSR文件到Apple</p><p>访问<a href="https://developer.apple.com/account/ios/certificate/create页面" target="_blank" rel="external">https://developer.apple.com/account/ios/certificate/create页面</a></p><p>将CSR文件上传到页面，等待1-2个工作日。</p><p>这时候你下载<code>.cer</code>文件，保存为<code>mdmvendor.cer</code></p></li><li><p>导出MDM私钥</p><p>在钥匙串中打开<code>mdmvendor.cer</code>文件，然后右键选择导出并保存为<code>private.p12</code>文件</p></li></ul><p><strong>注意：这里生成的文件很重要，建议新建一个MDM目录保存</strong></p><h4 id="制作服务端推送证书"><a href="#制作服务端推送证书" class="headerlink" title="制作服务端推送证书"></a>制作服务端推送证书</h4><h5 id="生成证书签名请求文件"><a href="#生成证书签名请求文件" class="headerlink" title="生成证书签名请求文件"></a>生成证书签名请求文件</h5><ul><li>选择钥匙串访问-&gt;证书助理-&gt;从证书颁发机构请求证书</li><li>输入邮箱，姓名等信息</li><li>保存到本地为<code>push.csr</code></li></ul><h5 id="导出MDM私钥和Vendor证书"><a href="#导出MDM私钥和Vendor证书" class="headerlink" title="导出MDM私钥和Vendor证书"></a>导出MDM私钥和Vendor证书</h5><ul><li><p>取出私钥</p><p>执行下面的命令会要求输入<code>private.p12</code>的密码</p><pre><code class="bash">openssl pkcs12 -in private.p12 -nocerts -out key.pem</code></pre></li><li><p>去掉<code>private.p12</code>密码</p><pre><code class="bash">openssl rsa -in key.pem -out private.key</code></pre></li><li><p>取出证书文件</p><p>执行下面的命令会要求输入<code>private.p12</code>的密码</p><pre><code class="bash">openssl pkcs12 -in private.p12 -clcerts -nokeys -out cert.pem</code></pre></li><li><p>转为DES加密</p><pre><code class="bash">openssl x509 -in cert.pem -inform PEM -out mdm.cer -outform DES</code></pre></li></ul><h5 id="用mdmvendorsign工具生成applepush-csr"><a href="#用mdmvendorsign工具生成applepush-csr" class="headerlink" title="用mdmvendorsign工具生成applepush.csr"></a>用mdmvendorsign工具生成applepush.csr</h5><p>我们需要<a href="https://github.com/vineetchoudhary/Apple-iOS-MDM-Server">mdmvendorsign</a>工具中的<code>/vendor/</code>的相关代码文件，这里将上面的<code>private.key</code>, <code>push.csr</code>, 以及<code>mdm.cer</code>文件都复制到<code>/vendor/</code>目录。然后执行下面的命令</p><pre><code class="bash">python mdm_vendor_sign.py --key private.key --csr push.csr --mdm mdm.cer --out applepush.csr</code></pre><h5 id="从apple获取推送证书"><a href="#从apple获取推送证书" class="headerlink" title="从apple获取推送证书"></a>从apple获取推送证书</h5><p>将上面生成的<code>applepush.csr</code>文件上传到<a href="https://identity.apple.com/pushcert/" target="_blank" rel="external">Apple’s Push Certificates Portal</a></p><p>然后下载推送证书，下载回来的证书在钥匙串中打开，你会看到以下信息</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/introduce-MDM-in-iOS/image-20190829194559215.png?raw=true" alt="image-20190829194559215"></p><p>其中用户ID需要保存下来，后面会用到。并右键导出p12私钥。存为<code>mdm.p12</code></p><p>将导出的p12私钥用下面命令生成服务器推送证书</p><pre><code>openssl pkcs12 -in mdm.p12 -out PushCert.pem -nodes</code></pre><p>然后将<code>PushCert.pem</code>拷贝到<code>./Apple-iOS-MDM-Server/scripts/</code>目录</p><h4 id="生成并签名设备描述文件"><a href="#生成并签名设备描述文件" class="headerlink" title="生成并签名设备描述文件"></a>生成并签名设备描述文件</h4><h5 id="生成设备描述文件"><a href="#生成设备描述文件" class="headerlink" title="生成设备描述文件"></a>生成设备描述文件</h5><p> 用这个软件来制作<a href="https://itunes.apple.com/in/app/apple-configurator-2/id1037126344?mt=12" target="_blank" rel="external">Apple Configurator 2</a>描述文件，但是现在新版本不支持直接生产MDM的描述文件，只能先做一个通用的描述文件，然后再增加MDM相关的字段。</p><p>生成的大概模板如下：</p><pre><code class="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&lt;plist version=&quot;1.0&quot;&gt;&lt;dict&gt;    &lt;key&gt;ConsentText&lt;/key&gt;    &lt;dict&gt;        &lt;key&gt;default&lt;/key&gt;        &lt;string&gt;install to enble DiDi manage your device&lt;/string&gt;    &lt;/dict&gt;    &lt;key&gt;PayloadContent&lt;/key&gt;    &lt;array&gt;        &lt;dict&gt;            &lt;key&gt;PayloadCertificateFileName&lt;/key&gt;            &lt;string&gt;DevAuthCA.cer.der&lt;/string&gt;            &lt;key&gt;PayloadContent&lt;/key&gt;            &lt;data&gt;            MIIEFzCCAv+gAwIBAgIIZylBveTSpRowDQYJKoZIhvcNAQELBQAw            YjELMAkGA1UEBhMCVVMxEzARBgNVBAoTCkFwcGxlIEluYy4xJjAk            BgNVBAsTHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRYw            FAYDVQQDEw1BcHBsZSBSb290IENBMB4XDTEzMDQyOTE4NDA1NFoX            DTI4MDQyOTE4NDA1NFowgYsxOTA3BgNVBAMMMERldmVsb3BlciBB            dXRoZW50aWNhdGlvbiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEs            MCoGA1UECwwjQXBwbGUgV29ybGR3aWRlIERldmVsb3BlciBSZWxh            dGlvbnMxEzARBgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVT            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6rDzm76u            93aLqrS9hopNDa9oIjbzlWn62CLEsB4+GmzBJR6qK+ITfjbh6G0a            /etrPsB/LYqUU4WAJiiZZqMWCLTkvD061OoGQFlZEt7fJu0plH49            08rzTUA4nd81towql+yjYJH9wSGgvDfg2QpsvXd5c2ITTjgSUfZR            wSFHTYHA3Eoj/rpDuuar1RHxZsswxrdB8o8lHJuaShGHWFbsYfNC            FUmFMAxZbA3ppTYwcaAD8/KjUM3AeJbVqToz81QhEYmfMYFpsb8x            I5ae3MNmOlBaL169c+hUHFTtoUmzbRI1gnrXVKhLMsIpCngAvNEp            X85mEOCnN2NCJQrk3Ig5cQIDAQABo4GmMIGjMB0GA1UdDgQWBBRJ            9jYJuBsj+gNbtuqCoNldEBhnBjAPBgNVHRMBAf8EBTADAQH/MB8G            A1UdIwQYMBaAFCvQaUeUdgn+9GuNLkCm90dNfwheMC4GA1UdHwQn            MCUwI6AhoB+GHWh0dHA6Ly9jcmwuYXBwbGUuY29tL3Jvb3QuY3Js            MA4GA1UdDwEB/wQEAwIBBjAQBgoqhkiG92NkBgILBAIFADANBgkq            hkiG9w0BAQsFAAOCAQEA1fKJRhfZZspW9+GqK8+E6ciXbsABciYm            IvGy0snmeRN+e1KuFsoQmOXmdNY7SFvdb+2ZN/doOd5Es8hAih+3            VwHbac8YiFDXphpQshJJrtiOSBSsXBDgz0b4LjRqhtXdU9BB67nD            Q2/zZSNKxvIqXqqsPQiKv/tctQH7kr3ogmZ4GkqjGgHWEocbTfOF            pioDQ1xXP0eF/jn02cp9vnyAuyqpkybJYkaIAVUq2bRWV+9D6WLo            6/3X8AWOCj65GPgx+DLIDAD2yHJu1D9JuSqD5cD1AChpPUregUvi            Uszq4TyJ7LjHi4/w1jbWrlbeObEp2lNcKFTKIkeSZ88IE2b25g==            &lt;/data&gt;            &lt;key&gt;PayloadDescription&lt;/key&gt;            &lt;string&gt;添加 PKCS#1 格式的证书&lt;/string&gt;            &lt;key&gt;PayloadDisplayName&lt;/key&gt;            &lt;string&gt;Developer Authentication Certification Authority&lt;/string&gt;            &lt;key&gt;PayloadIdentifier&lt;/key&gt;            &lt;string&gt;com.apple.security.pkcs1.A742C668-A859-4DB9-B7AD-5913CDACD1C9&lt;/string&gt;            &lt;key&gt;PayloadType&lt;/key&gt;            &lt;string&gt;com.apple.security.pkcs1&lt;/string&gt;            &lt;key&gt;PayloadUUID&lt;/key&gt;            &lt;string&gt;A742C668-A859-4DB9-B7AD-5913CDACD1C9&lt;/string&gt;            &lt;key&gt;PayloadVersion&lt;/key&gt;            &lt;integer&gt;1&lt;/integer&gt;        &lt;/dict&gt;        &lt;dict&gt;            &lt;key&gt;PayloadCertificateFileName&lt;/key&gt;            &lt;string&gt;AppleWWDRCAG2.cer&lt;/string&gt;            &lt;key&gt;PayloadContent&lt;/key&gt;            &lt;data&gt;            MIIC9zCCAnygAwIBAgIIb+/Y9emjp+4wCgYIKoZIzj0EAwIwZzEb            MBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1B            cHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwK            QXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcNMTQwNTA2MjM0MzI0            WhcNMjkwNTA2MjM0MzI0WjCBgDE0MDIGA1UEAwwrQXBwbGUgV29y            bGR3aWRlIERldmVsb3BlciBSZWxhdGlvbnMgQ0EgLSBHMjEmMCQG            A1UECwwdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxEzAR            BgNVBAoMCkFwcGxlIEluYy4xCzAJBgNVBAYTAlVTMFkwEwYHKoZI            zj0CAQYIKoZIzj0DAQcDQgAE3fC3BkvP3XMEE8RDiQOTgPte9nSt            QmFSWAImUxnIYyIHCVJhysTZV+9tJmiLdJGMxPmAaCj8CWjwENrp            0C7JGqOB9zCB9DBGBggrBgEFBQcBAQQ6MDgwNgYIKwYBBQUHMAGG            Kmh0dHA6Ly9vY3NwLmFwcGxlLmNvbS9vY3NwMDQtYXBwbGVyb290            Y2FnMzAdBgNVHQ4EFgQUhLaEzDqGYnIWWZToGqO9SN863wswDwYD            VR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS7sN6hWDOImqSKmd6+            veuv2sskqzA3BgNVHR8EMDAuMCygKqAohiZodHRwOi8vY3JsLmFw            cGxlLmNvbS9hcHBsZXJvb3RjYWczLmNybDAOBgNVHQ8BAf8EBAMC            AQYwEAYKKoZIhvdjZAYCDwQCBQAwCgYIKoZIzj0EAwIDaQAwZgIx            ANmxxzHGI/ZPTdDZR8V9GGkRh3En02it4Jtlmr5s3z9GppAJvm6h            OyywUYlBPIfSvwIxAPxkUolLPF2/axzCiZgvcq61m6oaCyNUd1To            FUOixRLal1BzfF7QbrJcYlDXUfE6Wg==            &lt;/data&gt;            &lt;key&gt;PayloadDescription&lt;/key&gt;            &lt;string&gt;添加 PKCS#1 格式的证书&lt;/string&gt;            &lt;key&gt;PayloadDisplayName&lt;/key&gt;            &lt;string&gt;Apple Worldwide Developer Relations CA - G2&lt;/string&gt;            &lt;key&gt;PayloadIdentifier&lt;/key&gt;            &lt;string&gt;com.apple.security.pkcs1.32A40F6B-24FA-4026-9BF6-66AED47CEC40&lt;/string&gt;            &lt;key&gt;PayloadType&lt;/key&gt;            &lt;string&gt;com.apple.security.pkcs1&lt;/string&gt;            &lt;key&gt;PayloadUUID&lt;/key&gt;            &lt;string&gt;32A40F6B-24FA-4026-9BF6-66AED47CEC40&lt;/string&gt;            &lt;key&gt;PayloadVersion&lt;/key&gt;            &lt;integer&gt;1&lt;/integer&gt;        &lt;/dict&gt;        &lt;dict&gt;            &lt;key&gt;PayloadCertificateFileName&lt;/key&gt;            &lt;string&gt;AppleRootCA-G2.cer&lt;/string&gt;            &lt;key&gt;PayloadContent&lt;/key&gt;            &lt;data&gt;            MIIFkjCCA3qgAwIBAgIIAeDltYNno+AwDQYJKoZIhvcNAQEMBQAw            ZzEbMBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEcyMSYwJAYDVQQL            DB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UE            CgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcNMTQwNDMwMTgx            MDA5WhcNMzkwNDMwMTgxMDA5WjBnMRswGQYDVQQDDBJBcHBsZSBS            b290IENBIC0gRzIxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRp            b24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYD            VQQGEwJVUzCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB            ANgREkhI2imKScUcx+xuM23+TfvgHN6sXuI2pyT5f1BrTM65MFQn            5bPW7SXmMLYFN14UIhHF6Kob0vuy0gmVOKTvKkmMXT5xZgM4+xb1            hYjkWpIMBDLyyED7Ul+f9sDx47pFoFDVEovy3d6RhiPw9bZyLgHa            C/YuOQhfGaFjQQscp5TBhsRTL3b2CtcM0YM/GlMZ81fVJ3/8E7j4            ko380yhDPLVoACVdJ2LT3VXdRCCQgzWTxb+4Gftr49wIQuavbfqe            QMpOhYV4SbHXw8EwOTKrfl+q04tvny0aIWhwZ7Oj8ZhBbZF8+Nfb            qOdfIRqMM78xdLe40fTgIvS/cjTf94FNcX1RoeKz8NMoFnNvzcyt            N31O661A4T+B/fc9Cj6i8b0xlilZ3MIZgIxbdMYs0xBTJh0UT8TU            gWY8h2czJxQI6bR3hDRSj4n4aJgXv8O7qhOTH11UL6jHfPsNFL4V            PSQ08prcdUFmIrQB1guvkJ4M6mL4m1k8COKWNORj3rw31OsMiAND            C1CvoDTdUE0V+1ok2Az6DGOeHwOx4e7hqkP0ZmUoNwIx7wHHHtHM            n23KVDpA287PT0aLSmWaasZobNfMmRtHsHLDd4/E92GcdB/O/Wuh            wpyUgquUoue9G7q5cDmVF8Up8zlYNPXEpMZ7YLlmQ1A/bmH8DvmG            qmAMQ0uVAgMBAAGjQjBAMB0GA1UdDgQWBBTEmRNsGAPCe8CjoA1/            coB6HHcmjTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB            BjANBgkqhkiG9w0BAQwFAAOCAgEAUabz4vS4PZO/Lc4Pu1vhVRRO            TtHlznldgX/+tvCHM/jvlOV+3Gp5pxy+8JS3ptEwnMgNCnWefZKV            fhidfsJxaXwU6s+DDuQUQp50DhDNqxq6EWGBeNjxtUVAeKuowM77            fWM3aPbn+6/Gw0vsHzYmE1SGlHKy6gLti23kDKaQwFd1z4xCfVzm            MX3zybKSaUYOiPjjLUKyOKimGY3xn83uamW8GrAlvacp/fQ+onVJ            v57byfenHmOZ4VxG/5IFjPoeIPmGlFYl5bRXOJ3riGQUIUkhOb9i            ZqmxospvPyFgxYnURTbImHy99v6ZSYA7LNKmp4gDBDEZt7Y6YUX6            yfIjyGNzv1aJMbDZfGKnexWoiIqrOEDCzBL/FePwN983csvMmOa/            orz6JopxVtfnJBtIRD6e/J/JzBrsQzwBvDR4yGn1xuZW7AYJNpDr            FEobXsmII9oDMJELuDY++ee1KG++P+w8j2Ud5cAeh6Squpj9kuNs            JnfdBrRkBof0Tta6SqoWqPQFZ2aWuuJVecMsXUmPgEkrihLHdoBR            37q9ZV0+N0djMenl9MU/S60EinpxLK8JQzcPqOMyT/RFtm2XNuyE            9QoB6he7hY1Ck3DDUOUUi78/w0EP3SIEIwiKum1xRKtzCTrJ+VKA            Cd+66eYWyi4uTLLT3OUEVLLUNIAytbwPF+E=            &lt;/data&gt;            &lt;key&gt;PayloadDescription&lt;/key&gt;            &lt;string&gt;添加 CA 根证书&lt;/string&gt;            &lt;key&gt;PayloadDisplayName&lt;/key&gt;            &lt;string&gt;Apple Root CA - G2&lt;/string&gt;            &lt;key&gt;PayloadIdentifier&lt;/key&gt;            &lt;string&gt;com.apple.security.root.A0BB6B15-2A9E-47B8-9EC2-871F1C04DE8E&lt;/string&gt;            &lt;key&gt;PayloadType&lt;/key&gt;            &lt;string&gt;com.apple.security.root&lt;/string&gt;            &lt;key&gt;PayloadUUID&lt;/key&gt;            &lt;string&gt;A0BB6B15-2A9E-47B8-9EC2-871F1C04DE8E&lt;/string&gt;            &lt;key&gt;PayloadVersion&lt;/key&gt;            &lt;integer&gt;1&lt;/integer&gt;        &lt;/dict&gt;        &lt;dict&gt;            &lt;key&gt;Password&lt;/key&gt;            &lt;string&gt;yourPWD&lt;/string&gt;            &lt;key&gt;PayloadCertificateFileName&lt;/key&gt;            &lt;string&gt;Identity.p12&lt;/string&gt;            &lt;key&gt;PayloadContent&lt;/key&gt;            &lt;data&gt;            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            e96ah6AF/AQIVFgg47LiiYwCAggA            &lt;/data&gt;            &lt;key&gt;PayloadDescription&lt;/key&gt;            &lt;string&gt;添加 PKCS#12 格式的证书&lt;/string&gt;            &lt;key&gt;PayloadDisplayName&lt;/key&gt;            &lt;string&gt;Identity.p12&lt;/string&gt;            &lt;key&gt;PayloadIdentifier&lt;/key&gt;            &lt;string&gt;com.apple.security.pkcs12.E61D7ED5-850A-4F2E-B191-F99E40846FF6&lt;/string&gt;            &lt;key&gt;PayloadType&lt;/key&gt;            &lt;string&gt;com.apple.security.pkcs12&lt;/string&gt;            &lt;key&gt;PayloadUUID&lt;/key&gt;            &lt;string&gt;E61D7ED5-850A-4F2E-B191-F99E40846FF6&lt;/string&gt;            &lt;key&gt;PayloadVersion&lt;/key&gt;            &lt;integer&gt;1&lt;/integer&gt;        &lt;/dict&gt;    &lt;/array&gt;    &lt;key&gt;PayloadDescription&lt;/key&gt;    &lt;string&gt;MDM enbale server manage your device&lt;/string&gt;    &lt;key&gt;PayloadDisplayName&lt;/key&gt;    &lt;string&gt;XXX MDM&lt;/string&gt;    &lt;key&gt;PayloadIdentifier&lt;/key&gt;    &lt;string&gt;com.apple.mgmt.External.3a3c70d4-cc4f-4713-xxxx-f38d6fd7xxxx&lt;/string&gt;    &lt;key&gt;PayloadOrganization&lt;/key&gt;    &lt;string&gt;XXX&lt;/string&gt;    &lt;key&gt;PayloadRemovalDisallowed&lt;/key&gt;    &lt;false/&gt;    &lt;key&gt;PayloadType&lt;/key&gt;    &lt;string&gt;Configuration&lt;/string&gt;    &lt;key&gt;PayloadUUID&lt;/key&gt;    &lt;string&gt;D633CDFE-9806-4224-AD38-7FE0CAB12163&lt;/string&gt;    &lt;key&gt;PayloadVersion&lt;/key&gt;    &lt;integer&gt;1&lt;/integer&gt;&lt;/dict&gt;&lt;/plist&gt;</code></pre><p>上面直接用那个工具填写相关信息并导入相关证书就能生成，但是真正的MDM策略相关需要手动添加一个字典如下：</p><pre><code class="xml">&lt;dict&gt;            &lt;key&gt;AccessRights&lt;/key&gt;            &lt;integer&gt;8191&lt;/integer&gt;            &lt;key&gt;CheckInURL&lt;/key&gt;            &lt;string&gt;https://mdmapi.demo.com/checkin&lt;/string&gt;            &lt;key&gt;CheckOutWhenRemoved&lt;/key&gt;            &lt;true/&gt;            &lt;key&gt;IdentityCertificateUUID&lt;/key&gt;            &lt;string&gt;E61D7ED5-850A-4F2E-B191-F99E40846FF6&lt;/string&gt;            &lt;key&gt;PayloadDescription&lt;/key&gt;            &lt;string&gt;Configures MobileDeviceManagement.&lt;/string&gt;            &lt;key&gt;PayloadIdentifier&lt;/key&gt;            &lt;string&gt;com.apple.mdm.2C62A547-9CA9-4D5A-AF86-0DF2467274EF&lt;/string&gt;            &lt;key&gt;PayloadOrganization&lt;/key&gt;            &lt;string&gt;Developer Insider&lt;/string&gt;            &lt;key&gt;PayloadType&lt;/key&gt;            &lt;string&gt;com.apple.mdm&lt;/string&gt;            &lt;key&gt;PayloadUUID&lt;/key&gt;            &lt;string&gt;E7438708-331E-4E68-99BC-3B9B435DF3DC&lt;/string&gt;            &lt;key&gt;PayloadVersion&lt;/key&gt;            &lt;integer&gt;1&lt;/integer&gt;            &lt;key&gt;ServerURL&lt;/key&gt;            &lt;string&gt;https://mdmapi.demo.com/server&lt;/string&gt;            &lt;key&gt;SignMessage&lt;/key&gt;            &lt;true/&gt;            &lt;key&gt;Topic&lt;/key&gt;            &lt;string&gt;com.apple.mgmt.External.3a3c70d4-cc4f-4713-xxxx-f38d6fd7xxxx&lt;/string&gt;            &lt;key&gt;UseDevelopmentAPNS&lt;/key&gt;            &lt;false/&gt;        &lt;/dict&gt;</code></pre><p>这里简单说几个比较重点的字段</p><table><thead><tr><th style="text-align:left">KEY</th><th style="text-align:left">TYPE</th><th style="text-align:left">DESCRIPTION</th></tr></thead><tbody><tr><td style="text-align:left">IdentityCertificateUUID</td><td style="text-align:left">String</td><td style="text-align:left"><em>Mandatory.</em> UUID of the certificate payload for the device’s identity. It may also point to a SCEP payload. You need to use the <code>PayloadUUID</code> of the <code>identity.p12</code> in this field.</td></tr><tr><td style="text-align:left">PayloadUUID</td><td style="text-align:left">String</td><td style="text-align:left"><em>Mandatory.</em> Here you need to generate a UUID. You can use <code>uuidgen</code> to generate an UUID and then copy paste that UUID in this field. UUID looks like this 34995C2E-XXXX-XXXX-XXXX-D6DB637A1D6E</td></tr><tr><td style="text-align:left">PayloadIdentifier</td><td style="text-align:left">String</td><td style="text-align:left">Here you need to append the UUID in after <code>com.apple.mdm.</code> which we generated in last step. Your payload identifier looks like this com.apple.mdm.34995C2E-XXXX-XXXX-XXXX-D6DB637A1D6E</td></tr><tr><td style="text-align:left">Topic</td><td style="text-align:left">String</td><td style="text-align:left"><em>Mandatory.</em> The topic that MDM listens to for push notifications. The certificate that the server uses to send push notifications must have the same topic in its subject. The topic must begin with the <code>com.apple.mgmt.External.hexstuffhere...</code> prefix.</td></tr><tr><td style="text-align:left">ServerURL</td><td style="text-align:left">String</td><td style="text-align:left"><em>Mandatory.</em> The URL that the device contacts to retrieve device management instructions. Must begin with the <code>https://</code> URL scheme, and may contain a port number (<code>https://YOUR_HOSTNAME_OR_IP:PORT/server</code>, for example).</td></tr><tr><td style="text-align:left">CheckInURL</td><td style="text-align:left">String</td><td style="text-align:left"><em>Optional.</em> The URL that the device should use to check in during installation. Must begin with the <code>https://</code> URL scheme and may contain a port number (<code>https://YOUR_HOSTNAME_OR_IP:8080/checkin</code>, for example). If this URL is not given, the <code>ServerURL</code> is used for both purposes.</td></tr><tr><td style="text-align:left">CheckOutWhenRemoved</td><td style="text-align:left">Boolean</td><td style="text-align:left"><em>Optional.</em> If <code>true</code>, the device attempts to send a <code>CheckOut</code>message to the check-in server when the profile is removed. Defaults to <code>false</code>.</td></tr><tr><td style="text-align:left">AccessRights</td><td style="text-align:left">Integer, flags</td><td style="text-align:left"><em>Required.</em> Logical OR of the following bit-flags:1: Allow inspection of installed configuration profiles.2: Allow installation and removal of configuration profiles.4: Allow device lock and passcode removal.8: Allow device erase.16: Allow query of Device Information (device capacity, serial number).32: Allow query of Network Information (phone/SIM numbers, MAC addresses).64: Allow inspection of installed provisioning profiles.128: Allow installation and removal of provisioning profiles.256: Allow inspection of installed applications.512: Allow restriction-related queries.1024: Allow security-related queries.2048: Allow manipulation of settings.4096: Allow app management.May not be zero. If 2 is specified, 1 must also be specified. If 128 is specified, 64 must also be specified.</td></tr><tr><td style="text-align:left">UseDevelopmentAPNS</td><td style="text-align:left">Boolean</td><td style="text-align:left"><em>Optional.</em> If <code>true</code>, the device uses the development APNS servers. Otherwise, the device uses the production servers. Defaults to <code>false</code>. Note that this property must be set to false if your Apple Push Notification Service certificate was issued by the <a href="https://identity.apple.com/pushcert" target="_blank" rel="external">Apple Push Certificate Portal</a>. That portal only issues certificates for the production push environment.</td></tr></tbody></table><ul><li><p>IdentityCertificateUUID：这个UUID是<code>identity.p12</code>的<code>PayloadUUID</code>。关于<code>identity.p12</code>这里其实是一个设备标识的证书，这个证书可能不知道怎么制作。其实用自签的签名就行。制作流程如下</p><p>生成自签证书（生成2046位的加密私钥）</p><pre><code>openssl genrsa -out server.key 2048</code></pre><p>生成自签证书（生成证书签名请求）</p><pre><code>openssl req -new -key server.key -out server.csr</code></pre><p>生成自签证书（生成类型为X509的自签名证书）</p><pre><code>openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt</code></pre><p>这时候我们有<code>server.key</code>、<code>server.csr</code>、<code>server.crt</code>三个文件</p><p>然后将<code>server.crt</code>复制生成两个文件并命名：<code>identity.crt</code>、<code>server.crt</code></p><p>同样将<code>server.key</code>复制生成两个文件并命名：<code>cakey.key</code>、<code>identity.key</code></p><p>最后将<code>server.csr</code>重命名为<code>identity.csr</code></p><p>然后用<a href="https://github.com/vineetchoudhary/Apple-iOS-MDM-Server/blob/master/scripts/make_certs.sh">make_certs.sh</a>生成<code>Identity.p12</code></p></li><li><p>AccessRights：这个字段会在安装描述文件的时候提示申请了哪些权限，并且这里是按位与运算</p></li><li><p>CheckInURL以及ServerURL涉及到后面MDM设备、苹果APNS、服务器三方通信相关</p></li></ul><h5 id="签名描述文件"><a href="#签名描述文件" class="headerlink" title="签名描述文件"></a>签名描述文件</h5><p>在签名前建议先对未签名的描述文件进行通信测试，保证在未签名之前安装描述文件以后服务端能够正常发送指令通信。</p><p>这里的签名仅仅是为了部署描述文件，和MDM本身并不相关，所以事实上可以用任意一个证书进行签名，但为了保证是公司发布的描述文件，建议用公司的iOS开发证书即可。这里提供两个工具</p><ul><li><a href="https://github.com/JeremyAgost/Hancock">Hancock App</a></li><li><a href="https://github.com/nmcspadden/ProfileSigner">ProfileSigner</a></li></ul><p>使用比较简单，这里不再介绍。</p><h4 id="MDM通信指令结构及原理分析"><a href="#MDM通信指令结构及原理分析" class="headerlink" title="MDM通信指令结构及原理分析"></a>MDM通信指令结构及原理分析</h4><p>暂位，后面有时间再补充</p><h4 id="企业MDM最佳方案"><a href="#企业MDM最佳方案" class="headerlink" title="企业MDM最佳方案"></a>企业MDM最佳方案</h4><p>虽然MDM自身提供了很多远程指令相关的移动设备管理功能，但是在实际上企业管理中还远远不够，所以建议配合一个agent之类的app辅助。在我们实现中，采用安装描述文件的时候就推送安装agent，然后用户后续的所有交互都由app负责。app主要作用在于能够获取定位，账号设备绑定，安全准入，扫码登录等等。以及能够提供公司级的VPN等相关公司配置。这里能做的还有很多，可以和企业实际的管理结合。</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://developerinsider.co/how-to-create-a-verified-ios-mobile-device-management-mdm-profile/" target="_blank" rel="external">https://developerinsider.co/how-to-create-a-verified-ios-mobile-device-management-mdm-profile/</a></li><li><a href="https://github.com/vineetchoudhary/Apple-iOS-MDM-Server">https://github.com/vineetchoudhary/Apple-iOS-MDM-Server</a></li><li><a href="https://micromdm.io/blog/certificates/" target="_blank" rel="external">https://micromdm.io/blog/certificates/</a></li><li><a href="https://osxdominion.wordpress.com/2015/04/21/signing-mobileconfig-profiles-with-keychain-certificates/" target="_blank" rel="external">https://osxdominion.wordpress.com/2015/04/21/signing-mobileconfig-profiles-with-keychain-certificates/</a></li><li><a href="https://micromdm.io/blog/certificates/" target="_blank" rel="external">https://micromdm.io/blog/certificates/</a> &gt;!!!&lt;</li><li><a href="https://github.com/micromdm/micromdm">https://github.com/micromdm/micromdm</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;iOS-MDM搭建实践指南&quot;&gt;&lt;a href=&quot;#iOS-MDM搭建实践指南&quot; class=&quot;headerlink&quot; title=&quot;iOS MDM搭建实践指南&quot;&gt;&lt;/a&gt;iOS MDM搭建实践指南&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;本文只介绍在iOS平台搭建
      
    
    </summary>
    
      <category term="wiki" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/wiki/"/>
    
    
      <category term="wiki" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/wiki/"/>
    
      <category term="MDM" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/MDM/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装Win10完整指南</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/08/21/mac-install-windows/mac-install-windows/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/08/21/mac-install-windows/mac-install-windows/</id>
    <published>2019-08-21T05:44:54.000Z</published>
    <updated>2019-08-29T04:21:23.021Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Mac安装Win10完整指南"><a href="#Mac安装Win10完整指南" class="headerlink" title="Mac安装Win10完整指南"></a>Mac安装Win10完整指南</h3><blockquote><p>关于win10你想要的安装方式，各种姿势以及各种坑和解决方案都在这里</p></blockquote><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>对于某些软件只有win版本或者在win上性能更好，这时候你就会想装win系统了。一般来说有两种选择，一是用虚拟机，二是装双系统。然而虚拟机太慢太卡，而且还和双系统存在同一个问题在于会和mac自身系统占用同一块磁盘，对于256G大小的磁盘空间来说相当限制。如果你现在想装Windows或者正遇到问题，那么这篇笔记应该能解决你的问题。我会尽可能把我在安装过程中遇到的问题以及解决方案都描述清楚。</p><p>那么这里还提供一种方案就是将win装在外置磁盘上面，这样上面的问题都得到的解决，因为现在的外置SSD速度已经相当快，完全能满足将一个操作系统放到外置SSD的需求。不仅如此，我还尝试了在外置SSD上面装双系统，这样可以将一块SSD磁盘的利用率最大化。</p><p>作为对比，我这里会将所有的安装方式都尝试一遍。将会安装以下顺序介绍mac上面安装win的具体方案。</p><ul><li><p>用虚拟机安装win10</p></li><li><p>用BootCamp安装win10</p></li><li><p>用移动SSD安装win10</p></li><li><p>用移动SSD安装装系统</p></li></ul><h4 id="虚拟机安装win10"><a href="#虚拟机安装win10" class="headerlink" title="虚拟机安装win10"></a>虚拟机安装win10</h4><p>对于虚拟机安装win10，只需要把镜像文件放到VMWare等虚拟机内一直下一步就能安装，这里就不再介绍这种方式。</p><h4 id="BootCamp安装win10"><a href="#BootCamp安装win10" class="headerlink" title="BootCamp安装win10"></a>BootCamp安装win10</h4><h5 id="1-、Bootcamp全自动安装"><a href="#1-、Bootcamp全自动安装" class="headerlink" title="1 、Bootcamp全自动安装"></a>1 、Bootcamp全自动安装</h5><p>早就听说在最新的macOS系统版本中，用BootCamp能很简单的安装Windows，既然如此决定先用BootCamp试试。这里你首先需要下载一个Windows的iso镜像文件，我这里提供几个下载的地址</p><ul><li><a href="https://msdn.itellyou.cn/" target="_blank" rel="external">https://msdn.itellyou.cn/</a> </li><li><a href="https://tb.rg-adguard.net/public.php?lang=zh-CN" target="_blank" rel="external">https://tb.rg-adguard.net/public.php?lang=zh-CN</a></li><li><a href="https://www.microsoft.com/zh-cn/software-download/windows10ISO" target="_blank" rel="external">https://www.microsoft.com/zh-cn/software-download/windows10ISO</a> （我是在官网下载的镜像）</li></ul><p>win10镜像准备好以后，用BootCamp装的时候选择该镜像并分配50G的分区。点击下一步，下载完相关驱动以后（连VPN，不然有点慢）进行分区，结果就提示分区失败了。去网上搜了一下，大多数人都说由于最新分区采用的APFS导致得，一堆解决方案。主要都说采用系统降级的方式，或者由于修复time machine造成的分区错误，或者磁盘加密的缘故。但是很明显我刚装的系统不存在这些问题。</p><p>又重新尝试了几次，还是不行，快怀疑苹果BootCamp的问题了。</p><p>还有人提示可以进入单用户模式（command+s）然后用<code>fsck_apfs</code>或者<code>fsck</code>命令去修复磁盘。</p><p>但是上面的都做了以后还是不行。</p><h5 id="2、Bootcamp-启动盘-手动分区"><a href="#2、Bootcamp-启动盘-手动分区" class="headerlink" title="2、Bootcamp+启动盘+手动分区"></a>2、Bootcamp+启动盘+手动分区</h5><p>既然BootCamp自动安装不了，那选择手动安装吧。这个原理也不复杂，BootCamp最主要工作在于下载驱动+分区+引导win系统。然后这些我们实际上可以手动完成。</p><ul><li><p><strong>制作启动盘</strong></p><p>这里可以找一个U盘来制作win10的启动盘，由于我这里是移动硬盘，所以我分了一个10G的区来作为启动盘。这里制作需要<a href="https://unetbootin.github.io/" target="_blank" rel="external">unetbootin</a>来完成制作，这个软件支持mac、win、linux平台。我下载了mac版的。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/mac-install-windows/image-20190822003218038.png?raw=true" width="500" hegiht="187"></p><p>分别选择win10的iso镜像，以及选择对应的设备。如果不清楚你的设备是哪一个，可以输入<code>diskutil list</code>去找到对应的设备名，点击ok等待一会，就这样启动盘就制作完成了。</p></li></ul><ul><li><p><strong>手动分区</strong></p><p>这里的分区是指将mac主硬盘分一个区来安装Windows，由于这里需要安装Windows，所以只能用Windows支持的磁盘格式，最开始我分了一个50G的FAT32分区，然后用启动盘安装发现不能选择该磁盘。后面经过一番研究，才发现。Windows磁盘需要NTFS格式的分区，但是这里有个问题在于mac不支持NTFS格式的操作。于是乎，搜索了一番，发现可以安装一些软件、驱动让mac支持NTFS格式。这里提供两种软件供参考<a href="http://www.ntfsformac.cn/xiazai.html" target="_blank" rel="external">ParagonNTFS</a>和<a href="https://www.tuxera.com/products/tuxera-ntfs-for-mac-cn/" target="_blank" rel="external">tuxera-ntfs</a>但都是收费的。安装完以后终于能分NTFS格式的区了，但是有个头疼的问题在于只能分30G以下才会成功，大于30G就提示失败。但是如果分区是30G的话，启动盘选择磁盘的时候又会提示需要大于40G的磁盘，这里不是矛盾了吗。</p></li></ul><h5 id="重装mac系统"><a href="#重装mac系统" class="headerlink" title="重装mac系统"></a>重装mac系统</h5><p>由于上面手动分区也不行，我就重装了mac系统。由于我之前制作了mojave最新系统的mac启动盘，所以重装还是比较快。建议制作一个mac系统盘备用。这里简单说下制作过程。</p><ul><li>同样给硬盘分一个10G的区</li><li>下载macOS系统，这里比如<code>Install macOS Mojave</code></li><li><code>sudo /Applications/Install\ macOS\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</code>执行里面的createinstallmedia命令，选择上面的分区就制作完成了。</li></ul><p>如果还有问题可以点<a href="https://support.apple.com/zh-cn/HT201372" target="_blank" rel="external">这里</a></p><p>重装完以后，我试了下用BootCamp安装，发现一路畅通，直接到引导了Windows系统安装的步骤，但是这里又有问题了。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/mac-install-windows/image-20190822004521105.png?raw=true" width="500" hegiht="187"></p><p>WTF？你自己刚分好的区，现在又给我说不行了？这里还真没办法。不过我回到macOS用磁盘工具发现，虽然不能安装Windows，但却给我分好了一个NTFS格式的区。既然有了这个区，那我直接用上面制作的启动盘手动安装Windows不就完了。</p><p>重启电脑，按住option按钮，选择那个win启动盘，到选择Windows安装磁盘的步骤，发现BootCamp分的那个区是可以用的，于是我就格式化了那个磁盘，然后选择它，果然安装成功了。这一刻我饱含泪水，终于把Windows安装成功了。经过一番设置，顺利进入win10系统，顺便说下感觉win10还不错，无论是画质还是系统设计，已经比win7好太多。</p><p>当我以为一切就这样结束的时候，发现Windows不能连wifi，不过突然想起，由于我是手动安装的Windows，所以并没有安装相关驱动，导致wifi模块并不能识别。还好BootCamp提供了手动下载驱动支持文件的选项，这里由于需要在win10中访问并运行驱动安装程序，所以我又分了一个FAT32的区专门提供win10访问。把下载的驱动程序放入这个分区，重启进入win10系统，运行里面的安装程序以后，wifi就能连接上了。</p><p>最后我为了体验完整的win10系统，还在淘宝上买了一个激活码，成功激活为正版win10。不过我这里也提供几个免费的key，但不一定可靠，嫌麻烦可以花几块钱去淘宝买。</p><ul><li><a href="https://productkeysdl.com/windows-10-product-key/" target="_blank" rel="external">https://productkeysdl.com/windows-10-product-key/</a></li><li><a href="http://www.ylmfwin100.com/ylmf/8642.html" target="_blank" rel="external">http://www.ylmfwin100.com/ylmf/8642.html</a></li></ul><h5 id="双系统win10使用体验"><a href="#双系统win10使用体验" class="headerlink" title="双系统win10使用体验"></a>双系统win10使用体验</h5><p>win10装好以后，体验了下IDA，加载dyld_cache后发现是真的比mac和虚拟机装的IDA流畅很多。也不费我这么多精力去装双系统。不过由于我的mac磁盘一共才256G，所以我下一步的打算是买一个移动SSD硬盘来装Windows，整个系统都运行在外置的SSD硬盘，看了下现在移动固态硬盘的速度，应该是没什么问题的。暂选三星T5、500G、540M/s那款。</p><h4 id="外置SSD硬盘安装win10"><a href="#外置SSD硬盘安装win10" class="headerlink" title="外置SSD硬盘安装win10"></a>外置SSD硬盘安装win10</h4><p>前面说到了双系统上的win10体验，就速度、性能来说已经很不错了。但是为什么还要用外置SSD来安装win10呢。这里涉及到我的mac只有256G硬盘，还要划分一部分来安装win10，这样两个系统可用空间都很小。我买的三星T5移动固态硬盘到手了，准备把win10直接安装到上面。由于现在移动固态硬盘的速度完全能够支持这样的方式。</p><h5 id="最开始我的尝试"><a href="#最开始我的尝试" class="headerlink" title="最开始我的尝试"></a>最开始我的尝试</h5><p>在这之前，我先按照自己的想法去实现外置SSD安装win10。刚开始想，我之前制作了启动盘，那么我直接从启动盘启动以后把win10选择外置SSD不就行了吗。直到我进行到那一步的时候才发现，win10为了各方面原因是阻止你将系统安装到外置磁盘上面的。</p><h5 id="正确安装步骤"><a href="#正确安装步骤" class="headerlink" title="正确安装步骤"></a>正确安装步骤</h5><p>这里有个视频演示了整个过程，不熟悉的可以先看下这个视频。</p><p><a href="https://9to5mac.com/2017/08/31/how-windows-10-mac-boot-camp-external-drive-video/" target="_blank" rel="external">https://9to5mac.com/2017/08/31/how-windows-10-mac-boot-camp-external-drive-video/</a></p><p><a href="https://www.youtube.com/watch?v=kR28kVtZYJY&amp;feature=youtu.be" target="_blank" rel="external">https://www.youtube.com/watch?v=kR28kVtZYJY&amp;feature=youtu.be</a></p><p>前提准备：</p><ul><li>win10镜像</li><li>vmware虚拟机或移动硬盘</li><li><a href="http://www.easyuefi.com/wintousb/" target="_blank" rel="external">WinToUSB</a></li><li>WindowsSupport驱动（通过BootCamp下载）</li><li>有线鼠标和键盘（设置win10的时候由于没有驱动，键盘和触控板不能识别）</li></ul><p>下面说下大概需要哪些步骤去完成：</p><ul><li>用虚拟机或者其他win电脑用WinToUSB去制作WINTOGO启动盘，这里WinToUSB使用简单就不再介绍，选择对应的win10镜像文件和外置SSD磁盘等待制作完成就行。</li><li>这里将下载的WindowsSupport复制进上面的WINTOGO启动盘之中或者等安装完以后用其他硬盘拷贝到win10中然后安装驱动也行。</li><li>到这一步直接重启按住option选择WINTOGO启动盘安装win10系统就行，整个过程就是需要连接有线鼠标和键盘。</li><li>当进入win10系统以后，由于没有驱动，导致蓝牙、wifi等等都不能工作。这时候选择WindowsSupport里面的驱动安装重启以后一切都正常了。</li></ul><h5 id="外置SSD安装win10使用感受"><a href="#外置SSD安装win10使用感受" class="headerlink" title="外置SSD安装win10使用感受"></a>外置SSD安装win10使用感受</h5><p>首先使用上面来说和内置的磁盘差别不大，依然很流畅。但有以下优势，随身携带了一个系统，只要有一台电脑立马能进入你的工作环境；与内置系统有很好的独立性，且不用担心内置系统和外置系统磁盘空间大小。</p><p>如果说缺点的话就是外置SSD与电脑是用有线连接，存在误触导致系统可能发生panic。不过就三星T5来看，连接的数据线还是比较牢固的。整个三种方式安装来了，我选择了最后这种。满足了性能，独立，空间等方方面面的优势。建议有这方面需求的都采用外置SSD来安装运行win10。</p><h4 id="外置SSD硬盘安装macOS和win10双系统"><a href="#外置SSD硬盘安装macOS和win10双系统" class="headerlink" title="外置SSD硬盘安装macOS和win10双系统"></a>外置SSD硬盘安装macOS和win10双系统</h4><p>前面提到，我在买来的三星T5上面装了win10系统，但是整个500G用来只装win10始终觉得有点浪费。于是想着能不能在外置SSD上装双系统。刚开始以为很简单，结果这里坑很多也很大。如果你对磁盘分区，引导系统等不是很熟悉的话，建议一定要谨慎操作并做好数据备份。</p><h5 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h5><ul><li>win10镜像</li><li>一台win电脑（最好不要用虚拟机，虚拟机操作很卡很慢）</li><li>一台mac电脑</li><li>两个外置硬盘，一个SSD用作装装系统，一个用作制作引导盘和数据传输（建议使用一般机械硬盘即可，容量大一点）。</li><li>一个macOS系统引导盘</li><li><a href="http://www.easyuefi.com/wintousb/" target="_blank" rel="external">WinToUSB</a> 用作制作win10系统外置SSD引导盘。</li><li><a href="http://www.diskgenius.cn/download.php" target="_blank" rel="external">diskgenius</a> 这个工具十分重要，没有这个磁盘工具无法完成。用作各种细腻化磁盘分区管理</li><li>有线鼠标和键盘（设置win10的时候由于没有驱动，键盘和触控板不能识别）</li><li>WindowsSupport驱动（通过BootCamp下载）</li></ul><h5 id="最初想法和尝试"><a href="#最初想法和尝试" class="headerlink" title="最初想法和尝试"></a>最初想法和尝试</h5><ul><li><p>先装win10，失败</p><p>最开始的我想法就是先直接在移动SSD上面装一个win10，然后再进行分区（exFAT、APFS或者其他mac上能识别挂载的文件系统都行）。接着再回到macOS中，用磁盘工具抹掉并设置为APFS格式的分区。这样在用系统引导盘去安装的时候选择该分区不就行了。</p><p>失败原因：在这样操作的时候，回到macOS对这个分区进行格式化的时候会出现错误，而且那个win10系统也不能引导了，原因在于会将win10系统前面的引导分区覆盖。</p></li><li><p>先装macOS，失败</p><p>上面的方案失败以后我就尝试先装macOS，装macOS就十分简单，直接将整个磁盘格式化为APFS格式，然后分一个exFAT或者NTFS的区留着装win10。装macOS就直接用引导盘然后选择APFS那个分区安装就可以了。接下来就回到win系统中，用WinToUSB工具安装win10，然而这个工具并不能按照磁盘分区来进行安装，最小单位是磁盘设备，也就是说，这样会将整个磁盘都格式化安装为win10，这样做的话前面安装的macOS系统就会被删除。</p><p>失败原因：WinToUSB按磁盘设备而不是磁盘分区来安装的win10。</p></li></ul><h5 id="最终解决方案"><a href="#最终解决方案" class="headerlink" title="最终解决方案"></a>最终解决方案</h5><p>根据前面的失败情况，理性分析了一下，在没有更好的工具替换WinToUSB的情况下，要想实现在移动SSD安装双系统，只能先装win10。但是前面先装win10却失败了，下面经过大量的尝试，找出了一个很大的坑，也找出了失败的原因。</p><p>装完win10以后，如果你分一个APFS区到mac上面抹掉的时候，出现不能win10不能引导以及磁盘不能挂载的原因是，macOS挂载APFS分区的时候是需要一个200M的EFI分区进行引导。这个是mac系统独有的，在win上面挂载分区是不需要这玩意的。所以出现前面问题的原因是，由于需要200M的EFI引导分区，所以抹掉的时候会将win10的引导分区给覆盖掉，从而导致不能启动win10。而为什么自身的APFS也不能挂载，是因为前面的win10引导分区只有100M，小于200M，所以APFS分区也不能挂载。</p><p>弄清楚原因以后，那么现在就好办了。按照以下步骤</p><ul><li>先用WinToUSB安装win10</li><li>然后用diskgenius备份win10的引导分区，等装完macOS以后再写回去。</li><li>用diskgenius创建一个APFS或者其他mac上能识别的分区。（大小就为磁盘的一半，后面会在上面装macOS）</li><li>然后用diskgenius调整win10前面的EFI引导分区大小，这里只要大于200M都行。此步需要十分谨慎，建议不熟悉的先搜索相关资料，对整个有一个清晰的了解以后再动手。</li><li>接下来回到mac系统中，用磁盘工具抹掉APFS分区，这样这个分区就能挂载了</li><li>随后用引导盘安装macOS系统到这个分区上面，此时的win10还是不能启动的。</li><li>macOS系统装完以后，在回到win系统，将前面备份的win10引导分区数据用diskgenius复制到前面的EFI分区之中。</li><li>重启电脑，验证两个系统是否都能正常启动即可。</li></ul><p>这里说了安装过程中遇到的问题以及解决方法，但没有用截图或者更加详细的步骤。主要还是提供了在外置SSD上安装双系统的思路，如果后面有时间的话，会将整个过程以截图的方式详细的介绍出来。我个人建议就是对磁盘分区和系统引导不是很熟悉的新手来说，建议先不要尝试这种方案，等你熟悉或者我写了更详细的步骤以后再进行尝试。</p><h4 id="win10下IDA启动失败的解决方案"><a href="#win10下IDA启动失败的解决方案" class="headerlink" title="win10下IDA启动失败的解决方案"></a>win10下IDA启动失败的解决方案</h4><ul><li><p>无法启动IDA，缺少相关DLL</p><p>在安装完win10以后，打开IDA会提示相关的DLL无法找到。这里提供了dll缺失文件下载地址以及Windows 10上msvcp140.dll缺少问题的解决办法。</p><ul><li><p><a href="https://cn.dll-files.com/" target="_blank" rel="external">https://cn.dll-files.com/</a></p></li><li><p><a href="http://www.win10jihuoma.com/archives/8183" target="_blank" rel="external">http://www.win10jihuoma.com/archives/8183</a></p></li></ul></li><li><p>启动后某些DLL加载失败</p><p>在启动IDA的时候我还遇到一个错误是无法加载ida目录下plugins下的DLL，提示跟多<code>._</code>开头的DLL文件加载失败，这些文件是mac系统记录的元数据文件，大小都在4k左右，肯定不能加载。删除了loader  proc 和plugins下面的这些文件就正常了。关于这些文件的解释看<a href="https://zhuanlan.zhihu.com/p/37221636" target="_blank" rel="external">这里</a>。其他IDA启动问题可以看下面官方的文档</p><p><a href="https://www.hexblog.com/?p=1132" target="_blank" rel="external">https://www.hexblog.com/?p=1132</a></p></li></ul><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://apple.stackexchange.com/questions/304623/bootcamp-problem-unable-to-partition-the-disk" target="_blank" rel="external">https://apple.stackexchange.com/questions/304623/bootcamp-problem-unable-to-partition-the-disk</a></li><li><a href="https://www.microsoft.com/zh-cn/software-download/windows10ISO" target="_blank" rel="external">https://www.microsoft.com/zh-cn/software-download/windows10ISO</a></li><li><a href="https://www.hongkiat.com/blog/bootcamp-assistant-cannot-partition/" target="_blank" rel="external">https://www.hongkiat.com/blog/bootcamp-assistant-cannot-partition/</a></li><li><a href="http://www.win10jihuoma.com/archives/category/win10zhuanyeban" target="_blank" rel="external">http://www.win10jihuoma.com/archives/category/win10zhuanyeban</a></li><li><a href="https://discussions.apple.com/thread/6832480" target="_blank" rel="external">https://discussions.apple.com/thread/6832480</a></li><li><a href="https://medium.com/@svenkirsime/install-windows-on-the-external-ssd-hdd-for-your-mac-5d29eefe5d1" target="_blank" rel="external">https://medium.com/@svenkirsime/install-windows-on-the-external-ssd-hdd-for-your-mac-5d29eefe5d1</a></li><li><a href="https://www.cnblogs.com/lonecloud/p/7107063.html" target="_blank" rel="external">https://www.cnblogs.com/lonecloud/p/7107063.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Mac安装Win10完整指南&quot;&gt;&lt;a href=&quot;#Mac安装Win10完整指南&quot; class=&quot;headerlink&quot; title=&quot;Mac安装Win10完整指南&quot;&gt;&lt;/a&gt;Mac安装Win10完整指南&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;关于win10你想
      
    
    </summary>
    
      <category term="wiki" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/wiki/"/>
    
    
      <category term="wiki" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/wiki/"/>
    
      <category term="windows" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>iOS12内存patch remap bug分析</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/08/16/iOS12-remap-bug-analyze/iOS12-remap-bug-analyze/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/08/16/iOS12-remap-bug-analyze/iOS12-remap-bug-analyze/</id>
    <published>2019-08-15T16:22:28.000Z</published>
    <updated>2019-09-21T17:31:17.127Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iOS12内存patch-remap-bug分析"><a href="#iOS12内存patch-remap-bug分析" class="headerlink" title="iOS12内存patch remap bug分析"></a>iOS12内存patch remap bug分析</h2><blockquote><p>之前在做LLDB中的内存patch的时候提到在iOS12(包括iOS11)上面remap会出现bug的问题，一直相当困扰。其他hook框架都能在最新越狱上面正常patch，为什么我写的就不行？所以这篇文章准备一探究竟，<del>但是目前我也还么搞清楚原因。</del>（2019/09/04终于搞清楚了原因）不过这里会先分析最新系统上面两种hook框架对于inlinehook的原理及其相关细节。先看下他们的hook框架是如何实现内存patch和hook的。</p></blockquote><h3 id="iOS12-MSHookFunction分析-CoolStar越狱工具"><a href="#iOS12-MSHookFunction分析-CoolStar越狱工具" class="headerlink" title="iOS12 MSHookFunction分析(CoolStar越狱工具)"></a>iOS12 MSHookFunction分析(CoolStar越狱工具)</h3><blockquote><p>环境：iPhoneXS A12 iOS12 jailbreak by Chimera</p></blockquote><p>在iOS12越狱上面<code>CydiaSubstrate</code>指向的是<code>libsubstrate.dylib</code></p><p><code>/Library/Frameworks/CydiaSubstrate.framework/CydiaSubstrate -&gt; ../../../usr/lib/libsubstrate.dylib</code></p><p>我们常用的<code>MSHookFunction</code>函数的实现就是在<code>libsubstrate.dylib</code>这里面，不过在这里仅仅是<code>SubHookFunction</code>的封装。而<code>SubHookFunction</code>的实现却是在<code>/usr/lib/libsubstitute.0.dylib</code>这里</p><p><code>/usr/lib/libsubstitute.0.dylib</code>是一个软连接指向<code>libsubstitute.dylib</code>。这里的<code>libsubstitute.dylib</code>就是coolstar维护的版本。下面分析<code>libsubstitute.dylib</code>的inlinehook实现细节。</p><p>下面是我写的一个tweak插件代码（<del>没错就是破解Filza的，不过只是部分代码</del>），hook了<code>_ZTL7624417887</code>函数。</p><pre><code class="c">static BOOL (*original_ZTL7624417887)(int a1, int a2, int a3); BOOL new_ZTL7624417887(int a1, int a2, int a3){    NSLog(@&quot;====xxxx===hook ZTL7624417887---&gt;%d&quot;, 0);    return 0;}%ctor{        MSImageRef  image =  MSGetImageByName(&quot;/Applications/Filza.app/Filza&quot;);    NSLog(@&quot;===xxx===image:%p&quot;, image);    void* ZTL7624417887 = (void*)MSFindSymbol(image, &quot;_ZTL7624417887&quot;);    NSLog(@&quot;===xxx===ZTL7624417887:%p&quot;, ZTL7624417887);    MSHookFunction((void*)ZTL7624417887, (void*)new_ZTL7624417887, (void**)&amp;original_ZTL7624417887);}</code></pre><p><strong>调试分析</strong></p><p>对<code>MSHookFunction</code>下断点，发现断在了我们预想的位置。</p><pre><code>CydiaSubstrate`MSHookFunction:-&gt;  0x10550fca0 &lt;+0&gt;:  cbz    x0, 0x10550fca8           ; &lt;+8&gt;    0x10550fca4 &lt;+4&gt;:  b      0x10550fe80               ; symbol stub for: SubHookFunction    0x10550fca8 &lt;+8&gt;:  ret</code></pre><pre><code>(lldb) re re General Purpose Registers:        x0 = 0x000000010489a068  Filza`ZTL7624417887        x1 = 0x00000001055bbbec  xkfilza.dylib`new_ZTL7624417887(int, int, int) at Tweak.xm:19        x2 = 0x00000001055bc148  xkfilza.dylib`original_ZTL7624417887</code></pre><pre><code>* frame #0: 0x000000010550fca0 CydiaSubstrate`MSHookFunction    frame #1: 0x00000001055bbcd0 xkfilza.dylib`_logosLocalCtor_9eb4d9ed(argc=1, argv=0x000000016b657b50, envp=0x000000016b657b60) at Tweak.xm:29    frame #2: 0x00000001055df56c dyld`ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&amp;) + 424    frame #3: 0x00000001055df7ac dyld`ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&amp;) + 40</code></pre><p>X0就是hook的函数地址，X1为替换的函数地址，X2为保存的原函数地址。</p><p>先看一下这三个地址的数据，如下所见，此时<code>ZTL7624417887</code>还没有hook，所以前几个指令没有变化。</p><pre><code>// ZTL7624417887 函数指令(lldb) x/5i 0x000000010489a068    0x10489a068: 0xd2800008   mov    x8, #0x0    0x10489a06c: 0xf0003489   adrp   x9, 1683    0x10489a070: 0x911a4129   add    x9, x9, #0x690            ; =0x690     0x10489a074: 0xb868792a   ldr    w10, [x9, x8, lsl #2]    0x10489a078: 0x6b00015f   cmp    w10, w0// new_ZTL7624417887 函数指令(lldb) x/5i 0x00000001055bbbec    0x1055bbbec: 0xd503237f   pacibsp     0x1055bbbf0: 0xd100c3ff   sub    sp, sp, #0x30             ; =0x30     0x1055bbbf4: 0xa9027bfd   stp    x29, x30, [sp, #0x20]    0x1055bbbf8: 0x910083fd   add    x29, sp, #0x20            ; =0x20     0x1055bbbfc: 0xb81fc3a0   stur   w0, [x29, #-0x4]// original_ZTL7624417887 是一个函数指针(lldb) x/5g 0x00000001055bc1480x1055bc148: 0x0000000000000000 0x00000000000000000x1055bc158: 0x0000000000000000 0x00000000000000000x1055bc168: 0x0000000000000000</code></pre><p>这里是我们单步执行两次，使其执行hook函数。这次再观察一下这三个地址的数据</p><pre><code>// ZTL7624417887 函数指令(lldb) x/5i 0x000000010489a068    0x10489a068: 0xb0006911   adrp   x17, 3361    0x10489a06c: 0x912fb231   add    x17, x17, #0xbec          ; =0xbec     0x10489a070: 0xd61f0220   br     x17    0x10489a074: 0xb868792a   ldr    w10, [x9, x8, lsl #2]    0x10489a078: 0x6b00015f   cmp    w10, w0// new_ZTL7624417887 函数指令(lldb) x/5i 0x00000001055bbbec    0x1055bbbec: 0xd503237f   pacibsp     0x1055bbbf0: 0xd100c3ff   sub    sp, sp, #0x30             ; =0x30     0x1055bbbf4: 0xa9027bfd   stp    x29, x30, [sp, #0x20]    0x1055bbbf8: 0x910083fd   add    x29, sp, #0x20            ; =0x20     0x1055bbbfc: 0xb81fc3a0   stur   w0, [x29, #-0x4]// original_ZTL7624417887 是一个函数指针(lldb) x/5g 0x00000001055bc1480x1055bc148: 0x0000000106e38000 0x00000000000000000x1055bc158: 0x0000000000000000 0x00000000000000000x1055bc168: 0x0000000000000000</code></pre><p>这里发现原函数前三个字节和<code>original_ZTL7624417887</code>这个函数指令数据都发生了变化。</p><pre><code class="assembly">0x10489a068: 0xb0006911   adrp   x17, 33610x10489a06c: 0x912fb231   add    x17, x17, #0xbec          ; =0xbec 0x10489a070: 0xd61f0220   br     x17</code></pre><p>这三条指令就是将原始执行流跳转到其他地址（这里也可以发现hook的函数至少大于3条指令，不然会覆盖其他函数）。这里简单计算就可以算出X17目标地址</p><pre><code>(lldb) p/x (0x10489a068 &amp; ~(0x1000-0x1))+ (3361&lt;&lt;12) + 0xbec(long) $3 = 0x00000001055bbbec</code></pre><p>所以会跳转到<code>0x00000001055bbbec</code>这个地址，等等！这个地址不就是<code>new_ZTL7624417887</code>我们hook代码的函数地址吗？所以函数hook就是通过修改前三条指令跳转到我们定义的函数来实现hook的。</p><p>这里还有个问题在于，如果我们在hook代码里面需要执行原函数，那么<code>original_ZTL7624417887</code>处保存的又是什么函数指针？所以这里跟一下<code>0x0000000106e38000</code>这个地址。</p><pre><code>(lldb) x/12i 0x0000000106e38000    0x106e38000: 0xd2800008   mov    x8, #0x0    0x106e38004: 0xd29a0009   mov    x9, #0xd000    0x106e38008: 0xf2a09e49   movk   x9, #0x4f2, lsl #16    0x106e3800c: 0xf2c00029   movk   x9, #0x1, lsl #32    0x106e38010: 0x911a4129   add    x9, x9, #0x690            ; =0x690     0x106e38014: 0xd0fed311   adrp   x17, -9630    0x106e38018: 0x9101d231   add    x17, x17, #0x74           ; =0x74     0x106e3801c: 0xd61f0220   br     x17</code></pre><p>这里可以看出也是一个跳转，可以计算出X17跳转后的地址</p><pre><code>(lldb) p/x (0x106e38014 &amp; ~(0x1000-0x1)) - (9630&lt;&lt;12) + 0x74(long) $4 = 0x000000010489a074</code></pre><p>再等等！这个地址不就是<code>ZTL7624417887</code>函数的第四条指令的地址吗，跳转到这里正好调用了原函数，但是有个问题在于，原函数的前三条指令去哪了？仔细观察上面的指令和原函数的前三条指令</p><pre><code>//原函数前三条指令0x10489a068: 0xd2800008   mov    x8, #0x00x10489a06c: 0xf0003489   adrp   x9, 16830x10489a070: 0x911a4129   add    x9, x9, #0x690            ; =0x690// original_ZTL7624417887函数指针的指令0x106e38000: 0xd2800008   mov    x8, #0x00x106e38004: 0xd29a0009   mov    x9, #0xd0000x106e38008: 0xf2a09e49   movk   x9, #0x4f2, lsl #160x106e3800c: 0xf2c00029   movk   x9, #0x1, lsl #320x106e38010: 0x911a4129   add    x9, x9, #0x690            ; =0x690</code></pre><p>稍加思索就知道，虽然指令不一样，但是结果却是一样的。为什么不直接写入原三条指令呢？这里涉及到<code>adrp</code>这个指令的相对寻址问题。由于<code>adrp</code>会根据当前pc值来计算，这样直接复制的话pc值已经变化，所以这里不得不重新计算X9的值。到这里，<code>MSHookFunction</code>的hook过程我们已经完全清楚了。</p><h3 id="iOS12-MSHookFunction分析-unc0ver越狱工具"><a href="#iOS12-MSHookFunction分析-unc0ver越狱工具" class="headerlink" title="iOS12 MSHookFunction分析(unc0ver越狱工具)"></a>iOS12 MSHookFunction分析(unc0ver越狱工具)</h3><blockquote><p>环境：iPhone6+ iOS12 jailbreak by unc0ver</p></blockquote><p>由于saurik不给CoolStar的越狱工具提供substrate和cydia的支持，导致现在越狱工具出现了两种hook框架。以Coolstar团队基于开源代码substitute和pwn20wnd团队的substrate两种hook框架。上面分析了substitute的hook原理。下面分析substrate的hook相关细节。这里多说两句，关于整个事件，可以访问CoolStar的博客<a href="https://coolstarorg.tumblr.com/" target="_blank" rel="external">https://coolstarorg.tumblr.com/</a>他介绍了整个事件以及自己开发移植substitute的完整过程。我个人来说，还是十分崇拜CoolStar那份创新和坚持。自己动手完成了最新越狱的substitute移植，tweak注入，以及Sileo的开发。在这中间的过程，正如他在博客里面提到的那样，十分曲折，令人佩服。</p><p>在unc0ver中有如下dylib和hook相关</p><pre><code>/usr/lib/substrate/SubstrateInserter.dylib/usr/lib/libsubstrate.dylib/Library/MobileSubstrate/MobileSubstrate.dylib/Library/Caches/cy-8lteBy.dylib</code></pre><p>作为对比，这里同样以上面的tweak代码为例，hook了<code>_ZTL7624417887</code>函数。</p><pre><code class="c">static BOOL (*original_ZTL7624417887)(int a1, int a2, int a3); BOOL new_ZTL7624417887(int a1, int a2, int a3){    NSLog(@&quot;====xxxx===hook ZTL7624417887---&gt;%d&quot;, 0);    return 0;}%ctor{        MSImageRef  image =  MSGetImageByName(&quot;/Applications/Filza.app/Filza&quot;);    NSLog(@&quot;===xxx===image:%p&quot;, image);    void* ZTL7624417887 = (void*)MSFindSymbol(image, &quot;_ZTL7624417887&quot;);    NSLog(@&quot;===xxx===ZTL7624417887:%p&quot;, ZTL7624417887);    MSHookFunction((void*)ZTL7624417887, (void*)new_ZTL7624417887, (void**)&amp;original_ZTL7624417887);}</code></pre><p><strong>调试分析</strong></p><p>对<code>MSHookFunction</code>下断点，发现断在了如下位置</p><pre><code>// 调用栈*libsubstrate.dylib`MSHookFunction SubstrateInserter.dylib`___lldb_unnamed_symbol6$$SubstrateInserter.dylib + 76 cy-8lteBy.dylib`ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&amp;) + 412 cy-8lteBy.dylib`ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&amp;) + 36//下面可以看出来是hook了posix_spawn这个函数x0 = 0x00000001be287310  libsystem_kernel.dylib`posix_spawnx1 = 0x000000010194a4c0  SubstrateInserter.dylib`___lldb_unnamed_symbol2x2 = 0x0000000101950258</code></pre><p>这里可以暂时不用管，同样下面的hook函数都忽略先。</p><pre><code>//================================ execve ========================================//调用栈*libsubstrate.dylib`MSHookFunction SubstrateInserter.dylib`___lldb_unnamed_symbol6$$SubstrateInserter.dylib + 100 cy-8lteBy.dylib`ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&amp;) + 412 cy-8lteBy.dylib`ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&amp;) + 36//下面可以看出来是hook了execve这个函数x0 = 0x00000001be290034  libsystem_kernel.dylib`execvex1 = 0x000000010194a4fc  SubstrateInserter.dylib`___lldb_unnamed_symbol3x2 = 0x0000000101950260  //================================ __vfork ========================================//调用栈*libsubstrate.dylib`MSHookFunction cy-8lteBy.dylib`ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&amp;) + 412 cy-8lteBy.dylib`ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&amp;) + 36//下面可以看出来是hook了__vfork这个函数x0 = 0x00000001be28fa80  libsystem_kernel.dylib`__vforkx1 = 0x000000010194a5d4  SubstrateInserter.dylib`___lldb_unnamed_symbol4x2 = 0x0000000101950268</code></pre><p>通过上面可以看出，substrate会hook一些多进程启动相关的函数。这里我们都暂时不用分析，进行执行就到了我们自己写的hook点。</p><pre><code>x0 = 0x0000000100f52068  Filza`ZTL7624417887x1 = 0x0000000104a3fba4  xkfilza.dylib`new_ZTL7624417887(int, int, int) at Tweak.xm:19x2 = 0x0000000104a40148  xkfilza.dylib`original_ZTL7624417887libsubstrate.dylib`MSHookFunction:-&gt;  0x101d244dc &lt;+0&gt;:   stp    x29, x30, [sp, #-0x10]!    0x101d244e0 &lt;+4&gt;:   mov    x29, sp    0x101d244e4 &lt;+8&gt;:   stp    x20, x19, [sp, #-0x10]!    0x101d244e8 &lt;+12&gt;:  stp    x22, x21, [sp, #-0x10]!    0x101d244ec &lt;+16&gt;:  sub    sp, sp, #0x20             ; =0x20     0x101d244f0 &lt;+20&gt;:  mov    x21, x2    0x101d244f4 &lt;+24&gt;:  mov    x19, x1    0x101d244f8 &lt;+28&gt;:  mov    x20, x0    0x101d244fc &lt;+32&gt;:  cbz    x20, 0x101d24514          ; &lt;+56&gt;    0x101d24500 &lt;+36&gt;:  mov    x1, #0x0    0x101d24504 &lt;+40&gt;:  mov    x0, x19    0x101d24508 &lt;+44&gt;:  bl     0x101d29150               ; symbol223$$libsubstrate.dylib    0x101d2450c &lt;+48&gt;:  cmp    x0, #0x0                  ; =0x0     0x101d24510 &lt;+52&gt;:  csel   x19, x0, x19, ne    0x101d24514 &lt;+56&gt;:  adrp   x8, 265    0x101d24518 &lt;+60&gt;:  add    x8, x8, #0x498            ; =0x498     0x101d2451c &lt;+64&gt;:  ldrb   w8, [x8]    0x101d24520 &lt;+68&gt;:  cbz    w8, 0x101d24538           ; &lt;+92&gt;    0x101d24524 &lt;+72&gt;:  str    x19, [sp]    0x101d24528 &lt;+76&gt;:  adr    x1, #0xc8d10              ; &quot;  &lt;=  %p&quot;    0x101d2452c &lt;+80&gt;:  nop        0x101d24530 &lt;+84&gt;:  orr    w0, wzr, #0x2    0x101d24534 &lt;+88&gt;:  bl     0x101d10ad4               ; symbol80$$libsubstrate.dylib    0x101d24538 &lt;+92&gt;:  adrp   x8, 240    0x101d2453c &lt;+96&gt;:  add    x8, x8, #0xa80            ; =0xa80     0x101d24540 &lt;+100&gt;: add    x8, x8, #0x10             ; =0x10     0x101d24544 &lt;+104&gt;: stp    x21, x8, [sp, #0x8]    0x101d24548 &lt;+108&gt;: cmp    x21, #0x0                 ; =0x0     0x101d2454c &lt;+112&gt;: add    x8, sp, #0x8              ; =0x8     0x101d24550 &lt;+116&gt;: csel   x8, xzr, x8, eq    0x101d24554 &lt;+120&gt;: str    x8, [sp, #0x18]    0x101d24558 &lt;+124&gt;: mov    x0, #0x0    0x101d2455c &lt;+128&gt;: add    x4, sp, #0x10             ; =0x10     0x101d24560 &lt;+132&gt;: mov    x1, x20    0x101d24564 &lt;+136&gt;: mov    x2, x20    0x101d24568 &lt;+140&gt;: mov    x3, x19    0x101d2456c &lt;+144&gt;: bl     0x101d23f3c                           ;&lt;----------------hook实现函数    0x101d24570 &lt;+148&gt;: sub    sp, x29, #0x20            ; =0x20     0x101d24574 &lt;+152&gt;: ldp    x22, x21, [sp], #0x10    0x101d24578 &lt;+156&gt;: ldp    x20, x19, [sp], #0x10    0x101d2457c &lt;+160&gt;: ldp    x29, x30, [sp], #0x10    0x101d24580 &lt;+164&gt;: ret</code></pre><p>从这里就可以看出和substitute的差别还是挺大的。先看下hook前三个地址的数据情况</p><pre><code>// ZTL7624417887 函数指令(lldb) x/5i 0x0000000100f52068    0x100f52068: 0xd2800008   mov    x8, #0x0    0x100f5206c: 0xf0003489   adrp   x9, 1683    0x100f52070: 0x911a4129   add    x9, x9, #0x690            ; =0x690     0x100f52074: 0xb868792a   ldr    w10, [x9, x8, lsl #2]    0x100f52078: 0x6b00015f   cmp    w10, w0// new_ZTL7624417887 函数指令(lldb) x/5i 0x0000000104a3fba4    0x104a3fba4: 0xd100c3ff   sub    sp, sp, #0x30             ; =0x30     0x104a3fba8: 0xa9027bfd   stp    x29, x30, [sp, #0x20]    0x104a3fbac: 0x910083fd   add    x29, sp, #0x20            ; =0x20     0x104a3fbb0: 0xb81fc3a0   stur   w0, [x29, #-0x4]    0x104a3fbb4: 0xb81f83a1   stur   w1, [x29, #-0x8]// original_ZTL7624417887 是一个函数指针(lldb) x/5g 0x0000000104a401480x104a40148: 0x0000000000000000 0x00000000000000000x104a40158: 0x0000000000000000 0x00000000000000000x104a40168: 0x0000000000000000</code></pre><p>下面我们执行完这个函数，再观察hook以后三个地址的数据情况</p><pre><code>// ZTL7624417887 函数指令(lldb) x/10i 0x0000000100f52068    0x100f52068: 0x58000050   ldr    x16, #0x8                 ; &lt;+8&gt;    0x100f5206c: 0xd61f0200   br     x16    0x100f52070: 0x7ff00040   .long  0x7ff00040                ; unknown opcode    0x100f52074: 0x00000001   .long  0x00000001                ; unknown opcode    0x100f52078: 0x6b00015f   cmp    w10, w0    0x100f5207c: 0x540000c0   b.eq   0x100f52094               ; &lt;+44&gt;    0x100f52080: 0x91000508   add    x8, x8, #0x1              ; =0x1     0x100f52084: 0xf100311f   cmp    x8, #0xc                  ; =0xc     0x100f52088: 0x54ffff69   b.ls   0x100f52074               ; &lt;+12&gt;    0x100f5208c: 0x52800008   mov    w8, #0x0// new_ZTL7624417887 函数指令(lldb)  x/5i 0x0000000104a3fba4    0x104a3fba4: 0xd100c3ff   sub    sp, sp, #0x30             ; =0x30     0x104a3fba8: 0xa9027bfd   stp    x29, x30, [sp, #0x20]    0x104a3fbac: 0x910083fd   add    x29, sp, #0x20            ; =0x20     0x104a3fbb0: 0xb81fc3a0   stur   w0, [x29, #-0x4]    0x104a3fbb4: 0xb81f83a1   stur   w1, [x29, #-0x8]// original_ZTL7624417887 是一个函数指针(lldb) x/5g 0x0000000104a401480x104a40148: 0x0000000104a53fe8 0x00000000000000000x104a40158: 0x0000000000000000 0x00000000000000000x104a40168: 0x0000000000000000</code></pre><p>这里可以发现，和substitute一样，原函数ZTL7624417887和original_ZTL7624417887函数都发生了变化，但是ZTL7624417887的改动却不一样。substrate这里首先占用了四条指令大小（这里也可以知道用substate进行hook的时候函数至少满足4个字节），其中后两条指令其实是存得一个地址占用8个字节。</p><pre><code>(lldb) x/g 0x100f520700x100f52070: 0x000000017ff00040</code></pre><p>按地址大小解析出来，目标跳转的地址为<code>0x000000017ff00040</code>现在去看下这个地址里面是什么</p><pre><code>(lldb) x/12i 0x000000017ff00040    0x17ff00040: 0x10020010   adr    x16, #0x4000    0x17ff00044: 0xa9404610   ldp    x16, x17, [x16]    0x17ff00048: 0xd61f0220   br     x17    0x17ff0004c: 0xd503201f   nop        0x17ff00050: 0x10020010   adr    x16, #0x4000    0x17ff00054: 0xa9404610   ldp    x16, x17, [x16]    0x17ff00058: 0xd61f0220   br     x17    0x17ff0005c: 0xd503201f   nop        0x17ff00060: 0x10020010   adr    x16, #0x4000    0x17ff00064: 0xa9404610   ldp    x16, x17, [x16]    0x17ff00068: 0xd61f0220   br     x17    0x17ff0006c: 0xd503201f   nop</code></pre><p>这里可以发现又会进行一些跳转</p><pre><code>(lldb) p/x 0x17ff00040+0x4000(long) $2 = 0x000000017ff04040(lldb) x/5g 0x000000017ff040400x17ff04040: 0x0000000000000000 0x0000000104a3fba4</code></pre><p>这里计算出来<code>X16=0 X17=0x0000000104a3fba4</code>所以这里会跳转到<code>0x0000000104a3fba4</code>这个地址。等下！这个地址不就是new_ZTL7624417887的地址吗，这样进过两次跳转就跳到了我们写的hook函数了，完成了对原函数的hook。下面再分析如何又执行原函数，分析original_ZTL7624417887函数数据</p><pre><code>(lldb) x/12i 0x0000000104a53fe8    0x104a53fe8: 0xd2800008   mov    x8, #0x0    0x104a53fec: 0x580000e9   ldr    x9, #0x1c    0x104a53ff0: 0x911a4129   add    x9, x9, #0x690            ; =0x690     0x104a53ff4: 0xb868792a   ldr    w10, [x9, x8, lsl #2]    0x104a53ff8: 0x58000050   ldr    x16, #0x8    0x104a53ffc: 0xd61f0200   br     x16    0x104a54000: 0x00f52078   .long  0x00f52078                ; unknown opcode    0x104a54004: 0x00000001   .long  0x00000001                ; unknown opcode</code></pre><p>从上面可以发现前四条指令正是原函数new_ZTL7624417887的前四条指令等价指令，然后再进行跳转</p><pre><code>0x104a53ff8: 0x58000050   ldr    x16, #0x80x104a53ffc: 0xd61f0200   br     x160x104a54000: 0x00f52078   .long  0x00f52078                ; unknown opcode0x104a54004: 0x00000001   .long  0x00000001                ; unknown opcode(lldb) x/g 0x104a540000x104a54000: 0x0000000100f52078</code></pre><p>这里跳转的地址就是原函数new_ZTL7624417887的第五条指令地址，这样整个调用原函数的过程就结束了。</p><h3 id="vm-remap内存bug原因以及解决办法"><a href="#vm-remap内存bug原因以及解决办法" class="headerlink" title="vm_remap内存bug原因以及解决办法"></a>vm_remap内存bug原因以及解决办法</h3><p>这个bug困扰了我3周，内心相当难受，每天一有时间就会来尝试解决这个问题。frida、substitute、substrate都能够在iOS11/12上面进行代码段patch。为什么我写的代码就会有问题。</p><p>正如前面的那样，我尝试去分析substitute和substrate进行patch相关的细节，无论从闭源的substrate逆向分析，还是开源的substitute源码分析。最开始以为是代码签名问题，但在这两个框架中都没发现和代码签名相关的代码，于是转向frida，果然发现了很多和运行时内存页签名的代码。于是我以为我找到原因了，很可能就是代码签名的问题了，在这期间阅读了frida很多相关代码，也把iOS上的代码签名机制重新学习了一遍。就这样一直进入了代码前面的坑里面，甚至想去研究下remap对应的内核代码，到底是什么原因。</p><p>由于还是感觉还是没有找到问题的关键，于是我再从新回头过来思考iOS inlinehook本身，再次goolge搜索关键字，如果这是一个通用的问题那么理论上应该能搜到相关的资料。原本是想搜iOS inlinehook在各系统版本上面的差异变化。不巧搜到了一个别人抽离substitute的hook代码，由于直接抽离了出来，所以在Xcode中十分方便调试。于是抱着试一试的心态重新分析substitute的代码，结果我发现居然这个hook代码能够在iOS12上面进行代码patch。这就很有意思了，这说明CoolStar并不是进行了其他hack操作才能进行hook。就是原本substitute就能正常patch。这样就消除了我之前认为是越狱开发者从内核层面给hook框架提供的支持。接下来我决定一步步的跟下去，看代码patch那里到底和我写的代码差异在哪里。后面发现我的内存页大小居然和substitute里面的页大小不一致。我定义了页大小为4K也就是0x1000，而substitute为16K即0x4000。其实内存页大小这部分代码我也是参考别人写的代码，那代码是2019年作者能够正常运行，应该没问题的。因为目前iOS的设备32位基本淘汰了，然而那个代码定义的页大小就是32位设备上的4K，我手里的设备都是64位的，如果按照32位的4K去分配以及其他操作肯定会出问题。这和我之前remap后的内存错误也对应上来了，之前全部覆盖为0数据的大小正式4K的4倍，也就是一个64位上的16K内存页大小。最后我把内存页大小改为16K以后再次运行发现这次没有崩溃了，再检查一下patch的地址是否修改以及运行是否符合预期，发现一切都正常工作。</p><p>找到原因以后，我把xia0LLDB中的debugme的内存页大小改为16K以后再测试，发现在iOS12上就能够正常的反反调试了。到这里，困扰了我这么久的问题终于得到了解决，也给我以后分析bug有一定启示，很多时候我们先要对整个运行过程以及基本原理要足够了解，这里就因为我理所当然的认为那个代码在内存页大小这个问题上不会有问题，所以也没有仔细去查看是否正确，从而导走偏了方向。</p><h3 id="iOS-unc0vers-inlinehook失败原因分析-2019-09-19"><a href="#iOS-unc0vers-inlinehook失败原因分析-2019-09-19" class="headerlink" title="iOS unc0vers inlinehook失败原因分析(2019/09/19)"></a>iOS unc0vers inlinehook失败原因分析(2019/09/19)</h3><p>日志：</p><pre><code class="c">sub_1D124() callsub_13B2C() call__int64 MSServerPort(){  char *v0; // x0  int v1; // w20  v0 = **_NSGetArgv();  if ( v0 &amp;&amp; !strcmp(v0, &quot;/usr/libexec/substrated&quot;) )    return 0LL;  if ( !dword_12D524 || (v1 = dword_12D528, v1 != getpid()) )  {    dword_12D524 = sub_1425C();    dword_12D528 = getpid();  }  return (unsigned int)dword_12D524;}</code></pre><pre><code class="c">v3 = bootstrap_look_up(special_port, &quot;cy:com.saurik.substrated&quot;, &amp;sp);</code></pre><p>mobilesubstrate deb包的目录结构</p><pre><code>xia0 ~/xia0/iOSRE/research/iOS11-12-CodePatch-vm_remap-bug/Undecimus.app/apt $ dpkg -X mobilesubstrate_0.9.7033_iphoneos-arm.deb ./extract././Library/./Library/Frameworks/./Library/Frameworks/CydiaSubstrate.framework/./Library/Frameworks/CydiaSubstrate.framework/Headers/./Library/Frameworks/CydiaSubstrate.framework/Info.plist./Library/MobileSubstrate/./Library/MobileSubstrate/DynamicLibraries/./usr/./usr/bin/./usr/bin/cycc./usr/bin/cynject./usr/include/./usr/include/substrate.h./usr/lib/./usr/lib/cycript0.9/./usr/lib/cycript0.9/com/./usr/lib/cycript0.9/com/saurik/./usr/lib/cycript0.9/com/saurik/substrate/./usr/lib/cycript0.9/com/saurik/substrate/MS.cy./usr/lib/libsubstrate.dylib./usr/lib/substrate/./usr/lib/substrate/SubstrateBootstrap.dylib./usr/lib/substrate/SubstrateInserter.dylib./usr/lib/substrate/SubstrateLoader.dylib./usr/libexec/./usr/libexec/substrate./usr/libexec/substrated./Library/Frameworks/CydiaSubstrate.framework/CydiaSubstrate./Library/Frameworks/CydiaSubstrate.framework/Headers/CydiaSubstrate.h./Library/MobileSubstrate/MobileSubstrate.dylib</code></pre><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://github.com/coolstar/electra/issues/233">https://github.com/coolstar/electra/issues/233</a></li><li><a href="https://github.com/coolstar/electra/blob/master/docs/getting-started.md#platformizing-a-binary">https://github.com/coolstar/electra/blob/master/docs/getting-started.md#platformizing-a-binary</a></li><li><a href="https://github.com/ipasimulator/lldb">https://github.com/ipasimulator/lldb</a></li><li><a href="https://github.com/BishopFox/bfinject">https://github.com/BishopFox/bfinject</a></li><li><a href="https://coolstarorg.tumblr.com/" target="_blank" rel="external">https://coolstarorg.tumblr.com/</a></li><li><a href="http://www.newosxbook.com/articles/CodeSigning.pdf" target="_blank" rel="external">http://www.newosxbook.com/articles/CodeSigning.pdf</a></li><li><a href="https://github.com/frida/frida-gum/commit/30deb2c29f060948407b585c4b23475ea60b965b">https://github.com/frida/frida-gum/commit/30deb2c29f060948407b585c4b23475ea60b965b</a></li><li><a href="https://github.com/Siguza/ios-resources/blob/master/bits/arm64.md">https://github.com/Siguza/ios-resources/blob/master/bits/arm64.md</a></li><li><a href="https://github.com/comex/substitute/blob/master/lib/darwin/execmem.c">https://github.com/comex/substitute/blob/master/lib/darwin/execmem.c</a></li><li><a href="https://github.com/anahadaw/iOS_Hook">https://github.com/anahadaw/iOS_Hook</a></li><li><a href="https://forums.developer.apple.com/thread/47532" target="_blank" rel="external">https://forums.developer.apple.com/thread/47532</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;iOS12内存patch-remap-bug分析&quot;&gt;&lt;a href=&quot;#iOS12内存patch-remap-bug分析&quot; class=&quot;headerlink&quot; title=&quot;iOS12内存patch remap bug分析&quot;&gt;&lt;/a&gt;iOS12内存patch r
      
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
      <category term="hook" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/hook/"/>
    
  </entry>
  
  <entry>
    <title>iOS LLDB中反反调试分析与实现</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/08/12/xia0lldb-anti-anti-debug/xia0lldb-anti-anti-debug/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/08/12/xia0lldb-anti-anti-debug/xia0lldb-anti-anti-debug/</id>
    <published>2019-08-12T11:16:01.000Z</published>
    <updated>2019-09-04T08:31:03.902Z</updated>
    
    <content type="html"><![CDATA[<h3 id="iOS-LLDB中反反调试分析与实现"><a href="#iOS-LLDB中反反调试分析与实现" class="headerlink" title="iOS LLDB中反反调试分析与实现"></a>iOS LLDB中反反调试分析与实现</h3><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>关于反调试和反反调试，已经有很多人分析过了，也有很多解决方案。但是在LLDB中做反反调试还没人做过，这也是我一直想解决的一个方案，毕竟本身就是为了调试，那么在LLDB直接输入一行命令就能反反调试应该相对酸爽。本文将介绍一种基于内存单指令patch的方式进行反反调试的方案，大概意思就是通过直接修改代码段的指令来绕过反调试机制。</p><h4 id="目前反调试与反反调试情况"><a href="#目前反调试与反反调试情况" class="headerlink" title="目前反调试与反反调试情况"></a>目前反调试与反反调试情况</h4><p>这里庆哥写了一遍文章分析了 <a href="http://iosre.com/t/topic/8179" target="_blank" rel="external">关于反调试&amp;反反调试那些事</a></p><p>这里简单归纳一下，有如下几种：</p><ul><li>ptrace</li><li>sysctl</li><li>syscall</li><li>SIGTOP</li><li>task_get_exception_ports</li></ul><p>这里实际上就大概三种，其他都是基于ptrace的变种。ptrace这个函数是linux就提供的一个接口，常常用作linux系的反调试，本质就是通过26号系统调用来完成的，目前大多反调试都利用该方案。</p><p>后面看到庆哥同样提供了一个反反调试的LLDB脚本，不过看了下和我的思路还是不一样的。（<del>差点以为白做了）</del></p><p>正如文章里面写到通过<code>lldb</code>下断点，然后修改参数，或者直接返回也可以达到反反调试的效果。由于要不断去检查执行状态等，或者程序有定时器定时检测，这个脚本影响性能及变得很卡影响调试体验。不过还是膜庆哥的方案，学习了。</p><h4 id="内存patch实现反反调试"><a href="#内存patch实现反反调试" class="headerlink" title="内存patch实现反反调试"></a>内存patch实现反反调试</h4><p>说一下大概思路：</p><ul><li>内存中找到<code>ptrace</code>地址</li><li>将该内存map为<code>rwx</code></li><li><p>直接将首调指令修改为<code>ret</code>指令</p><p>刚开始以为就这样简单就完了，结果实际写代码的时候才发现过程远比想象中复杂。</p></li></ul><p>由于iOS不允许直接将代码段map为写权限，这里调用<code>mach_vm_protect</code>或<code>mprotect</code>都会异常。但是类似frida、substitute以及hookzz都能进行指令hook。这样说来，肯定是可以修改代码段的。看了下substitute以及frida中关于这块的实现，才发现可以用一种remap的方式修改代码段。</p><p>大致的流程如下：</p><ul><li>使用mmap新建一块内存，把这块内存叫做new</li><li>使用vm_copy把想要篡改的处于__text段内的内存（把这块内存叫target）拷贝到new里</li><li>向new里写入想执行的代码</li><li>调用mprotect把new改为rx。因为mmap出来的内存的max_protection是rwx，所以这里mprotect改权限没问题</li><li>调用mach_vm_remap把new的内容反映回target里</li></ul><p>不过当我写代码测试的时候发现，remap以后整个页数据都变成了0。实在不清楚原因，向Zz求助，Zz直接扔了我他实现这块的代码。我看了以后收益匪浅，只怪之前没分析hookzz的具体实现。后面才知道由于我的设备是iOS12，Zz意思是codesign的问题，hookZz也没支持。于是换了一台iOS9的设备，果然就可以了，向Zz低头。</p><p>期间还由于我手残忘记调用mprotect把new改为rx。导致直接执行异常，用<code>memory region</code>查看地址才知道页保护属性为<code>rw</code>。</p><p>相关代码如下：</p><p>1、map new page for patch</p><pre><code class="c">    // map new page for patch    void *new = mmap(0, PAGE_SIZE, PROT_READ | PROT_WRITE, MAP_ANON | MAP_SHARED, -1, 0);    if (!new ){        NSLog(@&quot;[-] mmap failed!&quot;);        return;    }    NSLog(@&quot;[*] new map address:%p&quot;, new);</code></pre><p>2、start patch</p><pre><code class="c">    // start patch        kret = vm_copy(self_task, (unsigned long)page_start, PAGE_SIZE, (vm_address_t) new);    if (kret != KERN_SUCCESS){        NSLog(@&quot;[-] kr: %d, errno: %d&quot;, kret, errno);        return;    }    char patch_ret_ins_data[4] = {0xc0, 0x03, 0x5f, 0xd6}; // ret     memcpy((void *)(new+patch_offset), patch_ret_ins_data, 4);    NSLog(@&quot;[*] new map+offset address:%p&quot;, (void *)(new+patch_offset));</code></pre><p>3、set new page back to r-x</p><pre><code class="c">    // set back to r-x    int ret = mprotect(new, PAGE_SIZE, PROT_READ | PROT_EXEC);    NSLog(@&quot;[*] ret: %d, errno: %d, addr: %p&quot;, ret, errno, new);</code></pre><p>4、remap the target page</p><pre><code class="c">    kret = mach_vm_remap(mach_task_self(), &amp;target, PAGE_SIZE, 0,                       VM_FLAGS_OVERWRITE, self_task,                       (mach_vm_address_t) new, TRUE,                       &amp;c, &amp;m, inherit);    if(kret != KERN_SUCCESS){        NSLog(@&quot;[-] kr: %d, errno: %d&quot;, kret, errno);        return;    }    NSLog(@&quot;[*] now ptrace_ptr address:%p&quot;, ptrace_ptr)</code></pre><p>5、clear cache</p><pre><code class="c">    void* clear_start_ = (void*)page_start + patch_offset;  sys_icache_invalidate (clear_start_, 4);  sys_dcache_flush (clear_start_, 4);</code></pre><p>完整的代码在xia0LLDB里面已经集成：<a href="https://github.com/4ch12dy/xia0LLDB">https://github.com/4ch12dy/xia0LLDB</a></p><h4 id="一个简单反反调试实验"><a href="#一个简单反反调试实验" class="headerlink" title="一个简单反反调试实验"></a>一个简单反反调试实验</h4><p>这里以爱奇艺为例子分析，爱奇艺在main函数里面动态调用了ptrace函数进行反调试。</p><ul><li><p>后台启动方式启动爱奇艺</p><pre><code class="shell">xia0 ~ $ issh debug -x backboard /var/containers/Bundle/Application/F9D8AACA-30F0-4F26-96CA-5B06782CC903/iQiYiPhoneVideo.app/iQiYiPhoneVideo[I]:iproxy process for 2222 port alive, pid=16264 [I]:++++++++++++++++++ Nice to Work :) +++++++++++++++++++++ [I]:iOSRE dir exist [I]:iproxy process for 1234 port alive, pid=16428 [I]:Run ps -e | grep debugserver | grep -v grep; [[ 0 == 0 ]] &amp;&amp; (killall -9 debugserver 2&gt; /dev/null) [I]:/iOSRE/tools/debugserver file exist, Start debug... [I]:Run /iOSRE/tools/debugserver 127.0.0.1:1234 -x backboard /var/containers/Bundle/Application/F9D8AACA-30F0-4F26-96CA-5B06782CC903/iQiYiPhoneVideo.app/iQiYiPhoneVideo</code></pre></li><li><p>LLDB挂上以后在main函数下断点以后直接执行<code>debugme</code>命令</p><pre><code>(lldb) debugmeKill antiDebug by xia0:[*] ptrace target address: 0x1837dc180 and offset: 0x180[*] mmap new page: 0x1021ec000 success. [+] vm_copy target to new page.[+] patch ret[0xc0 0x03 0x5f 0xd6] with memcpy[*] set new page back to r-x success![*] get page info done.[+] remap to target success![*] clear cache success![+] all done! happy debug~</code></pre><p>下面查看对比下patch前后指令ptrace首指令的变化</p><p>Patch之前</p><pre><code>(lldb) x/12i 0x00000001837dc180    0x1837dc180: 0xf00f26a9   adrp   x9, 124119    0x1837dc184: 0x91034129   add    x9, x9, #0xd0             ; =0xd0     0x1837dc188: 0xb900013f   str    wzr, [x9]    0x1837dc18c: 0xd2800350   mov    x16, #0x1a    0x1837dc190: 0xd4001001   svc    #0x80    0x1837dc194: 0x540000c3   b.lo   0x1837dc1ac               ; &lt;+44&gt;    0x1837dc198: 0xa9bf7bfd   stp    x29, x30, [sp, #-0x10]!    0x1837dc19c: 0x910003fd   mov    x29, sp    0x1837dc1a0: 0x97ff9b08   bl     0x1837c2dc0               ; cerror    0x1837dc1a4: 0x910003bf   mov    sp, x29    0x1837dc1a8: 0xa8c17bfd   ldp    x29, x30, [sp], #0x10    0x1837dc1ac: 0xd65f03c0   ret</code></pre><p>Patch之后</p><pre><code>(lldb) x/12i 0x1837dc180    0x1837dc180: 0xd65f03c0   ret        0x1837dc184: 0x91034129   add    x9, x9, #0xd0             ; =0xd0     0x1837dc188: 0xb900013f   str    wzr, [x9]    0x1837dc18c: 0xd2800350   mov    x16, #0x1a    0x1837dc190: 0xd4001001   svc    #0x80    0x1837dc194: 0x540000c3   b.lo   0x1837dc1ac               ; &lt;+44&gt;    0x1837dc198: 0xa9bf7bfd   stp    x29, x30, [sp, #-0x10]!    0x1837dc19c: 0x910003fd   mov    x29, sp    0x1837dc1a0: 0x97ff9b08   bl     0x1837c2dc0               ; cerror    0x1837dc1a4: 0x910003bf   mov    sp, x29    0x1837dc1a8: 0xa8c17bfd   ldp    x29, x30, [sp], #0x10    0x1837dc1ac: 0xd65f03c0   ret</code></pre><p>可以发现首地址已经变成了ret指令。</p></li><li><p>执行continue命令，发现爱奇艺已经能够正常调试。</p><pre><code>(lldb) cProcess 3176 resuming2019-08-13 17:22:17.283 iQiYiPhoneVideo[3176:161840] [plcrash]: init ok2019-08-13 17:22:17.790 iQiYiPhoneVideo[3176:161840] -[QYBaikePageDurationManager bk_appDidBecomeActive:]2019-08-13 17:22:17.922 iQiYiPhoneVideo[3176:161840] CoreData: Failed to load optimized model at path &#39;/var/containers/Bundle/Application/F9D8AACA-30F0-4F26-96CA-5B06782CC903/iQiYiPhoneVideo.app/QYPGCDataModel.momd/QYPGCDataModel_970.omo&#39;2019-08-13 17:22:20.477 iQiYiPhoneVideo[3176:161840] OSStatus error: [-34018] Security error has occurred.2019-08-13 17:22:20.558 iQiYiPhoneVideo[3176:162000] OSStatus error: [-34018] Security error has occurred.3176:161840] Incorrect NSStringEncoding value 0x8000100 detected. Assuming NSASCIIStringEncoding. Will stop this compatiblity mapping behavior in the near future.ontainers/Data/Application/5C31FE18-9BA4-4B2D-80C6-68BF7F65855F/Library/Application Support/爱奇艺/0_im.sqlite</code></pre></li></ul><h4 id="总结-Todo"><a href="#总结-Todo" class="headerlink" title="总结/Todo"></a>总结/Todo</h4><p>这里只是简单的绕过了ptrace方式的反调试，针对直接用汇编写的反调试我的做法是静态内存搜索匹配svc位置，发现是调用26号系统调用则利用内存patch为nop。或者写一个简单的hook代码，hook所有的svc地址，判断寄存器的值然后进行hook即可，这样就能绕过这些反调试机制，再次向Zz和庆哥低头。</p><h4 id="参考-致谢"><a href="#参考-致谢" class="headerlink" title="参考/致谢"></a>参考/致谢</h4><ul><li><p><a href="https://gist.github.com/piaoger/4ba83f6a954bca113505" target="_blank" rel="external">https://gist.github.com/piaoger/4ba83f6a954bca113505</a></p></li><li><p><a href="https://github.com/comex/substitute/blob/master/lib/darwin/execmem.c">https://github.com/comex/substitute/blob/master/lib/darwin/execmem.c</a></p></li><li><p><a href="https://www.codercto.com/a/63507.html" target="_blank" rel="external">https://www.codercto.com/a/63507.html</a></p></li><li><p><a href="https://github.com/jmpews/HookZz/blob/dev/srcxx/UserMode/ExecMemory/code-patch-tool-darwin.cc#L26">https://github.com/jmpews/HookZz/blob/dev/srcxx/UserMode/ExecMemory/code-patch-tool-darwin.cc#L26</a></p></li><li><p><a href="https://github.com/gdbinit/readmem/blob/master/readmem/main.c">https://github.com/gdbinit/readmem/blob/master/readmem/main.c</a></p></li><li><p><a href="https://github.com/frida/frida-gum/blob/master/gum/backend-darwin/machexc.h">https://github.com/frida/frida-gum/blob/master/gum/backend-darwin/machexc.h</a></p></li><li><p><a href="http://newosxbook.com/src.jl?tree=xnu&amp;file=/libsyscall/mach/mach_vm.c" target="_blank" rel="external">http://newosxbook.com/src.jl?tree=xnu&amp;file=/libsyscall/mach/mach_vm.c</a></p></li><li><p><a href="https://github.com/DaKnOb/memscan/blob/master/main.mm">https://github.com/DaKnOb/memscan/blob/master/main.mm</a></p></li><li><p><a href="http://iosre.com/t/topic/8179" target="_blank" rel="external">http://iosre.com/t/topic/8179</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;iOS-LLDB中反反调试分析与实现&quot;&gt;&lt;a href=&quot;#iOS-LLDB中反反调试分析与实现&quot; class=&quot;headerlink&quot; title=&quot;iOS LLDB中反反调试分析与实现&quot;&gt;&lt;/a&gt;iOS LLDB中反反调试分析与实现&lt;/h3&gt;&lt;h4 id=&quot;开
      
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
      <category term="LLDB" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/LLDB/"/>
    
  </entry>
  
  <entry>
    <title>Android应用安装过程深度解析</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/08/01/android-apk-install-process/android-apk-install-process/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/08/01/android-apk-install-process/android-apk-install-process/</id>
    <published>2019-08-01T07:08:31.000Z</published>
    <updated>2019-08-01T10:29:23.735Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android应用安装过程深度解析"><a href="#Android应用安装过程深度解析" class="headerlink" title="Android应用安装过程深度解析"></a>Android应用安装过程深度解析</h3><blockquote><p>本文由我和willing对整个安装过程的原理梳理，感谢willing精心的绘图以及相关源码整理。</p></blockquote><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>关于对Android应用的安装过程梳理，是因为很多重打包的外挂利用系统矫正器来绕过安卓系统的签名校验。为了分析其原理，详细分析了Android应用安装的过程，找到其中签名校验的地方，进一步做一些对抗和检测。</p><h4 id="整体流程"><a href="#整体流程" class="headerlink" title="整体流程"></a>整体流程</h4><p>一个 Android 应用安装到手机上大致分为四种情形：</p><ul><li>系统应用，在设备每次启动时完成安装</li><li>通过 adb install 命令安装</li><li>应用市场安装，封装安装过程（略）</li><li>第三方应用安装或双击安装包，会启动系统应用引导安装</li></ul><p>无论采用哪种安装方式，最终的安装过程都会走到 PackageManagerService，由这个类来完成一系列的工作。PackageManagerService 实际上是一个系统服务，负责提供系统上所有应用的管理，包括安装、优化、查询和卸载，这个类最终会通过 socket 与 installd 这个守护进程通信，真实对应用进行操作的其实是由 installd 这个进程完成。</p><h4 id="场景一：系统应用安装"><a href="#场景一：系统应用安装" class="headerlink" title="场景一：系统应用安装"></a>场景一：系统应用安装</h4><p>在设备启动时，Linux 系统的用户空间进程 init （pid = 1）会孵化许多子进程，包括一系列守护进程，其中就有上面提到的 installd，然后会孵化许多重要的系统服务，如 servicemanager，这个进程会负责管理所有服务的 Binder 通信，最后 init 还会孵化 zygote 进程，这个进程是第一个 Java 进程，zygote 进程会孵化出许多应用程序进程，包括 launcher 进程，即桌面进程，zygote 还会孵化出 system_server 进程，负责启动和管理 Framework 的 Java 层服务，包括 PackageManagerService、ActivityManagerService 等。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801151901799.png?raw=true" alt="image-20190801151901799"></p><p><strong>补充：system_server 的启动与运行流程</strong></p><p>system_server 由 zygote 进程孵化，是整个 Android Framework 的基础</p><p>zygote 启动阶段会调用 forkSystemServer() 创建子进程 system_server</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152013042.png?raw=true" alt="image-20190801152013042"></p><p>ForkAndSpecializeCommon 函数中完成进程创建工作并返回，两次返回，pid=0 时为子进程，pid&gt;0 时为父进程。onZygoteInit() 回调的实现在在 app_main.cpp 中，会调用 ProcessState::self() 初始化 binder 的交互操作，然后调用 proc-&gt;startThreadPool() 创建 binder 线程进行通信</p><p>RuntimeInit 的 findStaticMain() 调用 com.android.server.SystemServer 的 main 方法</p><p>SystemServer 的 run() 方法中会完成以下工作：</p><ul><li>设置时间、语言等，设置虚拟机库文件，设置内存</li><li>Looper.prepareMainLooper() 主线程 looper 运行在当前线程</li><li>加载库文件 android_servers，位于 /frameworks/base/services</li><li>createSystemContext() 初始化系统上下文</li><li>SystemServiceManager() 创建系统服务管理器，并添加到本地服务成员 LocalServices 中</li><li>启动各种系统服务，包括引导服务、核心服务、其他服务</li><li>开启循环，等待其他线程通过 handler 发送消息到主线程来处理</li></ul><p>在 system_server 进程启动过程中会启动各种系统服务，其中就包含 PackageManagerService</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152050671.png?raw=true" alt="image-20190801152050671"></p><p>PackageManagerService 类构造函数中完成了许多工作，主要包含：</p><ul><li>创建 Settings 对象，添加系统的 SharedUser 信息</li><li>为 Installer 对象赋值，赋值参数是在 system_server 进程中创建的</li><li>创建 PackageDexOptimizer 和 DexManager 对象</li><li>获取 SystemConfig 实例，获取系统的全局配置信息，如 GlobalGids、SystemPermissions、AvailableFeatures</li><li>创建 ServiceThread 和 PackagerHandler 对象</li><li>创建 UserManagerService，支持多用户</li><li>读取系统定义的权限保存到 permConfig 变量中</li><li>读取系统共享库保存到 libConfig 变量中</li><li>解析 package.xml 文件中的内容保存到 ArrayMap<string, packageparser.package=""> 结构中</string,></li><li>配置扫描参数 scanFlags</li><li>开始扫描系统应用，包括目录 /vender/overlay、/system/framework、/system/priv-app、/system/app、/vendor/app、/oem/app</li><li>开始扫描非系统应用，包括目录 /data/app、/data/app-private</li><li>启动内存垃圾回收</li><li>启动私有服务 PackageManagerInternal</li></ul><p>总结来说主要是这几项内容：</p><ul><li>创建了 Java 层 Installer 和 C 层 installd 之间的 socket 连接</li><li>扫描各目录下 apk文件完成安装（建立各安装包的配置结构信息，并添加到全局列表中进行管理）</li><li>创建了 PackageHandler 对象并建立消息循环，接收外部的安装请求</li><li>解析权限，建立底层 Linux Kernel 的用户机制和虚拟机层权限机制之间的映射</li></ul><p>详细说明各项：</p><p>Installer 是 PackageManagerService 的一个内部类，继承自SystemService，协助完成安装过程，主要是进行 apk 格式转换和数据目录建立，封装对文件和路径操作，真正的安装工作交由 IInstalld 内部类对象完成。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152128607.png?raw=true" alt="image-20190801152128607"></p><p>Installer 在 SystemServer 中启动，通过 SystemServiceManager 的 startService(Installer.class) 启动。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152145965.png?raw=true" alt="image-20190801152145965"></p><p>构造函数 Installer() 初始化 context 和 isolated（是否真正连接installd）成员变量</p><p>重写 onStart() 方法，基于 isolated 判断是否调用 connect() 进行连接</p><p>connect() 通过 ServiceManager 获取 installd 服务并拿到服务的本地代理放到成员变量 mInstalld 中</p><p>Installer 调用 dexopt() 最终调用了 mInstalld 的dexopt() 方法，其他方法类似，几乎就是一个 IInstalld 类的封装</p><p><strong>!!!!  Installer 的实现变化很大：6.0 上通过以命令的方式通过 execute 方法执行；8.1 通过 AIDL 接口实现</strong></p><p><strong>PackageManageService（system权限） 与 installd（root权限） 守护进程共同完成应用管理</strong></p><p>PackageManagerService 的构造函数中会扫描许多应用目录来安装 apk</p><p>包括：</p><ul><li>系统应用，目录有 <code>/vender/overlay</code>、<code>/system/framework</code>、<code>/system/priv-app</code>、<code>/system/app</code>、<code>/vendor/app</code>、<code>/oem/app</code></li><li>非系统应用，目录有 <code>/data/app</code>、<code>/data/app-private</code></li></ul><p>调用的方法是 <code>scanDirTracedLI()</code></p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152328199.png?raw=true" alt="image-20190801152328199"></p><p>可以看到依次调用 scanDirLI()、scanPackageLI()、scanPackageInternalLI()</p><p>其中，scanDirLI() 调用了 ParallelPackageParser 类进行解析，从名字也能看出做了一些并行的优化处理，真正的工作还是交给 PackageParser 来完成，PackageParser 的 parsePackage() 方法内部完成了应用的解析，实际上是解析了 AndroidManifest.xml 文件里面各个标签，包括包名、版本、权限、各组件这些信息，最后的解析结果放在 PackageParser.Package 类中返回给 PMS，这样 PMS 就拥有应用的信息便与做各种管理</p><p>后面继续调用了 scanPackageLI() 和 scanPackageInternalLI() 是进一步检测应用是否需要更新，如果需要更新则接着调用 createInstallArgsForExisting() 构造安装参数开始安装（后面还会遇到这个函数，暂时不展开），安装涉及到的签名校验也是在这里，调用了 collectCertificatesLI()、compareSignatures() 等</p><h4 id="场景二：adb-命令安装"><a href="#场景二：adb-命令安装" class="headerlink" title="场景二：adb 命令安装"></a>场景二：adb 命令安装</h4><p>adb 是 Android SDK 提供的一个命令行工具，为客户端-服务器架构，服务端为移动端上运行的守护进程 adbd，与 installd 一样由 init 进程创建</p><p>源码路径为：<a href="http://androidxref.com/8.1.0_r33/xref/system/core/adb/" target="_blank" rel="external">http://androidxref.com/8.1.0_r33/xref/system/core/adb/</a></p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152448109.png?raw=true" alt="image-20190801152448109"></p><p>adb_commandline() 函数接收 adb 命令行参数，调用 install_app() 执行安装流程，这个函数会对命令行做一些修改，实际上调用 pm 命令，并通过 send_shell_command() 将命令发送给 Pm 类。</p><p>Pm 启动函数 main 会构造 Pm 类对象并调用 run() 方法，在这个方法里首先会获取 PackageManger 服务 mPm，然后调用 getPackageInstaller() 获取 PackageInstaller 对象 mInstaller，最后基于不同的命令调用不同的方法。</p><p>runInstall() 里面会首先获取之前解析时设置的安装参数 InstallParams，然后依次调用 doCreateSession() 创建安装会话，doWriteSession() 会通过 IO 流将应用信息写入 PackageInstaller.Session 对象，doCommitSession() 会提交相应的会话启动安装，最后调用 abandonSession() 结束会话。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152518924.png?raw=true" alt="image-20190801152518924"></p><p>PackageInstallerSession 的 commit() 方法首先将包信息封装到 PackageInstallObserverAdapter 这个类中，是 PackageInstallerService 的一个内部类，然后通过这个适配器获取 PackageInstallObserver2 对象代理，这是一个跨进程的观察者，接收安装状态的回调，最后用 Handler 的 obtainMessage 构造一个 MSG_COMMIT 类型的消息并发送出去。</p><p>发送的消息由 PackageInstallerService 的 Handler.Callback 接受，然后调用 commitLocked()，此方法最终会调用 PMS 的 installStage() 方法。</p><p>PackageInstallObserver2 对象接收到安装成功的回调时，会接着调用 PackageInstallerService 的 dispatchSessionFinished()，这个方法最后也是到了 PMS 里面调用 sendSessionCommitBroadcast() 方法。</p><h4 id="场景三：第三方应用安装"><a href="#场景三：第三方应用安装" class="headerlink" title="场景三：第三方应用安装"></a>场景三：第三方应用安装</h4><p>当下载一个新的应用包双击安装时，实际上是发送了一个 “android.intent.action.INSTALL_PACKAGE” 的 intent，这个时候会唤起 Android 系统的一个应用 PackageInstaller 来完成安装操作</p><p>PackageInstaller 的应用代码位于：<a href="http://androidxref.com/8.1.0_r33/xref/packages/apps/PackageInstaller/" target="_blank" rel="external">http://androidxref.com/8.1.0_r33/xref/packages/apps/PackageInstaller/</a></p><p>安装位置 /system/priv-app/GooglePackageInstaller，是一个 Android 系统默认应用程序，提供了用户界面来管理应用或包，用于安装普通文件</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152605993.png?raw=true" alt="image-20190801152605993"></p><p>应用双击安装后会唤起 PackageInstaller 应用，入口类为 InstallStart，onCreate() 首先被调用完成一些初始化过程，然后获取调用源做一些权限检查。</p><p>然后会调起 PackageInstallerActivity，onCreate() 会包括获取 PackageManager 和 PackageInstaller 对象，然后从 intent 中获取 mSessionId、packageUri、mOriginatingURI、mReferrerURI 这些与安装包相关的信息，接着调用 processPackageUri() 解析 uri，这里面会调用 PackageParser 去解析包，再接着会调用 bindUi() 完成安装主界面的展示和部件绑定，最后调用 checkIfAllowedAndInitiateInstall() 检查是否允许安装，如果允许，里面会继续调用 initiateInstall() 初始化安装，实际上这个函数是检查是否需要替换安装，最后调用 startInstallConfirm() 准备安装，设置 mOk 这个安装按钮为 true。</p><p>用户确认点击安装按钮后，调用 startInstall() 开始安装，这个函数里面又会构造一个 intent 传递必要的数据，开启 InstallInstalling 这个 activity。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152635344.png?raw=true" alt="image-20190801152635344"></p><p>InstallInstalling 这个类会拿到应用数据开启真正的安装流程。</p><p>首先是 onCreate() 函数，首先从 Intent 中取出数据放到 ApplicationInfo 中，然后基于拿到的应用信息分两种情况：如果是更新，则调用 getPackageManager() 获取 PackageManager 然后调用 installExistingPackage() 安装，成功调用 launchSuccess() 方法，失败调用 launchFailure() 方法，launchSuccess 会构造 Intent 跳转到 InstallSuccess 类， launchFailure 则跳转到 InstallFailed 类；如果是新应用的安装，首先会向 InstallEventReceiver 注册一个安装结果监听的广播，成功调用 launchSuccess，失败调用 launchFailure。</p><p>接下来是 onStart() 方法，这里会依次调用 getPackageManager()，getPackageInstaller()，registerSessionCallback() 注册会话的回调。</p><p>最后是 onResume() 方法，这个方法里会获取 session 的相关信息，然后创建并执行 InstallingAsyncTask() 的安装服务，其中的 doInBackground() 方法会将应用信息通过 IO 流写入 PackageInstaller.Session 中，onPostExecute() 方法则构造一个 PendingIntent 并将它的 IntentSender 通过 PackageInstaller.Session 的 commit() 方法发送出去</p><p>这里就跟 adb 安装走到了同一个流程中。</p><h4 id="深入-PMS-中的安装"><a href="#深入-PMS-中的安装" class="headerlink" title="深入 PMS 中的安装"></a>深入 PMS 中的安装</h4><p>上面的后面两种场景最后都会通过 PackageInstallerSession 的 commit() 方法提交一个安装的会话，并且最终调用到了 PackageManagerService 的 installStage() 方法</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152711796.png?raw=true" alt="image-20190801152711796"></p><p>在 installStage() 里会基于传入的参数构造一个 InstallParams 对象，这个对象中包含安装包的所有数据，然后将这个对象作为消息内容，通过 mHandler 发送一个类型为 INIT_COPY 的消息。</p><p>所有类型的消息处理都在 PackageHandler 里，这个类会通过 Binder 与 system_server 创建的 ServiceThread 线程绑定，PackageHandler 负责分发任务，ServiceThread 负责处理任务。</p><p><strong>1、处理 INIT_COPY 消息</strong></p><p>首先从消息结构中取出前面封装好的 HandlerParams 对象，然后检查 mBound 标志判断是否绑定 DefaultContainerService，这个服务用于检查和复制文件，位于 com.android.defcontainer 进程，通过 IMediaContainerService 与PMS 通信，mBound 默认为 false，此时调用 connectToService() 来绑定服务，并获取当前索引值的 HandlerParams 对象添加到 mPendingInstalls 这个 HandlerParams 的 ArrayList 中，如果 mBound 为 true，即服务已经连接，则直接添加 HandlerParams 对象，并发送一个 MCS_BOUND 消息。</p><p><strong>2、处理 MCS_BOUND 消息</strong></p><p>首先检查 DefaultContainerService 服务连接没问题，就开始处理安装请求队列，从 mPendingInstalls 中取出 HandlerParams 对象并调用它的 startCopy() 方法。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152741833.png?raw=true" alt="image-20190801152741833"></p><p>HandlerParams 是 PMS 中的抽象类，它的 startCopy() 会通过一个 mRetries 的私有变量检查尝试次数，超过4次则向 Handler 发送 MCS_GIVE_UP 的消息，抓到异常则发送 MCS_RECONNECT 的消息，成功则继续调用 handleStartCopy() 这个抽象方法，具体实现在 InstallParams 中，</p><p>InstallParams 的 handleStartCopy() 会首先是确定应用安装位置，是sd卡还是内部存储，并且做一些检查如位置冲突，空间够不够，然后通过 createInstallArgs() 创建 InstallArgs 类，然后调用这个类的 copyApk() 方法，InstallArgs 类也是抽象类，定义了应用包安装逻辑，子类包括 FileInstallArgs，处理 non-ASEC 应用，也即内部存储空间的应用， AsecInstallArgs 处理安装到 SD 卡中的应用，以及 MoveInstallArgs 处理已安装的应用，因此实际上是调用各自实例对象的 copyApk() 方法</p><p>以 FileInstallArgs 为例，copyApk() 方法会调用 doCopyApk()，在这个方法里会首先创建一个临时存储目录，然后调用 DefaultContainerService 的 copyPackage() 方法完成 apk 复制</p><p>HandlerParams 复制 apk 后会调用 handleReturnCode()，这个方法又会调用 processPendingInstall() 方法，最终会调用到 InstallArgs 的 doPreInstall() 完成安装前的清理工作，调用 installPackageTracedLI() 实现真正的安装，以及调用 InstallArgs 的 doPostInstall() 完成收尾的清理工作，最后发送一个类型为 POST_INSTALL 的消息</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152755489.png?raw=true" alt="image-20190801152755489"></p><p> installPackageTracedLI() 里面完成的是真正的安装操作，会依次进行变量初始化，再次解析应用包，获取签名信息，权限检查，安装路径重命名等等操作，最后根据参数有两种不同的处理方式，更新条件下的覆盖安装，调用 replacePackageLI() 方法，以及应用的首次安装，调用 installNewPackageLI() 方法</p><p>其中 replacePackageLI() 会首先清楚应用包的注册信息，然后类似 installNewPackageLI() 里面的流程重新安装更新的包，直接看  installNewPackageLI() 流程</p><p>installNewPackageLI() 里面调用 scanPackageTraceLI() 执行安装，然后这个函数里面又会继续调用 scanPackageInternalLI() 执行包解析，最后将 PackageParser.Package 对象返回出来，扫描完包之后就会调用 updateSettingsLI() 更新 Settings，也就是更新应用在 PMS 中的注册信息，会修改包括 packages.xml、package.list 等相关文件，如果安装成功则调用 prepareAppDataAfterInstallLIF() 来创建相关的数据目录，失败则执行回退操作 deletePackageLIF()</p><p><strong>3、处理 POST_INSTALL 消息</strong></p><p>首先从 mRunningInstalls 中拿到 PostInstallData 对象，mRunningInstalls 是 PostInstallData 格式的列表，在应用安装成功时构建，在安装完成后会调用 delete() 移除这一条记录，接下来取 PostInstallData 对象中的一些信息如安装参数，授予的权限等作为参数调用 handlePackagePostInstall() 执行安装完成的后续操作，包括授予权限，发送安装成功广播，发送启动广播等等</p><h4 id="安装过程小结"><a href="#安装过程小结" class="headerlink" title="安装过程小结"></a>安装过程小结</h4><p>与应用相关的一些目录</p><ul><li><p>/system/priv-app：系统应用安装路径，Android 4.4+ 开始出现，区分系统应用权限，拥有 SignatureOrSystem 权限，此目录下的 service 具有保活能力</p></li><li><p>/system/app：系统应用安装路径，权限略低于 priv-app 目录下的应用，放置比如厂商内置应用</p></li><li><p>/data/app：用户应用安装路径，应用安装时将 apk 复制到此目录下</p></li></ul><ul><li><p>/data/data：用户应用数据存放路径，存在沙箱隔离</p></li><li><p>/data/dalvik-cache：存放应用的dex 文件</p></li><li><p>/data/system：存放应用安装相关文件</p><ul><li>packages.xml 是一个应用的注册表，在解析应用时创建，有变化时更新，记录系统权限，各应用信息，如name, codePath, flag, version, userid，下次开机时直接读取并添加到内存列表</li><li>package.list 指定应用的默认存储位置，userid 等</li></ul></li></ul><p>应用安装过程总结</p><ol><li>将应用 apk 拷贝到指定目录下</li><li>解压 apk，将 dex 文件拷贝到 /data/dalvik-cache 目录，创建 /data/data/<packagename> 数据目录</packagename></li><li>解析 AndroidManifest.xml 及其他资源文件，提取应用包信息，注册到 packags.xml 中</li><li>由 Launcher 进程通过 PMS 取出所有应用程序，展示在桌面上</li></ol><h4 id="PMS-与-PM-与APM"><a href="#PMS-与-PM-与APM" class="headerlink" title="PMS 与 PM 与APM"></a>PMS 与 PM 与APM</h4><p>前面的一切分析都是围绕 PackageManagerService 来进行的，但是实际上平时开发过程中基本接触不到这个类，在用户层用得最多的应该是 PackageManager 这个类</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152858658.png?raw=true" alt="image-20190801152858658"></p><p>通常在用户层通过 Context 的 getPackageManager() 方法来获取 PackageManager 实例，Context 的 getPackageManager() 实现在 ContextImpl 里面，这个函数实际上返回的是一个 ApplicationPackageManager 对象，ApplicationPackageManager 类构造函数需要两个璨是，一个是 ContextImpl 自身，另一个是通过 ActivityThread 的 getPackageManager() 获取 IPackageManager 对象</p><p>ActivityThread 的 getPackageManager() 首先调用 ServiceManager 的 getService(“package”) 获取 IBinder 对象，然后通过 IPackageManger.Stub.asInterface(IBinder) 获取 IPackageManager 对象，实际上为这个对象的一个代理</p><p>继续梳理一下这个类与 PMS 之间的关系</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/android-apk-install-process/image-20190801152915992.png?raw=true" alt="image-20190801152915992"></p><p>IPackageManager 使用了 Android 接口定义语言（AIDL）实现进程间通信，通过在 .aidl 后缀的文件中定义好接口，Android SDK 就会基于此文件自动生成一个 IBinder 接口的类，服务端实现这些接口，客户端则通过绑定到服务调用接口中定义的方法</p><p>IPackageManager 通过 AIDL 文件自动生成的一个接口类，继承自 IInterface</p><p>IPackageManager.Stub 是 IPackageManager 的内部类，继承自 Binder，实现 IPackageManager</p><ul><li>asInterface() 方法接受 IBinder 对象，转换成 IPackageManager 类型对象并返回，实际上返回的是 IPackageManager.Stub.Proxy 对象</li><li>asBinder() 方法返回自身，即 IPackageManager.Stub 对象</li><li>重写了 onTransact() 方法，根据命令类型处理数据传输</li></ul><p>IPackageManager.Stub.Proxy 是 IPackageManager.Stub 的内部类，实现了IPackageManager接口</p><ul><li>mRemote对象是IBinder类型，是对IPackageManager.Stub的引用</li><li>重写了asBinder()方法，返回mRemote</li><li>实现了AIDL文件定义的接口</li></ul><p>PackageManager 是系统提供的服务管理类，负责管理应用程序包的，包含以下功能：</p><ul><li>安装/卸载/更新应用，包括 installPackage/</li><li>查询已安装应用，通过 getInstalledPackages() 方法获取 PackageInfo 对象的列表</li><li>查询应用相关信息，通过 getPackageInfo() 方法获取 PackageInfo 对象</li><li>查询权限相关信息，通过 getPermissionInfo() 方法获取 PermissionInfo 对象</li><li>增加/删除权限，包括 addPermission/removePermission</li><li>清除用户数据/缓存/代码等</li></ul><p>PackageManager 是一个抽象类，定义了 IPackageManager 接口的子集</p><p>ApplicationPackageManager 是 PackageManager 的实现类，它继承了 PackageManager 并实现其所有抽象方法</p><p>PackageManagerService 继承了 IPackageManager.Stub</p><p>因此，总结来说就是，ApplicationPackageManager 是 AIDL 模型中 Binder 通信的客户端，PackageMangerService 就是服务端，客户端的所有的功能都是通过一个 IPackageManager 类型的成员变量去完成的，实际上这个变量就是 PackageManagerService 的一个代理，通过这个代理客户端可以调用到 PackageManagerService 中的一些方法</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="http://androidxref.com/8.1.0_r33/xref/" target="_blank" rel="external">http://androidxref.com/8.1.0_r33/xref/</a></li><li><a href="https://juejin.im/post/5b7e72bbe51d453894001ef0#heading-6" target="_blank" rel="external">https://juejin.im/post/5b7e72bbe51d453894001ef0#heading-6</a></li><li><a href="http://solart.cc/2016/10/30/install_apk/" target="_blank" rel="external">http://solart.cc/2016/10/30/install_apk/</a></li><li><a href="https://www.jianshu.com/p/4f16421d5c7f" target="_blank" rel="external">https://www.jianshu.com/p/4f16421d5c7f</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Android应用安装过程深度解析&quot;&gt;&lt;a href=&quot;#Android应用安装过程深度解析&quot; class=&quot;headerlink&quot; title=&quot;Android应用安装过程深度解析&quot;&gt;&lt;/a&gt;Android应用安装过程深度解析&lt;/h3&gt;&lt;blockquote&gt;

      
    
    </summary>
    
      <category term="wiki" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/wiki/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
      <category term="Android" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Arduino ESP8266开发板上手实践</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/30/Arduino-ESP8266-bigstep/Arduino-ESP8266-bigstep/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/30/Arduino-ESP8266-bigstep/Arduino-ESP8266-bigstep/</id>
    <published>2019-07-30T02:46:35.000Z</published>
    <updated>2019-08-09T08:47:21.452Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Arduino-ESP8266开发板上手实践"><a href="#Arduino-ESP8266开发板上手实践" class="headerlink" title="Arduino ESP8266开发板上手实践"></a>Arduino ESP8266开发板上手实践</h3><h4 id="环境搭建（macOS）"><a href="#环境搭建（macOS）" class="headerlink" title="环境搭建（macOS）"></a>环境搭建（macOS）</h4><p>官方说明：<a href="https://github.com/esp8266/Arduino">https://github.com/esp8266/Arduino</a></p><ul><li><p><strong>安装IDE （Arduino IDE）</strong></p><p>下载地址：<a href="https://www.arduino.cc/en/main/software" target="_blank" rel="external">https://www.arduino.cc/en/main/software</a></p><p>还有种方式是利用<a href="https://github.com/plerup/makeEspArduino">Makefile</a>去做开发，这里先做个记录，说不定以后会用这个开发模式，毕竟可控性比较高。但目前还不是很熟悉，建议选择上面的IDE。</p></li></ul><ul><li><p><strong>下载ESP8266硬件包</strong></p><p>1 、在设置里面的附加板管理器网址中增加以下链接<code>https://arduino.esp8266.com/stable/package_esp8266com_index.json</code></p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/Arduino-ESP8266-bigstep/image-20190730143145367.png?raw=true" width="500" hegiht="313" align="center"></p><p>2、在工具中找到你的开发板，然后进入开发板管理器，搜索<strong>esp8266</strong>安装该库，我这里已经安装了。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/Arduino-ESP8266-bigstep/image-20190730143643887.png?raw=true" width="500" hegiht="313" align="center"></p><p>注意：如果这种方式安装不了，你可以选择下载软件包手动安装，这里不展开分析。参考<a href="https://github.com/esp8266/Arduino">这里</a></p></li><li><p><strong>运行示例代码</strong></p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/Arduino-ESP8266-bigstep/image-20190730144157955.png?raw=true" width="500" hegiht="313" align="center"></p><p>我这里打开Blink这个示例代码，这段代码很简单，就是控制LED灯的闪烁。</p><p>代码如下</p><pre><code class="c">/*  ESP8266 Blink by Simon Peter  Blink the blue LED on the ESP-01 module  This example code is in the public domain  The blue LED on the ESP-01 module is connected to GPIO1  (which is also the TXD pin; so we cannot use Serial.print() at the same time)  Note that this sketch uses LED_BUILTIN to find the pin with the internal LED*/void setup() {  pinMode(LED_BUILTIN, OUTPUT);     // Initialize the LED_BUILTIN pin as an output}// the loop function runs over and over again forevervoid loop() {  digitalWrite(LED_BUILTIN, LOW);   // Turn the LED on (Note that LOW is the voltage level  // but actually the LED is on; this is because  // it is active low on the ESP-01)  delay(1000);                      // Wait for a second  digitalWrite(LED_BUILTIN, HIGH);  // Turn the LED off by making the voltage HIGH  delay(2000);                      // Wait for two seconds (to demonstrate the active low LED)}</code></pre><p>在这里点击项目上传，就会编译该Blink项目并上传写入开发板上面运行。如果一切顺利的话，你的开发板的LED灯应该就会开始闪烁了。</p></li></ul><h4 id="重要！！！一些坑以及注意点"><a href="#重要！！！一些坑以及注意点" class="headerlink" title="重要！！！一些坑以及注意点"></a>重要！！！一些坑以及注意点</h4><p>下面说下一切不是很顺利的情况，首先我这里是以mac会开发平台，所以这里都是mac相关的注意事项和问题。</p><p>确定你的端口正常，即电脑是否与开发板正常通信。一般来说你上传代码报错多半是由于端口不可用或者无法找到端口。这里提供几个思路去检查。</p><p>1、确定usb是否连接，这里可以下载一个IORegistryExplorer的工具。<a href="https://developer.apple.com/download/more/" target="_blank" rel="external">下载地址1</a> <a href="https://github.com/vulgo/IORegistryExplorer">下载地址2</a> <a href="https://mac.softpedia.com/get/System-Utilities/IORegistryExplorer.shtml" target="_blank" rel="external">下载地址3</a>在我插入开发板的时候可以看到usb2.0下面多了一个设备，说明能够usb连接正常。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/Arduino-ESP8266-bigstep/image-20190730145128956.png?raw=true" width="500" hegiht="313" align="center"></p><p>2、确定安装了开发板相关的驱动，这个驱动的作用主要就是将设备操作通过<code>Virtual COM Port</code>去通信。这里有几个坑。之前网上能搜到的驱动都不支持最新的macOS系统（10.14）。所以导致我的<code>/dev</code>目录下并没有出现对应的文件。之前的驱动大多是这个<a href="https://github.com/adrianmihalko/ch340g-ch34g-ch34x-mac-os-x-driver">CH340G CH34G CH34X Mac OS X driver</a> 照着里面的步骤，把SIP禁用以及其他都操作了一遍都不行。最后才发现这个驱动可能不支持最新的mac系统，这里我找到一个能够在最新系统正常的驱动下载地址在<a href="https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers" target="_blank" rel="external">这里</a>。安装完以后在<code>/dev</code>就应该有一个<code>tty.SLAB_USBtoUART</code>的文件。说明通信的端口已经建立，这时候再IDE中选择该端口。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/Arduino-ESP8266-bigstep/image-20190730145909934.png?raw=true" width="500" hegiht="313" align="center"></p><h4 id="资源链接"><a href="#资源链接" class="headerlink" title="资源链接"></a>资源链接</h4><p>这里我提供一些我在搭建过程中搜到的一些资源，可以参考一下</p><ul><li><p><a href="https://www.arduino.cc/en/guide/macOSX?setlang=cn" target="_blank" rel="external">https://www.arduino.cc/en/guide/macOSX?setlang=cn</a></p><p>在Mac OS X系统上入门Arduino/ Genuino</p></li><li><p><a href="https://juejin.im/post/5b569026e51d4513ee6dd509" target="_blank" rel="external">https://juejin.im/post/5b569026e51d4513ee6dd509</a></p><p>Esp8266+Arduino+Mac开发环境搭建</p></li><li><p><a href="https://www.open-homeautomation.com/2016/06/10/program-an-esp8266-from-arduino-on-macos/" target="_blank" rel="external">https://www.open-homeautomation.com/2016/06/10/program-an-esp8266-from-arduino-on-macos/</a></p><p>Program an ESP8266 from Arduino on MacOS</p></li><li><p><a href="https://github.com/adrianmihalko/ch340g-ch34g-ch34x-mac-os-x-driver">https://github.com/adrianmihalko/ch340g-ch34g-ch34x-mac-os-x-driver</a></p><p>CH340G CH34G CH34X Mac OS X driver</p></li><li><p><a href="http://www.nodemcu.com" target="_blank" rel="external">http://www.nodemcu.com</a></p><p>资料下载访问官网</p></li><li><p><a href="https://pan.baidu.com/s/1ZCjaSJLNpQWL7CPOpkH-dg" target="_blank" rel="external">https://pan.baidu.com/s/1ZCjaSJLNpQWL7CPOpkH-dg</a></p><p>NODEMCU资料</p></li><li><p><a href="http://www.wch.cn/download/CH341SER_MAC_ZIP.html" target="_blank" rel="external">http://www.wch.cn/download/CH341SER_MAC_ZIP.html</a></p><p>mac串口驱动下载地址</p></li><li><p><a href="https://freeware.the-meiers.org/" target="_blank" rel="external">https://freeware.the-meiers.org/</a></p><p>CoolTerm串口监控工具下载</p></li><li><p>SIP禁用步骤</p><pre><code>1. 重启mac，在出现苹果标志和进度条的时候按住 cmd+r2. 终端中输入csrutil disable/status/enabled3. 重启mac</code></pre></li></ul><h4 id="AVR逆向基础"><a href="#AVR逆向基础" class="headerlink" title="AVR逆向基础"></a>AVR逆向基础</h4><p>下面我们就来熟悉一下这个系统，包括代码环境，编译环境，常见库，开发相关。还是以一些demo代码作为学习。</p><p>由于我们主要是研究iOT逆向，所以可能不会关注在实际开发上面。这里先学习下Arduino上面的执行文件格式，以及指令架构等。</p><p>我们通常说的Arduino上面就运行的是一个AVR指令架构的处理器。</p><blockquote><p>AVR refers to the line of MCUs manufactured by Atmel and used in the original designs.</p></blockquote><p>由于ida对这个执行文件的支持不是很好，我们准备用<a href="https://github.com/radare/radare2">radare2</a>来分析这个bin文件。</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><p><a href="https://blog.csdn.net/iotisan/article/details/78766463" target="_blank" rel="external">https://blog.csdn.net/iotisan/article/details/78766463</a></p><p>和ESP8266 Arduino谈场恋爱 01 一条具有中国特色的开发环境安装道路</p></li><li><p><a href="https://www.reddit.com/r/arduino/comments/9jlz5g/any_nodemcu_esp8266_drivers_for_macos_mojave/" target="_blank" rel="external">https://www.reddit.com/r/arduino/comments/9jlz5g/any_nodemcu_esp8266_drivers_for_macos_mojave/</a></p><p>Any NodeMCU esp8266 Drivers for MacOS Mojave?</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Arduino-ESP8266开发板上手实践&quot;&gt;&lt;a href=&quot;#Arduino-ESP8266开发板上手实践&quot; class=&quot;headerlink&quot; title=&quot;Arduino ESP8266开发板上手实践&quot;&gt;&lt;/a&gt;Arduino ESP8266开发板上手
      
    
    </summary>
    
      <category term="IOT" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/IOT/"/>
    
    
      <category term="Arduino" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/Arduino/"/>
    
      <category term="IOT" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/IOT/"/>
    
  </entry>
  
  <entry>
    <title>Electron跨平台App实战分析</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/29/Electron-app-reversing/Electron-app-reversing/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/29/Electron-app-reversing/Electron-app-reversing/</id>
    <published>2019-07-29T03:59:49.000Z</published>
    <updated>2019-07-29T14:45:34.468Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Need password to decrypt!" />    <label for="pass">Need password to decrypt!</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      something you can not kown 
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="Electron" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/Electron/"/>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
  </entry>
  
  <entry>
    <title>Android完全禁用Accessibility（通杀一切基于此的外挂）</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/24/android-disableAccessibility/android-disableAccessibility/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/24/android-disableAccessibility/android-disableAccessibility/</id>
    <published>2019-07-24T12:02:54.000Z</published>
    <updated>2019-09-04T02:47:19.184Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Need password to decrypt!" />    <label for="pass">Need password to decrypt!</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      something you can not kown 
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
      <category term="Accessibility" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/Accessibility/"/>
    
  </entry>
  
  <entry>
    <title>微信集赞/评论插件分析及开发</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/22/fkwechatLike/fkwechatLike/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/22/fkwechatLike/fkwechatLike/</id>
    <published>2019-07-22T02:22:01.000Z</published>
    <updated>2019-07-28T13:58:12.611Z</updated>
    
    <content type="html"><![CDATA[<h3 id="微信集赞-评论插件分析及开发"><a href="#微信集赞-评论插件分析及开发" class="headerlink" title="微信集赞/评论插件分析及开发"></a>微信集赞/评论插件分析及开发</h3><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>为什么要做这个集赞的插件呢？起因是上周去参加了某个会议，有一个集赞60领玩偶的活动，但是想到平时一条朋友圈也就几个赞，而且又不想找人点赞，领不到，很气。回去以后想着能不能写一个集赞的插件，在需要的时候直接输入想要的赞、评论数量，我发的朋友圈就能有多少赞。这样再有这样的活动岂不美哉。准备开干！</p><h4 id="理性分析"><a href="#理性分析" class="headerlink" title="理性分析"></a>理性分析</h4><p>再开始之前，先理性分析一波：如果想要集赞，这里有两种思路，一个是直接在view层去更改，但是这样得去处理界面的一些细节，一旦不注意，很容易崩溃。还有种思路是更改datasource或者说赞评论的模型。可以想到，最初一条朋友圈肯定是从服务器拿到数据并封装成对应的模型。一般来说，越改底层的数据或者说源头的数据，那么稳定性和真实性就更高。这里我的想法就是既不改view层，也不改源头层，就改封装好的模型那一层应该就很符合要求。接下来主要讲一下怎么我去实现这个需求的分析过程，因为本身功能不是很复杂，大佬随便看看就行。</p><h4 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h4><ul><li>一台mac</li><li>一台越狱的iOS设备</li><li>ida/Hooper/theos</li><li>flex/issh/xia0LLDB</li><li>其他常见逆向工具等</li></ul><p>对于一贯喜欢上调试器分析得我，所以写了<a href="https://github.com/4ch12dy/issh">iSSH</a>和<a href="https://github.com/4ch12dy/xia0LLDB">xia0LLDB</a>两个工具，在这两个工具的辅助下整个插件用了2小时就完成了逆向分析和代码实现。</p><h4 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h4><h5 id="逆向赞和评论的数据模型"><a href="#逆向赞和评论的数据模型" class="headerlink" title="逆向赞和评论的数据模型"></a>逆向赞和评论的数据模型</h5><p>一切从界面入手，这里分析界面我一般喜欢用flex，在微信的朋友圈界面，用flex很容易发现当前界面的控制器为<code>WCTimeLineViewController</code>而且界面是一个<code>UITableView</code></p><p>将wechat执行文件拖入Hooper（<del>wechat文件太大，ida分析会很卡</del>）找到UITableView的代理方法：<br><code>-[WCTimeLineViewController tableView:cellForRowAtIndexPath:]</code></p><p>这里面肯定会根据模型去设置cell数据</p><pre><code class="objective-c">  r2 = [r28 section];  var_70 = r25;  r24 = [r25 calcDataItemIndex:r2];  r25 = [[MMServiceCenter defaultCenter] retain];  r2 = [WCFacade class];  var_78 = r28;  r0 = [r25 getService:r2];  r0 = [r0 retain];  r24 = [[r0 getTimelineDataItemOfIndex:r24] retain];  [r0 release];  [r25 release];  r19 = [[MMServiceCenter defaultCenter] retain];  r0 = [r19 getService:[WCFacade class]];  r0 = [r0 retain];  r25 = [[r0 getLayerIdForDataItem:r24] retain];  [r0 release];  [r19 release];  r19 = [[MMServiceCenter defaultCenter] retain];  r0 = [r19 getService:[WCFacade class]];  r0 = [r0 retain];  r20 = r0;  r0 = [r0 getShowTip:r24 layerId:r25];  r29 = r29;  r26 = [r0 retain];  [r20 release];  [r19 release];</code></pre><p>整理下来就是</p><p><code>[[MMServiceCenter defaultCenter] getService:[WCFacade class]]</code>会得到一个<code>WCFacade</code>对象，然后通过</p><p><code>[WCFacade getTimelineDataItemOfIndex:]</code>就能得到cell的数据</p><p>看到这里，上调试器！看下都是什么数据…</p><p>将设备用数据线连接上电脑（这里我推荐用数据线的方式，wifi延时太高，影响心情），手机上打开微信</p><p>直接输入<code>issh debug -a wechat</code>就能挂上微信</p><pre><code class="shell">xia0 ~ $ issh debug -a wechat[I]:iproxy process for 2222 port alive, pid=1382[I]:++++++++++++++++++ Nice to Work :) +++++++++++++++++++++[I]:iOSRE dir exist[I]:iproxy process for 1234 port alive, pid=1395[I]:Run ps -e | grep debugserver | grep -v grep; [[ 0 == 0 ]] &amp;&amp; (killall -9 debugserver 2&gt; /dev/null)[I]:/iOSRE/tools/debugserver file exist, Start debug...[I]:Run /iOSRE/tools/debugserver 127.0.0.1:1234 -a wechat</code></pre><p>打开另一个终端进行调试（我的lldb已经安装了xia0LLDB脚本）</p><pre><code>xia0 ~ $ lldb&quot;xutil&quot; command installed -&gt; xutil&quot;choose&quot; command installed -&gt; choose&quot;xbr&quot; command installed --&gt; xbr -[UIView initWithFrame:]&quot;sbt&quot; command installed -&gt; sbt// 连接到远端(lldb) pcc</code></pre><p>这里有两种方法：</p><p>一种是用<code>xbr &quot;-[WCTimeLineViewController tableView:cellForRowAtIndexPath:]&quot;</code>下断点去查看；</p><pre><code>// 对-[WCTimeLineViewController tableView:cellForRowAtIndexPath:]方法下断点(lldb) xbr &quot;-[WCTimeLineViewController tableView:cellForRowAtIndexPath:]&quot;(lldb) c</code></pre><p>第二种是由于lldb支持choose命令，可以直接拿到<code>WCFacade</code>对象。既然如此选choose</p><pre><code>(lldb) choose WCFacade&lt;__NSArrayM 0x2823d9860&gt;(&lt;WCFacade: 0x139e1c030&gt;)</code></pre><p>调用其<code>getTimelineDataItemOfIndex:</code>方法就能拿到第一条朋友圈的数据</p><pre><code>(lldb) po [0x139e1c030 getTimelineDataItemOfIndex:0]Class name: WCDataItem, addr: 0x13e2871d0tid: 13121667995275047007username: wxid_6913ohfkk7kq12createtime: 1564224719commentUsers: ()contentObj: &lt;WCContentItem: 0x2801f5500&gt;</code></pre><p>输入<code>ivars 0x13e2871d0</code>就能拿到对象的所有属性值</p><pre><code>(lldb) ivars 0x13e2871d0&lt;WCDataItem: 0x13e2871d0&gt;:in WCDataItem:    cid (int): 0    tid (NSString*): @&quot;13121667995275047007&quot;    type (int): 0    flag (int): 0    username (NSString*): @&quot;wxid_6913ohfkk7kq12&quot;    nickname (NSString*): @&quot;xia0&quot;    createtime (int): 1564224719    locationInfo (WCLocationInfo*): &lt;WCLocationInfo: 0x2801f7800&gt;    likeFlag (BOOL): NO    likeCount (int): 0    likeUsers (NSMutableArray*): &lt;__NSArrayM: 0x286152d90&gt;    commentCount (int): 0    commentUsers (NSMutableArray*): &lt;__NSArrayM: 0x2861539c0&gt;    contentObj (WCContentItem*): &lt;WCContentItem: 0x2801f5500&gt;    appInfo (WCAppInfo*): &lt;WCAppInfo: 0x287404080&gt;    contentDesc (NSString*): @&quot;test&quot;</code></pre><p>由于属性太多，这里我就只显示了一些比较关心的数据，可以看到这就是我发的一条内容为test的朋友圈。</p><p>里面我们还发现了<code>likeUsers</code>和<code>commentUsers</code>的字段，冷静思考就知道应该就是对应的赞和评论列表。我先给自己点个赞看下里面的数据。</p><pre><code>likeCount (int): 1likeUsers (NSMutableArray*): &lt;__NSArrayM: 0x283e37060&gt;</code></pre><p>发现赞的数量变为1了，在看下里面的内容</p><pre><code>(lldb) po 0x283e37060&lt;__NSArrayM 0x283e37060&gt;(Class name: WCUserCommentusername: wxid_6913ohfkk7kq12nickname: xia0content:source: 0type: 1createTime: 1564225007isLocalAdded: 0commentID: (null)comment64ID: (null)refCommentID: (null)refComment64ID: (null)refUserName:bDeleted: 0)</code></pre><p>正是我自己的微信号。同理可以得到评论</p><pre><code>commentCount (int): 1commentUsers (NSMutableArray*): &lt;__NSArrayM: 0x283e349c0&gt;(lldb) po 0x283e349c0&lt;__NSArrayM 0x283e349c0&gt;(Class name: WCUserCommentusername: wxid_6913ohfkk7kq12nickname: xia0content: 评论测试source: 0type: 2createTime: 1564225144isLocalAdded: 1commentID: (null)comment64ID: (null)refCommentID: (null)refComment64ID: (null)refUserName: (null)bDeleted: 0)</code></pre><p>到这里我们还可以发现赞和评论都是一个类（模型），只是里面的类型字段不同。现在我们其实已经拿到了我们想要的数据模型了。但是还有一个问题在于我们应该什么时候去更改这些数据呢？也就是我们说的hook点。</p><p>最好的hook可以想到是每次刷新数据的时候，这样我们的数据就是最新的。</p><h5 id="寻找HOOK点"><a href="#寻找HOOK点" class="headerlink" title="寻找HOOK点"></a>寻找HOOK点</h5><p>先想一下，刷新数据的时候，当拿到新的数据肯定会封装为一个<code>WCDataItem</code>对象，那么我们可以对<code>WCDataItem</code>里面的方法下断点，然后打印调用链不就反向得到了刷新的函数了吗？</p><p>但是逆向和调试过微信的人都知道，当你使用bt命令的时候只能得到一堆无符号的调用栈像下面这样</p><pre><code>(lldb) bt* thread #1, queue = &#39;com.apple.main-thread&#39;, stop reason = breakpoint 4.1  * frame #0: 0x000000010857d4d0 WeChat`_mcwxh_dydx33_8to8(_VDecStruct*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, unsigned int) + 30312888    frame #1: 0x0000000194fcc638 Foundation`_decodeObjectBinary + 2004    frame #2: 0x0000000194fcbb6c Foundation`_decodeObject + 340    frame #3: 0x0000000194ed24fc Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] + 228    frame #4: 0x0000000194f2a09c Foundation`+[NSKeyedUnarchiver unarchiveObjectWithData:] + 92    frame #5: 0x0000000105a88404 WeChat`int fmt::internal::CharTraits&lt;char&gt;::format_float&lt;long double&gt;(char*, unsigned long, char const*, unsigned int, int, long double) + 2432992    frame #6: 0x0000000108da9ea8 WeChat`_mcwxh_dydx33_8to8(_VDecStruct*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, unsigned int) + 38884240    frame #7: 0x0000000108daa890 WeChat`_mcwxh_dydx33_8to8(_VDecStruct*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, unsigned int) + 38886776    frame #8: 0x0000000108dad178 WeChat`_mcwxh_dydx33_8to8(_VDecStruct*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, unsigned int) + 38897248    frame #9: 0x0000000108717394 WeChat`_mcwxh_dydx33_8to8(_VDecStruct*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, unsigned int) + 31991932</code></pre><p>但是用我写的sbt命令就能恢复oc符号，下面我们对<code>-[WCDataItem setCid:]</code>下断点，然后得到调用栈</p><pre><code>(lldb) sbt==========================================xia0LLDB==========================================  BlockSymbolFile    Not Set The Block Symbol Json File, Try &#39;sbt -f&#39;============================================================================================  frame #0: [file:0x103c094d0 mem:0x10857d4d0] WeChat`-[WCDataItem setCid:] + 0  frame #1: [file:0x18193c638 mem:0x194fcc638] Foundation`_decodeObjectBinary + 2004  frame #2: [file:0x18193bb6c mem:0x194fcbb6c] Foundation`_decodeObject + 340  frame #3: [file:0x1818424fc mem:0x194ed24fc] Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] + 228  frame #4: [file:0x18189a09c mem:0x194f2a09c] Foundation`+[NSKeyedUnarchiver unarchiveObjectWithData:] + 92  frame #5: [file:0x101114404 mem:0x105a88404] WeChat`+[CUtility SafeUnarchiveFromData:] + 64  frame #6: [file:0x104435ea8 mem:0x108da9ea8] WeChat`-[WCAdvertiseDataHelper hasCommented:] + 116  frame #7: [file:0x104436890 mem:0x108daa890] WeChat`-[WCAdvertiseDataHelper IsAdvertiseDataValid:] + 48  frame #8: [file:0x104439178 mem:0x108dad178] WeChat`-[WCAdvertiseDataHelper getAdvertiseDataByCurMinTime:MaxTime:] + 552  frame #9: [file:0x103da3394 mem:0x108717394] WeChat`Maybe c function? Distance:3348 &gt;= 2500 # Symbol:-[WCTimelineMgr tryRemoveCachesOfLikeUserWithNewTimelineList:] + 3348  frame #10: [file:0x206a0 mem:0x1131f06a0] WeChat`-[WCTimelineMgr onDataUpdated:andData:andAdData:withChangedTime:] + 233  frame #11: [file:0x103db00c8 mem:0x1087240c8] WeChat`Maybe c function? Distance:9732 &gt;= 2500 # Symbol:-[WCTimelineDataProvider responseForSnsTimeLineResponse:Event:] + 9732  frame #12: [file:0x103db0398 mem:0x108724398] WeChat`-[WCTimelineDataProvider MessageReturn:Event:] + 112  frame #13: [file:0x1033923c0 mem:0x107d063c0] WeChat`-[CAppObserverCenter NotifyFromMainCtrl:Event:] + 336  frame #14: [file:0x104c292f8 mem:0x10959d2f8] WeChat`-[CMainControll TimerCheckEvent] + 728  frame #15: [file:0x1800a3604 mem:0x193733604] libobjc.A.dylib`-[NSObject performSelector:withObject:] + 68  frame #16: [file:0x101cb1fa8 mem:0x106625fa8] WeChat`-[MMNoRetainTimerTarget onNoRetainTimer:] + 84  frame #17: [file:0x1819750bc mem:0x1950050bc] Foundation`__NSFireTimer + 88  frame #18: [file:0x180e3d0a4 mem:0x1944cd0a4] CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 32  frame #19: [file:0x180e3cdd0 mem:0x1944ccdd0] CoreFoundation`__CFRunLoopDoTimer + 884  frame #20: [file:0x180e3c5c4 mem:0x1944cc5c4] CoreFoundation`__CFRunLoopDoTimers + 252  frame #21: [file:0x180e37284 mem:0x1944c7284] CoreFoundation`__CFRunLoopRun + 1832  frame #22: [file:0x180e36844 mem:0x1944c6844] CoreFoundation`CFRunLoopRunSpecific + 452  frame #23: [file:0x1830e5be8 mem:0x196775be8] GraphicsServices`GSEventRunModal + 104  frame #24: [file:0x1ae78431c mem:0x1c1e1431c] UIKitCore`UIApplicationMain + 216  frame #25: [file:0x100152b04 mem:0x104ac6b04] WeChat`main + 1387268  frame #26: [file:0x1808ec020 mem:0x193f7c020] libdyld.dylib`start + 4</code></pre><p>可以看到调用栈的符号已经恢复了，能够清晰的看出调用的过程</p><p>其中里面有个很明显的方法</p><p><code>-[WCTimelineMgr onDataUpdated:andData:andAdData:withChangedTime:]</code></p><p>看名字就知道，这个应该就是我们需要的hook点。</p><h5 id="整理思路"><a href="#整理思路" class="headerlink" title="整理思路"></a>整理思路</h5><p>整理一下目前的情况，首先拿到了赞和评论的模型，然后找到了hook点。下一步就是写代码去实现集赞的功能。</p><p>大概的代码逻辑应该如下</p><ul><li>在hook点的时候拿到原始的朋友圈数据，并过滤出自己的那条朋友圈</li><li>取出自己朋友圈的赞和评论数据备用</li><li>随机从通讯录好友里面选择数量去构造赞和评论对象，并放入原朋友圈赞和评论列表里面</li></ul><p>下面就是写代码实现就可以了。还有个情况是在你进入自己的朋友圈详情界面的时候，也就是看到点赞的人都是头像的界面。也需要做类似的操作才能实现集赞的功能。</p><p>这里分析的过程和上面类似，我选择的hook点为：<br><code>-[WCCommentDetailViewControllerFB setDataItem:]</code></p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><p>具体的代码实现这里就不再去分析了，我把代码开源到了这里<a href="https://github.com/4ch12dy/fkwechatzan">fkwechatzan</a></p><h4 id="完成效果"><a href="#完成效果" class="headerlink" title="完成效果"></a>完成效果</h4><ul><li><p>集赞助手设置界面</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/fkwechatLike/1361564255775_.pic.jpg?raw=true" width="400" hegiht="200" align="center"></p></li></ul><ul><li><p>朋友圈详情界面</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/fkwechatLike/1341564229215_.pic.jpg?raw=true" width="400" hegiht="200" align="center"></p></li><li><p>赞和评论</p></li></ul><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/fkwechatLike/1321564227655_.pic.jpg?raw=true" width="400" hegiht="200" align="center"></p><h4 id="一点总结"><a href="#一点总结" class="headerlink" title="一点总结"></a>一点总结</h4><p>本文详细介绍了使用issh和xia0LLDB去完成一个集赞功能的逆向分析过程，这个功能本身不是很复杂，这里仅仅我在逆向过程中的一些理解和分析。每个人的逆向分析过程可能都不尽相同，我提供一个完整的分析步骤，而不是完全的去靠猜测，虽然逆向有时候猜测就能有一些意外惊喜，不过不确定性也同样会花费大量时间。</p><p>最后，妈妈再也不用担心没有人赞我的朋友圈了~</p><p>下次集赞领礼品的活动我要定了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;微信集赞-评论插件分析及开发&quot;&gt;&lt;a href=&quot;#微信集赞-评论插件分析及开发&quot; class=&quot;headerlink&quot; title=&quot;微信集赞/评论插件分析及开发&quot;&gt;&lt;/a&gt;微信集赞/评论插件分析及开发&lt;/h3&gt;&lt;h4 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot;
      
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
  </entry>
  
  <entry>
    <title>Frida调用栈符号恢复</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/02/xia0CallStackSymbols/xia0CallStackSymbols/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/07/02/xia0CallStackSymbols/xia0CallStackSymbols/</id>
    <published>2019-07-02T09:00:14.000Z</published>
    <updated>2019-09-03T05:23:28.497Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Frida调用栈符号恢复"><a href="#Frida调用栈符号恢复" class="headerlink" title="Frida调用栈符号恢复"></a>Frida调用栈符号恢复</h3><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>搞了一阵子的Android方向的逆向研究，发现用frida去做一些hook等测试十分方便。最近自己想在iOS平台实现短视频下载去水印的问题，所以也想用frida来试试。但是测试过程中当我想去看下hook点的调用栈的时候，发现只有一些栈地址，基本没有符号信息，估计符号表被strip了。这里通常的做法就是用这些地址减去偏移然后去ida里面找到对应的方法。这样无疑是大大增加了分析的时间，想到之前解决<a href="[http://4ch12dy.site/2018/10/03/LLDB%E8%B0%83%E8%AF%95%E5%99%A8%E6%A0%88%E7%AC%A6%E5%8F%B7%E5%8C%96/%E5%BC%BA%E5%8C%96%E4%BD%A0%E7%9A%84lldb%E8%B0%83%E8%AF%95%E5%99%A8/](http://4ch12dy.site/2018/10/03/LLDB调试器栈符号化/强化你的lldb调试器/">lldb调试器栈符号恢复</a>)方案，决定把lldb的栈符号恢复脚本移植到frida中。</p><h4 id="如何恢复已经去掉符号表的可执行文件？"><a href="#如何恢复已经去掉符号表的可执行文件？" class="headerlink" title="如何恢复已经去掉符号表的可执行文件？"></a>如何恢复已经去掉符号表的可执行文件？</h4><p>这里的符号恢复仅仅针对的是OC函数，C函数如果符号表被strip以后是没有办法恢复其符号信息的。为什么OC函数可以去做符号恢复呢？这里要涉及到macho文件的格式以及ObjectC这个语言自身设计相关。可以看到在macho文件中的_DATA数据段中有很多objc的节信息，里面保存了所有的类以及方法等元数据信息。既然如此，我们肯定能找到方法去恢复这些OC函数的符号。</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/xia0CallStackSymbols/image-20190702172303432.png?raw=true" alt="image-20190702172303432"></p><h4 id="OC函数符号恢复思路"><a href="#OC函数符号恢复思路" class="headerlink" title="OC函数符号恢复思路"></a>OC函数符号恢复思路</h4><p>首先我们只能得到一堆调用链的地址，这些地址肯定是函数里面的某个偏移地址。很容易想到这个地址往前推肯定就是这个函数的首地址及函数地址。如果我们拿到了所有函数的地址，然后每一个地址和目标地址比较，与目标地址距离最近的那个地址所对应的函数不就是我们想要的符号吗。</p><p>根据上面提到的思路，目前需要解决几个问题，怎么拿到所有OC方法的地址? 以及对应的类名和方法名?如何设计匹配算法等？</p><p>这里有两种办法：</p><ul><li>第一种是自己去解析在内存中加载的macho文件，根据macho的文件格式先找到class信息，然后找到对应的method信息，method里面就保存了IMP和方法名。之前我尝试这样去过，所有的信息都能拿到，但是由于在macho在加载到内存的时候objc动态库会做很多的初始化等工作，导致要处理一些细节问题，所以就没继续做了。</li><li>第二种是利用已有的objc提供的接口objc_去拿到所有的class以及对应method的方法名和IMP。这里主要用的的API有<code>objc_copyClassNamesForImage</code>、<code>class_copyMethodList</code> 、<code>objc_getClass</code>、<code>method_getImplementation</code>、<code>method_getName</code>、<code>objc_getClass</code>、<code>objc_getMetaClass</code></li></ul><p>现在已经能拿到所有的类方法、方法名、方法实现地址了，接下来要解决的就是怎么通过调用栈的地址去找到对应的方法，这里的思路就是遍历所有的方法地址与调用栈的地址比较并计算距离，如果方法地址小于目标地址且距离最小，那么该方法就是我们要找到的符号。最后将调用栈上面的所有地址都进行该操作即可。</p><h4 id="frida的js环境编写代码"><a href="#frida的js环境编写代码" class="headerlink" title="frida的js环境编写代码"></a>frida的js环境编写代码</h4><p>由于我之前在lldb的python脚本中写过该过程代码(<del>lldb内置的OC解释器语法要求十分严格，调试了很久的代码</del>)</p><p>按照上面的思路理论上代码很好写，也不是很复杂。如果是直接写OC代码应该很好写，但是在frida中写这些还是挺折腾的。</p><p>主要的代码如下：</p><p>根据模块路径获取其所有的类</p><pre><code class="js">function getAllClass(modulePath){    // const char * objc_copyClassNamesForImage(const char *image, unsigned int *outCount)    var objc_copyClassNamesForImage = new NativeFunction(        Module.findExportByName(null, &#39;objc_copyClassNamesForImage&#39;),        &#39;pointer&#39;,        [&#39;pointer&#39;, &#39;pointer&#39;]    );    // free    var free = new NativeFunction(Module.findExportByName(null, &#39;free&#39;), &#39;void&#39;, [&#39;pointer&#39;]);    // if given modulePath nil, default is mainBundle    if(!modulePath){        var path = ObjC.classes.NSBundle.mainBundle().executablePath().UTF8String();    }else{        var path = modulePath;    }    // create args    var pPath = Memory.allocUtf8String(path);    var p = Memory.alloc(Process.pointerSize);    Memory.writeUInt(p, 0);    var pClasses = objc_copyClassNamesForImage(pPath, p);    var count = Memory.readUInt(p);    var classes = new Array(count);    for (var i = 0; i &lt; count; i++) {        var pClassName = Memory.readPointer(pClasses.add(i * Process.pointerSize));        classes[i] = Memory.readUtf8String(pClassName);    }    free(pClasses);    // XLOG(classes)    return classes;}</code></pre><p>根据类名获取所有的方法信息，由于有实例方法和类方法，这里需要分别获取。</p><pre><code class="js">function getAllMethods(classname){    var objc_getClass = new NativeFunction(        Module.findExportByName(null, &#39;objc_getClass&#39;),        &#39;pointer&#39;,        [&#39;pointer&#39;]    );    var class_copyMethodList = new NativeFunction(        Module.findExportByName(null, &#39;class_copyMethodList&#39;),        &#39;pointer&#39;,        [&#39;pointer&#39;, &#39;pointer&#39;]    );    var objc_getMetaClass = new NativeFunction(        Module.findExportByName(null, &#39;objc_getMetaClass&#39;),        &#39;pointer&#39;,        [&#39;pointer&#39;]    );    var method_getName = new NativeFunction(        Module.findExportByName(null, &#39;method_getName&#39;),        &#39;pointer&#39;,        [&#39;pointer&#39;]    );    var free = new NativeFunction(Module.findExportByName(null, &#39;free&#39;), &#39;void&#39;, [&#39;pointer&#39;]);    // get objclass and metaclass    var name = Memory.allocUtf8String(classname);    var objClass = objc_getClass(name)    var metaClass = objc_getMetaClass(name)    // get obj class all methods    var size_ptr = Memory.alloc(Process.pointerSize);    Memory.writeUInt(size_ptr, 0);    var pObjMethods = class_copyMethodList(objClass, size_ptr);    var count = Memory.readUInt(size_ptr);    var allMethods = new Array();    var allObjMethods = new Array();    // get obj class all methods name and IMP    for (var i = 0; i &lt; count; i++) {        var curObjMethod = new Array();        var pObjMethodSEL = method_getName(pObjMethods.add(i * Process.pointerSize))        var pObjMethodName = Memory.readCString(Memory.readPointer(pObjMethodSEL))        var objMethodIMP = Memory.readPointer(pObjMethodSEL.add(2*Process.pointerSize))        // XLOG(&quot;-[&quot;+classname+ &quot; &quot; + pObjMethodName+&quot;]&quot; + &quot;:&quot; + objMethodIMP)        curObjMethod.push(pObjMethodName)        curObjMethod.push(objMethodIMP)        allObjMethods.push(curObjMethod)    }    var allMetaMethods = new Array();    // get meta class all methods name and IMP    var pMetaMethods = class_copyMethodList(metaClass, size_ptr);    var count = Memory.readUInt(size_ptr);    for (var i = 0; i &lt; count; i++) {        var curMetaMethod = new Array();        var pMetaMethodSEL = method_getName(pMetaMethods.add(i * Process.pointerSize))        var pMetaMethodName = Memory.readCString(Memory.readPointer(pMetaMethodSEL))        var metaMethodIMP = Memory.readPointer(pMetaMethodSEL.add(2*Process.pointerSize))        //XLOG(&quot;+[&quot;+classname+ &quot; &quot; + pMetaMethodName+&quot;]&quot; + &quot;:&quot; + metaMethodIMP)        curMetaMethod.push(pMetaMethodName)        curMetaMethod.push(metaMethodIMP)        allMetaMethods.push(curMetaMethod)    }    allMethods.push(allObjMethods)    allMethods.push(allMetaMethods)    free(pObjMethods);    free(pMetaMethods);    return allMethods;}</code></pre><p>通过调用栈地址根据最近匹配的算法去找到对应的符号信息</p><pre><code class="js">function findSymbolFromAddress(modulePath,addr){    var frameAddr = addr    var theDis = 0xffffffffffffffff;    var tmpDis = 0;    var theClass = &quot;None&quot;    var theMethodName = &quot;None&quot;    var theMethodType = &quot;-&quot;    var theMethodIMP = 0    var allClassInfo = {}    var allClass = getAllClass(modulePath);    for(var i = 0, len = allClass.length; i &lt; len; i++){        var mInfo = getAllMethods(allClass[i]);        var curClassName = allClass[i]        objms = mInfo[0];        for(var j = 0, olen = objms.length; j &lt; olen; j++){            mname = objms[j][0]            mIMP = objms[j][1]            if(frameAddr &gt;= mIMP){                tmpDis = frameAddr-mIMP                if(tmpDis &lt; theDis){                    theDis = tmpDis                    theClass = curClassName                    theMethodName = mname                    theMethodIMP = mIMP                    theMethodType = &quot;-&quot;                }            }        }        metams = mInfo[1];        for(var k = 0, mlen = metams.length; k &lt; mlen; k++){            mname = metams[k][0]            mIMP = metams[k][1]            if(frameAddr &gt;= mIMP){                tmpDis = frameAddr-mIMP                if(tmpDis &lt; theDis){                    theDis = tmpDis                    theClass = curClassName                    theMethodName = mname                    theMethodIMP = mIMP                    theMethodType = &quot;+&quot;                }            }        }    }    symbol = theMethodType+&quot;[&quot;+theClass+&quot; &quot;+theMethodName+&quot;]&quot;    if(symbol.indexOf(&quot;.cxx&quot;)!=-1){        symbol = &quot;maybe C function?&quot;    }    // if distance &gt; 3000, maybe a c function    if(theDis &gt; 3000){        symbol = &quot;maybe C function? symbol:&quot; + symbol    }    return symbol;}</code></pre><p>在匹配算法的最后还进行了一些判断，当解析出来的方法名包含<code>.cxx</code>方法的时候说明没找到符号，可能是一个C函数。当解析出来的方法地址距离目标地址距离大于3000的时候会提示可能会C函数。</p><p>最后完整的项目地址：<a href="https://github.com/4ch12dy/xia0FridaScript">https://github.com/4ch12dy/xia0FridaScript</a></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>我这里写了一个简单的frida脚本去测试如何导入符号恢复的js脚本</p><pre><code class="python">#!/usr/bin/pythonimport fridaimport sys import codecsimport osPACKAGE_NAME = &quot;cn.xiaobu.pipiPlay&quot;def on_message(message, data):    try:        if message:            print(&quot;[JSBACH] {0}&quot;.format(message[&quot;payload&quot;]))    except Exception as e:        print(message)        print(e)def xia0CallStackSymbolsTest():    script_dir = os.path.dirname(os.path.realpath(__file__))    xia0CallStackSymbolsJS = os.path.join(script_dir, &#39;xia0CallStackSymbols.js&#39;)    source = &#39;&#39;    with codecs.open(xia0CallStackSymbolsJS, &#39;r&#39;, &#39;utf-8&#39;) as f:        source = source + f.read()    js = &#39;&#39;&#39;    if (ObjC.available)    {            try            {                    //Your class name here  - ZYOperationView operationCopyLink                    var className = &quot;ZYMediaDownloadHelper&quot;;                    //Your function name here                    var funcName = &quot;+ downloadMediaUrl:isVideo:progress:finishBlock:&quot;;                    var hook = eval(&#39;ObjC.classes.&#39; + className + &#39;[&quot;&#39; + funcName + &#39;&quot;]&#39;);                    Interceptor.attach(hook.implementation, {                        onEnter: function(args) {                            // args[0] is self                            // args[1] is selector (SEL &quot;sendMessageWithText:&quot;)                            // args[2] holds the first function argument, an NSString                            console.log(&quot;[*] Detected call to: &quot; + className + &quot; -&gt; &quot; + funcName);                            // just call [NSThread callStackSymbols]                            var threadClass = ObjC.classes.NSThread                            var symbols = threadClass[&quot;+ callStackSymbols&quot;]()                            console.log(symbols)                            // call  xia0CallStackSymbols [true:just symbolish mainModule address false:symbolish all module address]                            xia0CallStackSymbols(true);                            xia0CallStackSymbols(false);                        }                    });            }            catch(err)            {                    console.log(&quot;[!] Exception2: &quot; + err.message);            }    }    else    {            console.log(&quot;Objective-C Runtime is not available!&quot;);    }    &#39;&#39;&#39;    return source+jsdef do_hook():    return xia0CallStackSymbolsTest()if __name__ == &#39;__main__&#39;:    try:        device = frida.get_device_manager().enumerate_devices()[-1]        print device        pid = device.spawn([PACKAGE_NAME])        print(&quot;[JSBACH] {} is starting. (pid : {})&quot;.format(PACKAGE_NAME, pid))        session = device.attach(pid)        device.resume(pid)        script = session.create_script(do_hook())        script.on(&#39;message&#39;, on_message)        script.load()        sys.stdin.read()    except KeyboardInterrupt:        sys.exit(0)</code></pre><p>只需要将<code>xia0CallStackSymbols.js</code>脚本放到项目中，然后用以下代码即可导入使用</p><pre><code class="python">script_dir = os.path.dirname(os.path.realpath(__file__))xia0CallStackSymbolsJS = os.path.join(script_dir, &#39;xia0CallStackSymbols.js&#39;)source = &#39;&#39;with codecs.open(xia0CallStackSymbolsJS, &#39;r&#39;, &#39;utf-8&#39;) as f:    source = source + f.read()your_frida_js_hook_script = &quot;&quot;load_js = your_frida_js_hook_script+source</code></pre><p>恢复的效果如下：</p><ul><li><p>通过<code>[NSThread callStackSymbols]</code>获取的调用栈符号</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/xia0CallStackSymbols/image-20190702181519237.png?raw=true" alt="image-20190702181519237"></p></li><li><p>通过调用<code>xia0CallStackSymbols</code>函数获取的调用栈符号</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/xia0CallStackSymbols/image-20190702181145710.png?raw=true" alt="image-20190702181145710"></p></li><li><p>作为比较，我在放上lldb中恢复调用栈</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/xia0CallStackSymbols/image-20190702181638614.png?raw=true" alt="image-20190702181638614"></p></li></ul><p>这里可以看出lldb调试器恢复的符号信息最完整且准确，lldb的栈符号恢复项目在<a href="https://github.com/4ch12dy/xia0LLDB">这里</a>，现在还能支持block函数的符号恢复。</p><p>这里有几个问题需要说明一下：</p><ul><li><p>xia0CallStackSymbols的符号为什么前15个地址没有显示？</p><p>因为前15个地址都是frida中js解释器里面的函数执行地址，没有办法拿到模块信息，也没必要解析这些地址。</p></li><li><p>xia0CallStackSymbols中还提供了内存对应的文件地址，如果你觉得符号有问题，可以直接去ida中手动查找符号</p></li><li><p>如果用dladdr能够拿到地址的符号信息，就没有调用xia0CallStackSymbols去恢复(比如符号表没有strip的情况)</p></li><li><p>xia0CallStackSymbols()接口可以传递一个bool参数，true为仅仅解析主模块的地址，false为所有模块都需要解析。实际在逆向过程中一般只需要主模块的符号信息，其他系统函数没很大必要。</p></li></ul><h4 id="遗留问题-Todo"><a href="#遗留问题-Todo" class="headerlink" title="遗留问题/Todo"></a>遗留问题/Todo</h4><ul><li>在执行恢复符号的过程中时间相对较长，主要原因在于每一个地址都要和所有方法比较，这里建议xia0CallStackSymbols传入true，这样只解析主模块的地址。耗时的原因还在于每一个地址解析的时候都会去调用接口获取所有方法信息，实际上每个模块只需要一次就能拿到所有方法信息，接下来要做的就是优化相关代码，缓存模块的所有方法信息，下次解析的地址为该模块时直接去缓存里面匹配查找。</li><li>在匹配符号的过程中，判断是否为C函数需要更多的原则，3000的阈值需要后面再调下。</li><li>关于block的符号恢复，目前只有在lldb中实现了，下一步准备在xia0CallStackSymbols中也支持恢复block函数符号</li></ul><h4 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h4><p>短视频下载去水印如果有人感兴趣的话，可以点<a href="https://github.com/4ch12dy/fkwatermark">这里</a>，目前支持的有皮皮搞笑、抖音、皮皮虾、Tiktok</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://github.com/poxyran/misc">https://github.com/poxyran/misc</a></li><li>&lt; <a href="https://github.com/iddoeldor/frida-snippets">https://github.com/iddoeldor/frida-snippets</a> &gt;</li><li><a href="http://www.blogfshare.com/ioss-validate-address.html" target="_blank" rel="external">http://www.blogfshare.com/ioss-validate-address.html</a></li><li><a href="https://jmpews.github.io/2017/08/09/darwin/反注入及绕过/" target="_blank" rel="external">https://jmpews.github.io/2017/08/09/darwin/%E5%8F%8D%E6%B3%A8%E5%85%A5%E5%8F%8A%E7%BB%95%E8%BF%87/</a></li><li><a href="https://github.com/interference-security/frida-scripts">https://github.com/interference-security/frida-scripts</a></li><li><a href="https://github.com/dweinstein/awesome-frida">https://github.com/dweinstein/awesome-frida</a></li><li><a href="https://www.frida.re/docs/javascript-api/" target="_blank" rel="external">https://www.frida.re/docs/javascript-api/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Frida调用栈符号恢复&quot;&gt;&lt;a href=&quot;#Frida调用栈符号恢复&quot; class=&quot;headerlink&quot; title=&quot;Frida调用栈符号恢复&quot;&gt;&lt;/a&gt;Frida调用栈符号恢复&lt;/h3&gt;&lt;h4 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot; class=&quot;
      
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
      <category term="frida" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/frida/"/>
    
  </entry>
  
  <entry>
    <title>android调试深度总结</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/06/04/andoid-debug-note/andoid-debug-note/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/06/04/andoid-debug-note/andoid-debug-note/</id>
    <published>2019-06-04T14:54:21.000Z</published>
    <updated>2019-08-01T07:52:05.503Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Need password to decrypt!" />    <label for="pass">Need password to decrypt!</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+vO87Ls3QeRPdaUE4d4VwJVRsWF2SG2E1O52GjLXqudqzKHmRHj1KrHhyBsEhxvzQjuUEirvD4LRyWmQRs/vg3zxbgXq4TF05SWl2ojsP8rTgNHmmdeunCZdxK8DxtZIxLBYNXv1Y6b7QEQpvO3EZ0vF6lKn/Yn30QBrXL4py0SSLX6jA4nfQmSR+toJkAVGr+MVNFnakJSExKapSUGrQDSX7KALkkaTknyC2BLIf70DDbh7f/GmveR604SvYIwm1Rh/x+sqJN9kPvJsuKtoBmT9WYkzTWGL9Sall2D+i8/uMVhlyr0l/tSM2+uL7AGKAZK80z0KSPIODgpt5HNRVYj2jTdE7fbjUx2sA4r17sNoW/6pb/GsqYfDhdXpXmoi5BEWnnxAanHgbY0zKVm5UmMGQZ/SW8cPg4L4hasi5jl2OPFSOmdowEHc6VJRsyeVOoBXB+JKb886M73aoxoDjuBWCXu/8N8TecpH7yBwDefVckhcpcqmCQMOECrc//r1GkzL481tpj+F2W8dJPkZYjxdvHSEhQegllwv43rgq048c4TFxaSy28NLhATA9G/UIM3ZxEC9iywSWlUNcwuxkcoteTBXBB4XV6TzVdAS3UOPlMgYOyhmg0VIai/dpz4r21xXmkbxPIoX1yMPPypbvjjdxxZ7dEOU545rJMyonlmHY18VM902NBPhxnnglc0z6tM35F9wEdbIPmt4uAzelzyVovjdZjxov27Ul9kJGyTT0hAXVo/y/fwSWcfdQB+9EQOqayr3I27gwLYBS6YeAmHd4UOzUKrru8BsWpa7uszCcrr+5Y5x7qX5zCOYhBG75NLWmQGkMEBEcsGPAtNxz3Gwvu9w3kDJKPRhz3oQUqMAyBnGGUoj+KwZ++66ZR/c5U9AvJaaPNa9e8DzzhQq484gButsjkqnzngHMOOh143Huq+xUpBYFPJbY5LANJWzZ1+zpplFPjR32oUB0XPRTncnEgvnA1mYN9YgCp/Zalta56lGhOYskZRpYC6ZpYQvEQuAxwrgKpkJOohvPzmBuL4cl2jOg1YxjDnCSwiRPBNpqXhvvTnFoOzLUdMvzC6tmjV0LKF2fI1kGWMNfEq/6/P0KkSC4bwfAVFucrfu/t7sYlvk0/Hz3MTNGCVVoudIh9yQtUkwTzf2wac/TyTl7O0VfNoBH81bXsCslEmrEfB830KfatL5/wWb4JtC+iasHUM/Mp3hS3jnOaTYtDW2N/w23XurrvwaHqvqZRkJrrJ9h7qUW9K3Ube8GXukbadVXzalNfRvbmT4FCgFFi1LAo2OlvZyW3xeJhSF5mdBK1T+yF4NjSnlfO5cvC+PeZJTl2VWIqvo10Fd0l8jWZDx2MSux5Hp1TSn/el9rU1BIZw0WuFt+eH98Vo011AkgHCS+I4dc8oQ7IMcwQDheS+mLxIp32B7vlN+WGsNSkLvhR6umNtEcP19kfterxuRblWqUVcsiQqWnCBxpXTwwK2WZr725quqIY/oZMy1fLrIPzpLlaHmlAJtW5tbtPX0a8Usdi3jxnGnFIfrv84FKgbc4YnoIUaCUmABu5gBvWMGnstxHIaAXrwNWq4KHLpLD9CQwPgtXYDh6DjqSiDB6DObLXhrFyEEqcr2SRxIA5th+WEPIzedoJVEVymSJL6CvfzKWXZ1p0OrS7cc/XUKep5MwI2PBfVp+TN9wsfI+/Bxh9hkOa4A8WcPQvO/FoktdriEGHgBZ5Vrr5wQhGRFqeESRIAnna8GXQWkw+PjHojp437eSuRcH7OqUpuJqM0DghXXhcrG+5KIm+4EUOjBTAUZTFQJ5viaNE2+WzpXKfgOSBZTkQvGJsntPVze4yRl5cQ76gY5caJdTJjSWQ9rjNa8q104eH4yHS/Z489rcy4v08gOlvAUuUBJyGmbISf3z6zm2xvmlL+IxzFozBYgKjfTVLxXOq8co4CimVoGrdt0F4uVXKBYf182Ty6pexl+NG8PN27Zi2Ti9OlK8Z02YRiVtwY5m/s12R70smi9LOAKsUBD1tKBB6uyBxN7yUEQCq3m5TgC9j5eIohtPh+lLmGhTOHczvYJlSH3Dnr2cq+nqgxUXEsVJcAPstTuwr8WVhx565DXJyc0NreLxR20sChkeJqjco1FaPZ7HoeFac9iyutZHsm+apyFdNuqQwdtRbHgYDjM/s6W8Eh/vJZ0+0h07dYzVo+wdjRk09a4q0RE2hSdXa5LYM42DClO5Fv9wTJbKUCMksU2eiE3LDix0PwC1OXF2OnrxMT6/Ix4LZiJ5mYO8PTA2CmY2So0NTqAC9/8wLLvUX+tQiPgSVf/hJg9TDFa+GQ3hSuND2ryN9jAFBqinsF874x3CnRa/AVsJcGdl7BqsjVwYfCuX/G8GiduiOz88f8pxGsIXy2hpkMrJ0B7tuCQGdx7F4EW3OxlxpnZ8tIxL6um6FcpjTP6J7v37KsB+LRtraQENzwKbymsoHxXt1sZn1tlwA</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      something you can not kown 
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="Android" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/Android/"/>
    
      <category term="debug" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>Android AutoJS 脚本加密分析</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/25/autojs%E5%8A%A0%E5%AF%86%E5%88%86%E6%9E%90/autojs%E5%8A%A0%E5%AF%86%E5%88%86%E6%9E%90/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/25/autojs加密分析/autojs加密分析/</id>
    <published>2019-04-25T07:12:09.000Z</published>
    <updated>2019-07-30T07:55:01.711Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="show me the code" />    <label for="pass">show me the code</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      something you can not kown 
    
    </summary>
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/RE/"/>
    
    
      <category term="RE" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/RE/"/>
    
      <category term="AutoJS" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/AutoJS/"/>
    
  </entry>
  
  <entry>
    <title>符号执行解决代码混淆实践</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/15/antiOLLVM/antiOLLVM/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/15/antiOLLVM/antiOLLVM/</id>
    <published>2019-04-15T06:42:12.000Z</published>
    <updated>2019-05-17T08:47:41.244Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Need password to decrypt!" />    <label for="pass">Need password to decrypt!</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      something you can not kown 
    
    </summary>
    
      <category term="re" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/re/"/>
    
    
      <category term="angr" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/angr/"/>
    
      <category term="ollvm" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/ollvm/"/>
    
  </entry>
  
  <entry>
    <title>再谈arm指令编码</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/15/arm-instruction-encode/arm-instruction-encode/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/15/arm-instruction-encode/arm-instruction-encode/</id>
    <published>2019-04-15T06:42:12.000Z</published>
    <updated>2019-09-23T09:37:57.806Z</updated>
    
    <content type="html"><![CDATA[<h3 id="再谈arm指令编码"><a href="#再谈arm指令编码" class="headerlink" title="再谈arm指令编码"></a>再谈arm指令编码</h3><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>最近在做一个项目中需要patch arm指令，由于之前只是对arm指令编码了解一个大概，但patch指令需要对其指令编码十分熟悉才可以，所以重新学习了一遍arm指令。记录下学习结果。</p><h4 id="arm指令编码"><a href="#arm指令编码" class="headerlink" title="arm指令编码"></a>arm指令编码</h4><p>与x86指令的编码不同，arm指令是一个定长的指令编码格式，这种方式有很多好处，方便流水线的方式指令解码。这里arm指令采用的是32位等长编码格式。按类型的位域分布，如下所示：</p><table><thead><tr><th style="text-align:center">31 30 29 28</th><th style="text-align:center">27 26 25</th><th style="text-align:center">24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5</th><th>4</th><th>3 2 1</th></tr></thead><tbody><tr><td style="text-align:center">cond</td><td style="text-align:center">op1</td><td style="text-align:center"></td><td>op</td></tr></tbody></table><p>arm指令按照功能可以分为以下几类：</p><ul><li>数据处理与杂项指令</li><li>加载存储指令</li><li>媒介指令</li><li>分支、块数据传输指令</li><li>软中断与协处理指令</li><li>无条件指令指令</li></ul><p>每一类指令有有着自己的位域分布，具体的常见指令格式如下：</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/arm-instruction-encode/image-20190428140548217.png?raw=true?raw=true?raw=true?raw=true" alt="image-20190428140548217"></p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/arm-instruction-encode/image-20190428140740378.png?raw=true?raw=true?raw=true?raw=true" alt="image-20190428140740378"></p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/arm-instruction-encode/image-20190428140801936.png?raw=true?raw=true?raw=true?raw=true" alt="image-20190428140801936"></p><h4 id="thumb指令编码"><a href="#thumb指令编码" class="headerlink" title="thumb指令编码"></a>thumb指令编码</h4><p>和arm指令类似，thumb指令集作为arm指令集的一个子集，它具有16位的指令宽度，与arm指令的32位宽度想必，thumb指令集保留了32位宽度的优势下节省了系统的储存空间。</p><table><thead><tr><th>15 14 13 12 11 10</th><th>9 8 7 6 5 4 3 2 1</th></tr></thead><tbody><tr><td>opcode</td></tr></tbody></table><p>thumb常见的指令编码</p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/arm-instruction-encode/image-20190428142331693.png?raw=true?raw=true?raw=true?raw=true" alt="image-20190428142331693"></p><p><img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/arm-instruction-encode/image-20190428142349612.png?raw=true?raw=true?raw=true?raw=true" alt="image-20190428142349612"></p><p>有了上面的指令表，就可以对一个具体的指令进行分析了。</p><p>下面以实际的指令例子分析：</p><p><strong>mov</strong></p><p>根据上面可得其位域分布如下</p><table><thead><tr><th>15 14 13 12</th><th>11</th><th>10 9 8</th><th>7 6 5 4 3 2 1</th></tr></thead><tbody><tr><td>0 0 1 0</td><td>op</td><td>Ld/Ln</td><td>Immed8</td></tr></tbody></table><p>分析如下汇编代码</p><pre><code class="assembly">MOVS R3, #0</code></pre><p>  上面的的thumb指令对应16 进制为<code>0x2300</code>，对应的位域分布如下</p><table><thead><tr><th>15 14 13 12</th><th>11</th><th>10 9 8</th><th>7 6 5 4 3 2 1</th></tr></thead><tbody><tr><td>0 0 1 0</td><td>0</td><td>0 1 1</td><td>0 0 0 0 0 0 0</td></tr></tbody></table><p>  <code>011</code>对应R3寄存器，立即数为<code>0</code>，与我们分析得一致</p><p><strong>b</strong></p><p>分支指令对应的位域分布如下</p><table><thead><tr><th>15 14 13 12</th><th>11</th><th>10 9 8 7 6 5 4 3 2 1</th></tr></thead><tbody><tr><td>1 1 1 0</td><td>0</td><td>singed 11bit offset</td></tr></tbody></table><p>  这里的偏移计算公式如下：</p><pre><code>  B ins_address+4+offset*2</code></pre><p>  假设有如下指令：<code>0xE7FF</code>，其当前地址为<code>0xBE86</code>，所以offset为0x7ff，由于7ff对应的有符号数为-1</p><p>  所以跳转到地址为：<code>0xBE86+(-1)*2=0xBE88</code>，也可以解释为跳转到下一条指令。</p><p><strong>it</strong></p><p>由于thumb指令只有16位长，所以需要一条条件执行指令即IT，这条指令并没有出现在上面之中，下面解释一下该指令，这条指令最多可以条件执行4条指令，第一条指令默认是If。</p><p>现在有<code>IT NE</code>指令对应的16进制为<code>0x8F18</code></p><table><thead><tr><th>15 14 13 12</th><th>11 10 9 8</th><th>7 6 5 4</th><th>3</th><th>2 1 0</th></tr></thead><tbody><tr><td>1 0 1 1</td><td>1 1 1 1</td><td>cond</td><td>1</td><td>If/else</td></tr></tbody></table><p>  根据上面格式可知，4-7位为条件值，0-3位位需要条件指令的指令情况。</p><p>  条件值对应表如下</p><p>  <img src="https://github.com/4ch12dy/4ch12dy.github.io/blob/master/articlePic/arm-instruction-encode/image-20190428153426483.png?raw=true?raw=true?raw=true?raw=true" alt="image-20190428153426483"></p><p>  <code>0x8F18</code>对应的二进制如下</p><table><thead><tr><th>15 14 13 12</th><th>11 10 9 8</th><th>7 6 5 4</th><th>3</th><th>2 1 0</th></tr></thead><tbody><tr><td>1 0 1 1</td><td>1 1 1 1</td><td>0 0 0 1</td><td>1</td><td>0 0 0</td></tr></tbody></table><p>  所以条件为<code>0001=NE</code>，<code>条件执行=000</code>，即只有下一条指令需要条件执行，所以该指令为<code>IT NE</code></p><h4 id="arm-arm64-online-assemble-disassemble"><a href="#arm-arm64-online-assemble-disassemble" class="headerlink" title="arm/arm64 online assemble/disassemble"></a>arm/arm64 online assemble/disassemble</h4><ul><li><p><a href="https://azm.azerialabs.com/" target="_blank" rel="external">https://azm.azerialabs.com/</a></p></li><li><p><a href="https://wunkolo.github.io/OakSim/" target="_blank" rel="external">https://wunkolo.github.io/OakSim/</a></p></li><li><p><a href="http://shell-storm.org/online/Online-Assembler-and-Disassembler/" target="_blank" rel="external">http://shell-storm.org/online/Online-Assembler-and-Disassembler/</a></p></li><li><p><a href="https://onlinedisassembler.com/" target="_blank" rel="external">https://onlinedisassembler.com</a></p></li><li><p><a href="https://salmanarif.bitbucket.io/visual/index.html" target="_blank" rel="external">https://salmanarif.bitbucket.io/visual/index.html</a></p></li></ul><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://alisdair.mcdiarmid.org/arm-immediate-value-encoding/" target="_blank" rel="external">https://alisdair.mcdiarmid.org/arm-immediate-value-encoding/</a></li><li><a href="http://engold.ui.ac.ir/~nikmehr/Appendix_B2.pdf" target="_blank" rel="external">http://engold.ui.ac.ir/~nikmehr/Appendix_B2.pdf</a> 指令对应表</li><li><a href="http://armconverter.com/" target="_blank" rel="external">http://armconverter.com/</a> 在线转换</li><li><a href="http://hermes.wings.cs.wisc.edu/files/Thumb-2SupplementReferenceManual.pdf" target="_blank" rel="external">http://hermes.wings.cs.wisc.edu/files/Thumb-2SupplementReferenceManual.pdf</a></li><li><a href="http://www.binaryconvert.com/convert_signed_short.html" target="_blank" rel="external">http://www.binaryconvert.com/convert_signed_short.html</a> 二进制位查看</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;再谈arm指令编码&quot;&gt;&lt;a href=&quot;#再谈arm指令编码&quot; class=&quot;headerlink&quot; title=&quot;再谈arm指令编码&quot;&gt;&lt;/a&gt;再谈arm指令编码&lt;/h3&gt;&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="note" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/note/"/>
    
    
      <category term="arm" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>angr learning note</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/03/angr-learning-note/angr-learning-note/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/03/angr-learning-note/angr-learning-note/</id>
    <published>2019-04-03T06:29:25.000Z</published>
    <updated>2019-04-19T11:33:50.615Z</updated>
    
    <content type="html"><![CDATA[<h3 id="angr学习笔记"><a href="#angr学习笔记" class="headerlink" title="angr学习笔记"></a>angr学习笔记</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>macOS平台上面安装angr的时候还是折腾了一会，刚开始网上都说angr对python3不兼容，然后用python2去安装，但是<code>pip install angr</code>却有问题，然后看官方的文档才发现angr现在主要支持python3，python2不再支持了，反正最新版的angr安装不了(virtualenv需要python3)，要用python2的话，可以安装以前版本的。</p><blockquote><p>It is built for Python 3: Python 2 support is not feasable due to the looming EOL and the small size of our team.</p></blockquote><p>既然官方都这么说了，没理由不安装python3版本的，<code>pip3 install angr</code>一把梭吧。然后又报错了</p><pre><code class="bash">SystemExit: error: [Errno 2] No such file or directory: &#39;libunicorn.dylib&#39;</code></pre><p>明显是在安装unicorn的时候没安装成功，导致找不到其动态库。angr文档中也提及到了这个问题</p><blockquote><p>Building <code>unicorn</code> from source requires Python 2, so will fail inside a virtualenv where <code>python</code> gets you Python 3. If you encounter errors with <code>pip install angr</code>, you may need to first install <code>unicorn</code> separately, pointing it to your Python 2: <code>UNICORN_QEMU_FLAGS=&quot;--python=/path/to/python2&quot; pip install unicorn  # Python 2 is probably /usr/bin/python on your macOS system</code></p></blockquote><p>意思是unicorn兼容python2的，我本机之前已经安装了python2的unicorn，按照文档做还是不行，既然angr依赖unicorn，不如手动安装python3的unicorn。去unicorn的项目中发现可以绑定python3。</p><pre><code class="bash">$ cd bindings/python$ sudo make install3$ python3 -c &quot;import unicorn; print(unicorn.__version__)&quot;1.0.0</code></pre><p>通过这样，我的python3环境中也安装了unicorn。这时候再执行<code>pip3 install angr</code>这下一路畅通，安装完成。</p><p>迫不及待尝试导入angr试下，结果又报错了</p><pre><code>angr.state_plugins.unicorn_engine | failed loading &quot;angr_native.dylib&quot;, unicorn support disabled (dlopen(/usr/local/lib/python3.7/site-packages/angr/lib/angr_native.dylib, 6): Library not loaded: libpyvex.dylib  Referenced from: /usr/local/lib/python3.7/site-packages/angr/lib/angr_native.dylib  Reason: image not found)</code></pre><p>这个错误很明显，就是<code>angr_native.dylib</code>中加载<code>libpyvex.dylib</code>的时候找不到该动态库。看了下<code>angr_native.dylib</code>的macho格式里load command中加载<code>libpyvex.dylib</code>部分，发现是在其当前目录下去查找<code>libpyvex.dylib</code>和<code>libunicorn.1.dylib</code>。关于这个问题其实官方文档中也提及到这个问题</p><pre><code class="bash">PYVEX=`python3 -c &#39;import pyvex; print(pyvex.__path__[0])&#39;`UNICORN=`python3 -c &#39;import unicorn; print(unicorn.__path__[0])&#39;`ANGR=`python3 -c &#39;import angr; print(angr.__path__[0])&#39;`install_name_tool -change libunicorn.1.dylib &quot;$UNICORN&quot;/lib/libunicorn.dylib &quot;$ANGR&quot;/lib/angr_native.dylibinstall_name_tool -change libpyvex.dylib &quot;$PYVEX&quot;/lib/libpyvex.dylib &quot;$ANGR&quot;/lib/angr_native.dylib</code></pre><p>就是通过重新指定加载<code>libunicorn.dylib</code>和<code>libpyvex.dylib</code> 的位置。执行完脚本以后，angr算是安装完成了。</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>直接上例子来学习，官方的fauxware例子</p><p>C源码如下</p><pre><code class="c">#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;unistd.h&gt;#include &lt;fcntl.h&gt;#include &lt;stdlib.h&gt;char *sneaky = &quot;SOSNEAKY&quot;;int authenticate(char *username, char *password){    char stored_pw[9];    stored_pw[8] = 0;    int pwfile;    // evil back d00r    if (strcmp(password, sneaky) == 0) return 1;    pwfile = open(username, O_RDONLY);    read(pwfile, stored_pw, 8);    if (strcmp(password, stored_pw) == 0) return 1;    return 0;}int accepted(){    printf(&quot;Welcome to the admin console, trusted user!\n&quot;);}int rejected(){    printf(&quot;Go away!&quot;);    exit(1);}int main(int argc, char **argv){    char username[9];    char password[9];    int authed;    username[8] = 0;    password[8] = 0;    printf(&quot;Username: \n&quot;);    read(0, username, 8);    read(0, &amp;authed, 1);    printf(&quot;Password: \n&quot;);    read(0, password, 8);    read(0, &amp;authed, 1);    authed = authenticate(username, password);    if (authed) accepted();    else rejected();}</code></pre><p>简单解释下程序就是程序有一个后门，当输入的password为SOSNEAKY即可通过。下面我们用angr来求解出成功的输入</p><pre><code class="python">import angrfilename = &#39;the/filepath/of/fauxware&#39;proj = angr.Project(filename, auto_load_libs=False)st = proj.factory.entry_state()while True:    succ = st.step()    if len(succ.successors) == 2:        break    st = succ.successors[0]st1, st2 = succ.successorsprint(st1, st2)print(st1.posix.dumps(0))print(st2.posix.dumps(0))</code></pre><p>下面解释下这个python代码</p><p><code>proj = angr.Project(filename, auto_load_libs=False)</code>加载一个二进制文件，然后得到一个程序开始处的状态<code>st = proj.factory.entry_state()</code>下面从这个状态开始，一直运行直到出现分支。最后获取此时的两个状态。打印出满足条件的输入值。</p><pre><code>&lt;SimState @ 0x400692&gt; &lt;SimState @ 0x400699&gt;b&#39;\x00\x00\x00\x00\x00\x00\x00\x00\x00SOSNEAKY\x00&#39;b&#39;\x00\x00\x00\x00\x00\x00\x00\x00\x00S\x80\x80\x80@\x80\x80\x00\x00&#39;</code></pre><p>可以看出st1也就是成功授权的输入为SOSNEAKY。</p><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><h5 id="factory"><a href="#factory" class="headerlink" title="factory"></a>factory</h5><p>该对象提供了大多数的功能，能够将二进制对象分解为很方便处理的对象。</p><ul><li><p>blocks</p><p><code>project.factory.block()</code>给定一个地址，返回其basic block，这里的block与llvm中的block一致。获取了block就能进一步对其指令等操作。</p><pre><code class="python">block = proj.factory.block(proj.entry)block.pp() # 打印block反汇编代码block.instructions # 指令个数block.instruction_addrs # 指令地址list</code></pre></li><li><p>states</p><p>angr里面很重要的一个对象，代表了程序的一个实例镜像，是模拟执行某个时刻的状态。</p><pre><code class="python">state = proj.factory.entry_state()&lt;SimState @ 0x401670&gt;</code></pre><p>既然是程序模拟运行过程中的某个状态，那么SimState就包含了程序内存，寄存器，文件系统等数据。而且这些数据是可以被修改。</p><pre><code class="python"># 访问寄存器和内存&gt;&gt;&gt; state.regs.rip        # get the current instruction pointer&lt;BV64 0x401670&gt;&gt;&gt;&gt; state.regs.rax&lt;BV64 0x1c&gt;&gt;&gt;&gt; state.mem[proj.entry].int.resolved  # interpret the memory at the entry point as a C int&lt;BV32 0x8949ed31&gt;# 修改寄存器和内存&gt;&gt;&gt; state.regs.rsi = state.solver.BVV(3, 64)&gt;&gt;&gt; state.regs.rsi&lt;BV64 0x3&gt;&gt;&gt;&gt; state.mem[0x1000].long = 4&gt;&gt;&gt; state.mem[0x1000].long.resolved&lt;BV64 0x4&gt;</code></pre><p>这些数据都是bitvectors，所以需要一个转换</p><pre><code class="python">&gt;&gt;&gt; bv = state.solver.BVV(0x1234, 32)       # create a 32-bit-wide bitvector with value 0x1234&lt;BV32 0x1234&gt;                               # BVV stands for bitvector value&gt;&gt;&gt; state.solver.eval(bv)                # convert to python int0x1234</code></pre><p><code>mem</code>有几点需要注意：</p><ul><li><code>.type</code>有<code>char, short, int, long, size_t, uint8_t, uint16_t</code>等</li><li><code>.resolved</code>得到bitvector；<code>.concrete</code>得到int值</li></ul></li><li><p>simulation managers</p><p>state代表了某个时刻的程序状态，那么simulation managers就代表了程序如何进入下一个state。</p><pre><code class="python">&gt;&gt;&gt; simgr = proj.factory.simulation_manager(state)&lt;SimulationManager with 1 active&gt;&gt;&gt;&gt; simgr.active[&lt;SimState @ 0x401670&gt;]</code></pre><p>这里我们用state去初始化了simulation managers得到了一组state。<code>.active</code>返回当前state。</p><pre><code class="python">&gt;&gt;&gt; simgr.step()&gt;&gt;&gt; simgr.active[&lt;SimState @ 0x1020300&gt;]&gt;&gt;&gt; simgr.active[0].regs.rip                 # new and exciting!&lt;BV64 0x1020300&gt;&gt;&gt;&gt; state.regs.rip                           # still the same!&lt;BV64 0x401670&gt;</code></pre><p>通过上面的方法去执行程序，这样会得到下一个state，此时active的state已经变了，step方法会执行到下一个basic block。之前的state仍然保留不变。</p></li></ul><h4 id="待更新"><a href="#待更新" class="headerlink" title="待更新"></a>待更新</h4><p>…</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://docs.angr.io/core-concepts/" target="_blank" rel="external">https://docs.angr.io/core-concepts/</a></li><li><a href="https://www.secpulse.com/archives/83197.html" target="_blank" rel="external">https://www.secpulse.com/archives/83197.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;angr学习笔记&quot;&gt;&lt;a href=&quot;#angr学习笔记&quot; class=&quot;headerlink&quot; title=&quot;angr学习笔记&quot;&gt;&lt;/a&gt;angr学习笔记&lt;/h3&gt;&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="note" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/categories/note/"/>
    
    
      <category term="angr" scheme="https://github.com/4ch12dy/4ch12dy.github.io.git/tags/angr/"/>
    
  </entry>
  
  <entry>
    <title>applepie writeup分析</title>
    <link href="https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/02/applepie/applepie/"/>
    <id>https://github.com/4ch12dy/4ch12dy.github.io.git/2019/04/02/applepie/applepie/</id>
    <published>2019-04-02T06:02:40.000Z</published>
    <updated>2019-04-30T04:08:21.329Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Need password to decrypt!" />    <label for="pass">Need password to decrypt!</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      something you can not kown 
    
    </summary>
    
    
  </entry>
  
</feed>
